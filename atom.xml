<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小土豆</title>
  
  <subtitle>-博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://smallpotatody.github.io/"/>
  <updated>2019-04-28T04:51:54.973Z</updated>
  <id>https://smallpotatody.github.io/</id>
  
  <author>
    <name>smallpotato</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>嵌入式复习</title>
    <link href="https://smallpotatody.github.io/2019/04/26/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%A4%8D%E4%B9%A0/"/>
    <id>https://smallpotatody.github.io/2019/04/26/嵌入式复习/</id>
    <published>2019-04-26T03:00:43.000Z</published>
    <updated>2019-04-28T04:51:54.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p><strong>嵌入式系统概念：</strong>以应用为中心，以计算机为基础，软件、硬件可裁剪，功能、可靠性、成本、体积、功耗严格要求的专用计算机系统（国内）；用于控制、监控或辅助操作机器和设备的装置（IEEE）；</p><p><strong>嵌入式发展阶段：</strong>无操作系统阶段、简单操作系统阶段、实时操作系统阶段、面向Internet阶段；</p><p><strong>嵌入式应用领域：</strong>工业控制、交通管理、信息家电、家庭智能管理、网络及电子商务、环境监测和机器人等方面。</p><p><strong>嵌入式技术的发展趋势：</strong></p><ol><li><p>嵌入式应用软件的开发需要强大的开发工具和操作系统的支持；</p></li><li><p>联网成为必然趋势；</p></li><li><p>精简系统内核、算法，设备实现小尺寸、微功耗和低成本；</p></li><li><p>提供精巧的多媒体人机界面；</p><p>嵌入式系统的基本组成：</p></li></ol><p><img src="/2019/04/26/嵌入式复习/1.png" alt></p><p><img src="/2019/04/26/嵌入式复习/2.png" alt></p><p><strong>嵌入式系统的重要特征：</strong></p><ol><li><p>系统内核小</p></li><li><p>专用性强</p></li><li><p>系统精简和高实时性操作系统</p></li><li><p>高效率的设计</p></li><li><p>创新性和有效性</p></li><li><p>嵌入式软件开发走向标准化</p></li><li><p>嵌入式系统开发工具和环境</p></li></ol><p><strong>嵌入式系统的硬件组成：</strong></p><p>嵌入式系统基本硬件架构主要包括有处理器、外围电路及接口和外部设备三大部分。其中外围电路一般有时钟、复位电路、程序存储器、数据存储器和电源模块等部件组成；</p><p><img src="/2019/04/26/嵌入式复习/3.png" alt></p><p><strong>嵌入式处理器分类：</strong></p><p>​     嵌入式微控制器（MCU）：主要特点：单片化，体积大大减小，功耗和成本低、可靠性提高。</p><p>​      嵌入式DSP处理器（DSP）：专门用于信号处理方面的处理器，具有在系统结构和指令算法方面进行了特殊设计，执行DSP算法，编译效率较高，指令执行速度也很快。</p><p>​      嵌入式微处理器（MPU）：只保留和嵌入式应用紧密相关的功能硬件，去除冗余部分，体积小、重量轻、成本低、可靠性高的优点。</p><p>​      嵌入式片上系统（System On Chip）：成功实现了软/硬件无缝结合。可以直接在处理器片内嵌入操作系统的代码模块。可以用VHDL等硬件描述语言进行系统设计。只需要使用精确的编程语言，综合时序设计可直接在器件库中调用各种通用处理器标准。</p><p><img src="http://ww1.sinaimg.cn/large/005zgLb3gy1g2fuk0jeq3j30x50l0gmb.jpg" alt></p><p><strong>嵌入式系统好处：</strong>就是屏蔽了底层硬件的差别，给上层应用提供统一的接口，并管理进程调度和资源（如<strong><strong>CPU</strong></strong>时间、内存）分配等。</p><p><strong>主要有实时系统、分时系统（非实时系统）和顺序执行系统。</strong></p><p>（1）实时操作系统：系统内有多个程序运行，每个程序有不同的优先级，只有最高优先级的任务才能占有CPU的控制权。VXworks、UC/OS</p><p>（2）分时操作系统：系统内同时可以有多个程序运行，把CPU的时间分按顺序分成若干片，每个时间片内执行不同的程序，如UNIX，windows。</p><p>（3）顺序执行系统：系统内只含有一个程序，独占CPU的运行时间，按语句顺序执行该程序，直至执行完毕，另一程序才能启动运行。如DOS操作系统</p><p><strong>实时性：</strong></p><p>它的正确性不仅与系统的逻辑正确性相关，而且与系统的响应时间相关。</p><p>具有强(硬）实时特点的嵌入式操作系统</p><p>​      系统在指定的时间内未能实现某个确定的任务，会导致系统的全面失败，则被称为硬（强）实时系统。硬实时系统，其系统响应时间在毫秒或微秒级。一个硬实时系统通常在硬件上需要添加专门用于时间和优先级管理的控制芯片，uc/os和VxWorks是典型的实时操作系统。</p><p>具有弱（软）实时特点的嵌入式操作系统</p><p>​      在软实时系统中，虽然响应时间同样重要，但是超时却不会发生致命的错误。软实时系统则主要在软件方面通过编程实现现实的管理。比如Windows CE、uCLinux是一个多任务分时系统。一般软实时系统，其系统响应时间在毫秒或几秒的数量级上，其实时性的要求比强实时系统要差一些（电子菜谱的查询）。</p><p><strong>第一章：</strong></p><ol><li><strong>在日常生活中，你接触过哪些嵌入式产品？他们都有些什么功能?</strong></li></ol><p><strong>答：数字电视、手持通信、智能玩具。</strong></p><ol><li><strong>嵌入式硬实时操作系统与软实时操作系统的区别是什么？</strong></li></ol><p><strong>答：硬实时操作系统的系统在指定的时间内未能实现某个确定的任务，会导致系统的全面失败，一个硬实时系统通常在硬件上需要添加专门用于时间和优先级管理的控制芯片，响应时间在毫秒或微秒级上。在软实时系统中，虽然响应时间同样重要，但是超时却不会发生致命的错误。软实时系统则主要在软件方面通过编程实现现实的管理，系统响应时间在毫秒或几秒的数量级上</strong></p><ol><li><strong>嵌入式处理器是如何分类的？</strong></li></ol><p><strong>答：嵌入式微控制器（MCU）、嵌入式DSP处理器（DSP）、嵌入式微处理器（MPU）、嵌入式片上系统（System On Chip）。</strong></p><ol><li><strong>嵌入式操作系统的作用是什么？</strong></li></ol><p><strong>答：屏蔽了底层硬件的差别，给上层应用提供统一的接口，并管理进程调度和资源（如CPU**</strong>时间内存）分配等。**</p><ol><li><strong>交叉开发的概念。</strong></li></ol><p><strong>答：在一台通用计算机上进行软件的编辑、编译，然后下载到嵌入式系统中运行调试。</strong></p><ol><li><strong>主流的操作系统的特点</strong></li></ol><p><strong>答：windows：用户多；Linux：开源，免费；</strong></p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><p><strong>嵌入式系统的硬件基本组成</strong></p><p>嵌入式系统的硬件是以嵌入式微处理器为核心，主要由嵌入式微处理器、总线、存储器以及I/O接口和设备组成。</p><p><strong>嵌入式微处理器的体系结构</strong></p><p><img src="/2019/04/26/嵌入式复习/2_4.png" alt>目前使用冯．诺依曼结构的CPU和微控制器品种有很多，例如Intel公司的8086系列及其他CPU，ARM公司的ARM7、MIPS公司MIPS处理器等。</p><p>目前使用哈佛结构的CPU和微控制器品种有很多，除DSP处理器外，还有摩托罗拉公司的MC68系列、Zilog公司的Z8系、ATMEL公司的AVR系列和ARM公司的ARM9、ARM10和ARM11等。</p><p><img src="/2019/04/26/嵌入式复习/2_5.png" alt></p><p><strong>总线</strong></p><ul><li><p>片内总线：与嵌入式微处理器集成在一起（如：AMBA、AVALON、OCP、ISHBONE等）。</p></li><li><p>片外总线：集成在嵌入式微处理器内或外接芯片扩展上，用于连接外部设备。</p><p><em>片内总线的选择取决于CPU core；片外总线的选择取决与应用；</em></p></li></ul><p><strong>存储器</strong></p><p>片内存储器:存储容量小、速度快、价格较高</p><p>可以做主存的存储器有：</p><p>​              ROM类：Nor Flash、EPROM、E2PROM、PROM等；</p><p>​              RAM类：SRAM、DRAM、SDRAM等；</p><p>外存：容量大、成本低</p><p> 在嵌入式系统中常用的外存有：</p><p>​               NandFlash</p><p>​               DOC（Disk On Chip）</p><p>​               CF（Compact Flash）</p><p>​               SD（Secure Digital）</p><p>​               MMC（Multi MediaCard）等</p><p>SRAM速度快、价格贵；</p><p>DRAM速度较SRAM慢、价格便宜；</p><p> NOR Flash具有随机存储速度快、电压低、功耗低、稳定性高等特点。</p><p>NandFlash具有容量大、回写速度快、芯片面积小等特点，主要用于外存。</p><p><strong>输入/输出接口和设备</strong></p><p>输入/输出接口主要有中断控制器、DMA、串行和并行接口等，设备主要有定时器（Timers）、计数器（counters）、看门狗（watchdog timers）、RTC、UARTs、PWM（Pulse width modulator）、AD/DA、显示器、键盘和网络等。</p><p><strong>嵌入式处理器分类</strong></p><p>按用途来分,嵌入式微处理器可以分为嵌入式DSP和通用的嵌入式微处理器两种；</p><p>在最普通的情况下，嵌入式微处理器包括：</p><p>片内存储器：部分嵌入式微处理器</p><p>外部存储器的控制器，外设接口(串口，并口)</p><p>LCD控制器：面向终端类应用的嵌入式微处理器</p><p>中断控制器，DMA控制器，协处理器</p><p>定时器，A/D、D/A转换器</p><p>多媒体加速器：当高级图形功能需要时</p><p>总线</p><p>其他标准接口或外设</p><p><strong>流水线</strong></p><p>通常采用单周期执行指令，可能导致比较长的流水线</p><p>流水线的概念：流水线，亦称管线，是现代计算机处理器中必不可少的部分，是指将计算机指令处理过程拆分为多个步骤，并通过多个硬件处理单元并执行来加快指令执行速度。</p><p><strong>嵌入式微处理器的功耗管理</strong></p><ul><li>降低工作电压</li><li>提供不同的时钟频率</li><li>关闭暂时不使用的功能块</li></ul><p><strong>提供功耗管理机制</strong> </p><p>运行模式（Running Mode）：处理器处于全速运行状态下。</p><p>待命模式（Standby Mode）：处理器不执行指令，所有存储的信息是可用的，处理器能在几个周期内返回运行模式。</p><p>时钟关闭模式（clock-off mode）：时钟完全停止，要退出这个模式系统需要重新启动。</p><p>影响功耗的其他因素还有总线和存储器的类型大小</p><p> ARM(Advanced RISC Machine)是专门从事基于RISC技术芯片设计开发的公司，主要出售芯片设计技术的授权，作为知识产权供应商，本身不直接从事芯片生产，靠转让设计许可由合作公司生产各具特色的芯片，半导体生产商从ARM公司购买其设计的ARM微处理器核，根据各自不同的应用领域，加入适当的外围电路，从而形成自己的ARM微处理器芯片进入市场。</p><p>ARM内核是一种32位RISC微处理器，具有功耗低、性价比高、代码密度高等三大特色。</p><p><strong>什么是Thumb指令？</strong></p><p>​       Thumb指令集可以看作是ARM指令压缩形式的子集，它是为减小代码量而提出，具有16bit的代码密度。</p><p><strong>什么是Thumb-2指令？</strong></p><p>​     Thumb-2是16位Thumb指令集的一个超集，在Thumb-2中，16位指令首次与32位指令并存，结果在Thumb状态下可以做的事情丰富了许多。</p><p>‘T’是Thumb指令或者Thumb-2指令；</p><p>‘E’提供DSP能力</p><p>‘J’增加了Jazelle扩展以支持Java加速技术</p><p><strong>数据类型</strong></p><ul><li>字节型类型（Byte）：数据宽度为8bits</li><li>半字数据类型（HalfWord）：数据宽度为16bits，存取式必须是以2字节对齐方式</li><li>字数据类型（Word）：数据宽度为32bits，存取时必须以4字节对齐的方式</li></ul><p>char：1</p><p>short：2</p><p>int：4</p><p>long：4</p><p>float：4</p><p>double：8</p><p><strong>什么叫字节对齐？</strong><br>   如果一个数据是以能被4或者2整除的地址开始的连续存储，那么它就是字节对齐，否则就是非字节对齐。</p><p><strong>为什么必须字节对齐？</strong></p><p>原因：各个硬件平台对存储空间的处理上有很大的不同。一些平台对某些特定类型的数据只能从某些特定地址开始存取。如有些只能访问偶地址，有些只能访问4的倍数地址。字节对齐存储可提高CPU效率</p><p><strong>7种CPU模式</strong></p><p><img src="/2019/04/26/嵌入式复习/2_1.png" alt></p><p><img src="/2019/04/26/嵌入式复习/2_2.png" alt></p><p><strong>处理器工作状态：</strong></p><ul><li><p>ARM:32位，执行字对准的ARM指令（从能被4整除的存储器地址一次取4字节arm指令）</p></li><li><p>Thumb:16位，执行半字对准的Thumb指令（从能被2整除的存储器地址一次取2字节Thumb指令）</p><p>ARM和Thumb之间状态的切换不影响处理器的模式或寄存器的内容</p><p><strong>处理器为什么要有两种状态？</strong></p><p>在保证处理器性能的同时，更少的占用内存，更低的功耗</p></li></ul><p>ARM处理器有37个寄存器</p><p> 31个通用寄存器：程序计数器、堆栈及其他通用寄存器；6个状态寄存器</p><p>R8-R12各有两组物理寄存器：一组为FIQ模式，另一组是除FIQ以外的其他模式。</p><p>R13-R14各有6个分组的物理寄存器，一个用于用户模式和系统模式，其他5个分别用于5种异常模式。访问时需要指定它们的模式，如：R13_＜mode＞，R14_＜mode＞；其中：＜mode＞可以从usr、svc、abt、und、irq和fiq六种模式中选取一个</p><p><strong>程序状态寄存器</strong></p><p><img src="/2019/04/26/嵌入式复习/2_3.png" alt></p><p><strong>异常</strong></p><p>是由内部或者外部原因引起的，当异常发生时CPU将暂停执行当前指令自动到指定的向量地址读取指令并且执行。</p><p><img src="/2019/04/26/嵌入式复习/2_6.png" alt></p><p><img src="/2019/04/26/嵌入式复习/2_7.png" alt></p><p><img src="/2019/04/26/嵌入式复习/2_8.png" alt></p><p><strong>内存和I/O</strong></p><p>ARM的寻址空间是线性的地址空间，2^32=4G</p><p>ARM支持大端和小端的内存数据方式</p><p><img src="/2019/04/26/嵌入式复习/2_9.png" alt></p><p><img src="/2019/04/26/嵌入式复习/2_10.png" alt></p><p><img src="/2019/04/26/嵌入式复习/2_11.png" alt></p><p><strong>总线宽度、频率与总线带宽之间的关系</strong></p><p>答：总线带宽=（总线宽度/8）总线频率</p><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><p><img src="/2019/04/26/嵌入式复习/3_1.png" alt></p><ol><li><p>驱动层BSP</p><ul><li><p>BSP的概念：BSP是板级支持包，是介于主板硬件和操作系统之间的一层，属于操作系统的一部分，主要目的是为了支持操作系统，使之能够更好的运行与硬件主板。</p><p><strong>BSP对于不同的操作系统有不同的形式</strong></p></li></ul></li><li><p>操作系统层OS</p><ul><li>操作系统功能简单来说就是隐藏硬件细节，而只提供给应用程序开发人员一个个抽象的接口。</li><li>操作系统层包括嵌入式内核、嵌入式TCP/IP网络系统、嵌入式文件系统、嵌入式GUI系统和电源管理等部分。其中嵌入式内核是基础和必备的部分，其他部分要根据嵌入式系统的需要来确定。</li><li><strong>操作系统负责确定可在CPU上执行的程序及其执行时间的长短，此功能称为进程调度，调度的方法由操作系统所定的优先策略决定。</strong></li></ul></li><li><p>中间层</p><ul><li>中间层为上层软件提供了设备操作接口。</li></ul></li><li><p>应用层</p><ul><li>应用层软件主要由多个相对独立的应用任务组成。每个应用任务完成特定的工作。</li></ul></li></ol><p><strong>嵌入式软件运行流程：</strong></p><p><img src="/2019/04/26/嵌入式复习/3_2.png" alt></p><ol><li><p>上电复位、板级初始化阶段</p><p>嵌入式系统完成上电复位后完成板级初始化工作。板级初始化程序具有完全的硬件特性，一般采用汇编语言实现。不同的嵌入式系统，板级初始化时要完成的工作具有一定的特殊性，但以下工作一般是必须完成的：</p><ul><li>CPU中堆栈指针寄存器的初始化。</li></ul><ul><li>CPU芯片级的初始化：中断控制器、内存等的初始化。</li></ul></li><li><p>系统引导/升级阶段</p><p>根据需要分别进入系统软件引导阶段或系统升级阶段。通过测试通信端口数据或判断特定开关的方式分别进入不同阶段。</p><ul><li>远程升级：TFTP、FTP、HTTP</li><li>串口本地升级：超级终端、特定升级软件</li></ul></li><li><p>系统初始化阶段</p><p>系统初始化需要按特定顺序进行</p></li><li><p>应用初始化阶段</p><p>进行应用任务的创建，信号量、消息队列的创建和应用相关的其它初始化工作。</p></li><li><p>多任务应用运行阶段</p><p>系统进入多任务状态，操作系统按照已确定的算法进行任务调度，各应用任务分别完成特定功能。</p></li></ol><p><strong>操作系统可以简单的分为通用操作系统和实时操作系统（RTOS）</strong></p><p>实时操作系统就是”在给定时间内提供某种程度的服务，如果在规定的时间内没有得到结果，那整个的系统就是失败”。</p><p>实时操作系统特点：</p><ul><li>多任务</li><li>任务的事件驱动</li><li><p>中断与中断优先级</p><ul><li>异常中断的优先级</li><li>微处理器的异常中断响应过程</li><li>从异常中断处理程序中返回</li></ul></li><li><p>同步与异步</p></li><li>资源与临界资源</li><li>容错与安全</li></ul><p><strong>操作系统体系结构：</strong></p><p>体系结构是操作系统的基础，它定义了硬件与软件的界限、内核与操作系统其它组件的组织关系、系统与应用的接口。</p><p>目前操作系统的体系结构可分为：单块结构（Linux）、层次结构和客户/服务器（微内核）结构。</p><p><img src="/2019/04/26/嵌入式复习/3_3.png" alt></p><p>目前嵌入式操作系统主要采用分层和模块化相结合的结构或微内核结构。</p><p>分层和模块化相结合的结构将操作系统分为硬件无关层、硬件抽象层和硬件相关层，每层在划分功能模块。移植工作便集中在硬件相关层。微内核结构便于扩展。</p><p><img src="/2019/04/26/嵌入式复习/3_4.png" alt></p><p><img src="/2019/04/26/嵌入式复习/3_5.png" alt></p><ol><li><p>嵌入式操作系统的功能</p><p>负责嵌入式系统的全部软、硬件资源的分配、调度，将CPU时钟、I/O、中断等资源封装起来给用户提供一个标准的API接口，供用户调用。由应用程序接口、设备驱动程序接口、设备驱动、操作系统内核等组成。</p></li><li><p>嵌入式内核</p><ul><li>任务管理</li><li>内存管理</li><li>通信、同步和互斥机制</li><li>中断管理</li><li>时间管理任务扩展功能</li></ul></li></ol><p><strong>实时系统的评价指标</strong></p><p>在实时系统中主要有三个指标来衡量系统的实时性，即响应时间（Response Time）、生存时间（Survival Time）、吞吐量（Throughput）。</p><ul><li>响应时间：是计算机识别一个外部时间到作出响应的时间，在控制应用中它是最重要的指标，如果实践部能即时处理，系统可能就会崩溃。<ul><li>任务调度，这是操作系统内核的主要职责之一，它决定该轮到哪个任务运行了,调度是基于任务的优先级。</li></ul></li><li>生存时间：是数据有效等待时间，在这段时间里数据是有效的。</li><li>吞吐量：是在一给定时间内，系统可以处理的事件总数。</li></ul><p><img src="/2019/04/26/嵌入式复习/3_6.png" alt></p><p>非占先式内核的优缺点：</p><ul><li>优点：正在运行着的任务占有CPU，而不必单行被别的任务抢占。</li><li>缺点：其响应高优先级的任务慢。</li></ul><p><img src="/2019/04/26/嵌入式复习/3_7.png" alt></p><p><strong>常见的嵌入式操作系统特点：</strong></p><p>  1.uC/OS-II:公开源代码、代码结构清晰、注释详尽、组织有调理、可移植性好、可裁剪、可固化、抢占式内核、最多可管理60个任务。可用于8位，16/32位单片机或DSP。</p><p>  2.Linux:具有可移植性、一定的稳定性、各种性能的升级能力，开发更容易。开放源代码，不存在黑箱技术。内核小、功能强大、运行稳定、效率高。开放源代码的操作系统易于定制裁剪，在价格上极具竞争力。不支持X86CPU，还可支持其他数十种CPU芯片。有大量的且不断增加的开发工具和开发环境。其内核的结构在网络方面是非常完整的，提供了对多种互联网方式的全面支持。</p><p>  3.Windows  CE:其核心全是由C语言开发，内核提供内存管理、抢先多任务和中断处理功能。具有高度模块化，可在内核基础上添加各种模块，适合作为可裁剪的32位嵌入式操作系统，既适用于工业设备的嵌入式控制模块，也适用于消费类电子产品。其核允许每个进程有256个优先级，采用抢占式优先权调度法。它嚄没有DOS模式，不能运行现有的应用程序，有严格的内存限制，有精简的运行库和API，硬件并不十分标准化。</p><p>  4.VxWorks:具有可靠性、实时性和可裁剪性。支持多种处理器，如:x86、i960、Sun  Sparc、MIPS、PowerPC等。</p><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><p><strong>嵌入式系统大致可以分为四个层次：</strong></p><ul><li><p>硬件层</p><p>特点：</p><ul><li>处理器体系结构不统一</li><li>硬件资源通常受限</li><li>外部设备的种类繁多</li><li>有实时性和可靠性要求</li></ul></li><li><p>OEM层</p><ul><li><p>Bootloader的功能：初始化硬件,加载操作系统映像（0S Image ）到内存，然后跳转到操作系统代码去执行。</p></li><li><p>BSP是介于主板硬件和操作系统之间的一层也可以说是属于操作系统的一部分，主要目的是为了支持操作系统使之能够正常地运行于硬件主板上。</p></li><li><p>bootLoader获得操作系统的方式：</p><p>​     方式一:串口、USB(U-BOOT)、以太网下载(E-BOOT)；</p><p>​    方式二：从本地的存储设备例如CF卡和硬盘中读取操作系统映像。</p></li></ul></li><li><p>操作系统层</p><ul><li><p>Windows CE 是一个微内核操作系统。操作系统的基本功能被放在多个独立的进程（EXE）里面实现。在运行的时候，这些进程大致有如下几个：</p><ul><li><p>内核NK. EXE ; </p></li><li><p>图形系统GWES. EXE ;</p></li><li><p>对象存储FILESYS .EXE ; </p></li><li><p>设备管理系统DEVICE .EXE ; </p></li><li><p>服务SERVICES. EXE</p></li></ul></li></ul></li><li><p>应用程序层</p><ul><li>应用程序层位于Windows CE层次结构的最顶层。从系统的角度看，每个应用程序都是Windows CE 中的单独的程。</li><li>在Windows CE中，应用程序与操作系统交互的接口同样是Win32 API <strong>。</strong></li></ul><p><img src="/2019/04/26/嵌入式复习/4_1.png" alt></p><p><strong>进程与线程</strong>：</p><ul><li>进程：进程即是程序的一次动态执行实例。</li><li>线程：线程是Windows CE中最小的可执行单元。</li></ul></li></ul><p>进程与程序的区别：</p><ul><li>进程是动态概念，而程序是静态的概念。</li><li>进程有创建、执行及结束完整的生命周期，而程序只是一个文件。</li><li>一个进程可以对应多个进程，而一个进程只能对应一个程序。</li></ul><p><strong>进程本身不参加系统的调度，也没有有优先级和上下文。真正参加系统调度的是线程，系统只识别和调度线程，每个进程在创建的时候都会创建一个主线程作为该进程默认的执行体。进程只是线程的容器。一个进程可拥有的线程数理论上是没有限制的，只与当前可用的内存有关。系统中同时最多只能有32个进程。</strong></p><p><strong>wince线程的状态</strong></p><p><img src="/2019/04/26/嵌入式复习/4_2.png" alt></p><p><strong>Windows CE开发流程：</strong></p><p><img src="/2019/04/26/嵌入式复习/4_3.png" alt></p><ol><li><p>硬件设计</p><ul><li>自己设计硬件：开发难度大、周期长，需要开发人员有很好的硬件基础。</li><li>从OEM厂商购买：难度最小，周期最短，需要一定的经费，有较好的售后支持。</li></ul></li><li><p>定制操作系统</p></li><li>应用程序开发<ul><li>安装包（像桌面Windows一样）</li><li>作为操作系统的一个组件，打包进入操作系统的运行时映像中。</li></ul></li></ol><p><strong>WinCE开发环境过程</strong></p><ol><li>安装.NET Framework</li><li>安装Platform Builder开发工具和升级包</li><li>安装开发板支持包根据具体的实验箱而定</li><li>建立并编译WinCE系统平台</li><li>定制软件开发工具包（SDK）</li><li>建立eMbedded Visual C++ 4.0开发环境（EVC文件夹）</li><li>安装同步软件</li></ol><p><strong>Windows CE开发中涉及到的工具</strong></p><ol><li>Platform Buider</li></ol><ul><li>功能：<ul><li>可对Windows CE操作系统进行定制、构建、下载、调试及发布；</li><li>可开发简单的基于Windows CE的应用程序；</li></ul></li></ul><ol start="2"><li>Visual Studio</li></ol><ul><li>功能：<ul><li>可编写Windows应用程序、Web应用程序和移动设备应用程序。</li></ul></li></ul><ol start="3"><li>eMbedded Visual C++</li></ol><ul><li><p>功能：</p><ul><li><p>可用C/C++语言来为Windows CE开发应用程序</p><p><em>如果使用EVC4为Windows CE5.0开发应用程序，那么就必须安装EVCSP4</em></p></li></ul></li></ul><ol start="4"><li><p>SDK</p><ul><li>SDK概念：软件开发工具包是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等创建应用软件的开发工具的集合。</li><li>功能<ul><li>为某种特定的Windows CE平台开发应用程序，必须安装特定的SDK。</li></ul></li></ul></li><li><p>ACtiveSync</p><ul><li><p>简介：ActiveSync用来连接Windows CE设备和安装桌面Windows的PC机的工具。</p><p>主要功能：</p><ul><li><p>PC机可借助ActiveSync的通信功能查看Windows CE上的文件系统，以及安装软件。</p></li><li><p>对于开发人员，还可使用ActiveSync下载编写的应用程序和进行代码调试。</p></li></ul></li></ul></li></ol><p>依赖关系：对各种软件的安装必须按一定顺序；否则可能导致软件或则软件的部分功能不能使用。</p><h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><p>•    <strong>Wince的平台初始化文件 common．<em> 文件、 platform．</em> 文件、project．*文件的作用域；读懂.dat文件的代码，读懂.bib中 memory、modules、files的代码。</strong></p><p><strong>答：common．*文件的作用域是所有的OSDesign，对common．x文件的修改会影响到所有的OSDesign</strong></p><p>  <strong>platform．<em> 文件的作用范围是使用该BSP的OSDesign，因此一般把与硬件相关的配置信息放到platform．</em>文件中；</strong></p><p>  <strong>project．<em> 文件的作用范围仅仅是当前OS Design，一般在poject．</em>文件中只存放与本项目相关的一些配置信息。</strong></p><p><strong>;;创建根目录下子目录Program Files</strong></p><p><strong>root: -Directory (“Program Files”)</strong></p><p><strong>;;创建目录Program Files下一个子目录My Projects</strong></p><p><strong>Directory (“\Program Files”): -Directory (“My Projects”)</strong></p><p><strong>;;复制文件从\Windows\Myproj.exe到\Program Files\My Projects\My Project.exe</strong></p><p><strong>Directory (“\Program Files\My Projects”): -File (“My Project.exe”, “\Windows\My</strong></p><p><strong>proj.exe”)</strong></p><p><strong>;;复制文件从\Windows\control.lnk到\control.lnk</strong></p><p><strong>root: -File (“\control.lnk”, “\Windows\control.lnk”)</strong></p><p><strong>MEMORY</strong></p><p><strong>; Name     Start     Size      Type</strong></p><p><strong>modules</strong>、<strong>files</strong></p><p><strong>模块名称</strong>      <strong>路径</strong>                 <strong>内存块</strong>  <strong>类型</strong></p><p><strong>; @CESYSGEN IF CE_MODULES_DEVICE</strong></p><p><strong>device.exe $(_FLATRELEASEDIR) \device.exe NK SHM</strong></p><p>•    <strong>SDK的概念及作用</strong></p><p><strong>答：SDK是一系列头文件、库文件、文档、平台管理器和运行时库的总称。应用开发人员可使用SDK为某个特定平台开发应用程序。</strong></p><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><p><strong>Windows CE应用程序开发工具：</strong></p><p>1.Platform Builder</p><p>应用程序将被链接到OS内核中</p><p> 一旦修改代码，必须再重新编译镜像</p><p>容易调试OS内核,不容易调试应用程序</p><p>2.Embedded Visual C++</p><p>易于调试和测试</p><p>必须安装相应的为特定平台开发的SDK，从而开发相应的应用程序</p><p>3.VIsual Studio</p><p>目标平台上需要安装 .NET compact framework</p><p>易于调试和测试</p><p>必须安装相应的为特定平台开发的SDK，从而开发相应的应用程序</p><p>4.Embedded Visual Tools 3.0</p><p><strong>应用程序开发流程：</strong></p><p>1.安装合适的SDk</p><p>2.编写代码和调试</p><p>3.发布应用程序</p><p><strong>两种途径获得SDK：</strong></p><p>1.开发人员可以从微软或者第三方处获得SDK；</p><p>2.开发人员可以通过Platform Builder导出自己的SDK；</p><p><strong>应用程序发布涉及到代码签名和代码打包</strong></p><p><strong>Windows CE应用程序开发，代码的选择：</strong></p><p>1.托管代码：是指使用.NET compact framework开发的程序代码，执行时需要有.NET的运行时环境。</p><p>2.本地代码：是指用C++等高级语言开发的程序代码，可执行文件被编译成与CPU指令集有关的机器码，可以直接运行。</p><p><strong>托管代码主要的优缺点</strong></p><p>优点：与硬件平台无关；与编程语言无关；</p><p>缺点：执行效率低；</p><p><strong>托管代码优缺点与本地代码优缺点互补</strong></p><p><strong>Windows CE的应用编程接口（API）</strong></p><ol><li><p>Win32 API（应用程序接口）</p><p>包括源代码文件（.c/.cpp/.H等）和资源文件（.BMP/.ICO/.CUR/.FON）</p><p>源代码文件经过C/C++编译器编译后形成目标文件；资源文件经过资源编译器编译后形成.RES二进制资源。然后，链接器负责把目标文件、二进制资源及库文件等统一链接，最终形成可执行文件。</p></li><li><p>MFC与ATL</p></li><li><p>Microsoft .NET Framework精简版</p><p><strong>各种编程接口的比较</strong></p><p>资源大小：</p></li></ol><p><img src="/2019/04/26/嵌入式复习/6_1.png" alt></p><p>开发效率和执行时间：</p><p><img src="/2019/04/26/嵌入式复习/6_2.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;嵌入式系统概念：&lt;/strong&gt;以应用为中心，以计算机为基础，软件、硬件可裁剪，功能、可靠性、成本、体积、功耗严格
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://smallpotatody.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="嵌入式" scheme="https://smallpotatody.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>用VMware Workstation15安装Ubuntu19.04</title>
    <link href="https://smallpotatody.github.io/2019/04/25/%E7%94%A8VMware-Workstation15%E5%AE%89%E8%A3%85Ubuntu19-04/"/>
    <id>https://smallpotatody.github.io/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/</id>
    <published>2019-04-25T00:50:29.000Z</published>
    <updated>2019-04-25T03:16:36.287Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ubuntu（友帮拓、优般图、乌班图）是一个以<a href="https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2" target="_blank" rel="noopener">桌面</a>应用为主的开源GNU/Linux操作系统，Ubuntu 是基于<a href="https://baike.baidu.com/item/Debian" target="_blank" rel="noopener">Debian</a>GNU/<a href="https://baike.baidu.com/item/Linux" target="_blank" rel="noopener">Linux</a>，支持x86、amd64（即x64）和<a href="https://baike.baidu.com/item/ppc/150" target="_blank" rel="noopener">ppc</a>架构，由全球化的专业开发团队（Canonical Ltd）打造的。</p></blockquote><h1 id="1-下载Ubuntu"><a href="#1-下载Ubuntu" class="headerlink" title="1.下载Ubuntu"></a>1.下载Ubuntu</h1><p>ubuntu下载地址：<a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">官网</a></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/1.png" alt></p><p>18是LTS版是长期支持（Long Term Support）的缩写。直到2023年四月，免费安全和维护更新。19只提供九个月到2020年1月，根据自己需求选择，我这里选择19。</p><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h1><p>我相信大家都应该安装好了自己的Vmware Workstation15，如果没有安装好，可以参考一下我的另一篇博客：<a href="https://smallpotatody.github.io/2019/03/26/VMware-15%E7%A0%B4%E8%A7%A3%E7%89%88/">VMware Workstation pro 15破解版安装</a></p><h2 id="1-双击运行VMware-Workstation-Pro"><a href="#1-双击运行VMware-Workstation-Pro" class="headerlink" title="1.双击运行VMware Workstation Pro"></a>1.双击运行VMware Workstation Pro</h2><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/2.png" alt></p><h2 id="2-创建新的虚拟机"><a href="#2-创建新的虚拟机" class="headerlink" title="2.创建新的虚拟机"></a>2.创建新的虚拟机</h2><p>可以选择典型和自定义，我喜欢个性化，所以就选择了自定义。</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/3.png" alt></p><p>下一步</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/4.png" alt></p><p>选择安装程序光盘映像文件(iso)(M):，点击浏览选择刚刚下载的Ubuntu镜像</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/5.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/6.png" alt></p><p>进行简单的配置用户名和密码</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/7.png" alt></p><p>设置虚拟机名称和安装的位置</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/8.png" alt></p><p>根据自己电脑的CPU来设置处理器数量和内核数量</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/9.png" alt></p><p>设置内存</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/10.png" alt></p><p>默认选择，下一步</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/11.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/12.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/13.png" alt></p><p>创建新虚拟磁盘</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/14.png" alt></p><p>分配磁盘空间大小和选择将虚拟磁盘存储为单个文件</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/15.png" alt></p><p>默认，下一步</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/16.png" alt></p><p>完成</p><h2 id="3-开始安装ubuntu"><a href="#3-开始安装ubuntu" class="headerlink" title="3.开始安装ubuntu"></a>3.开始安装ubuntu</h2><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/18.png" alt></p><p>点击开启此虚拟机</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/19.png" alt></p><p>我们可以先看看，点击Try Ubuntu</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/20.png" alt></p><p>然后关闭重新启动进行安装</p><p>选择语言后进行安装</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/21.png" alt></p><p>直接点击继续</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/22.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/23.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/24.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/25.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/26.png" alt></p><p>简单的配置自己的用户名以及密码</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/27.png" alt></p><p>这个安装时间有点长</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/28.png" alt></p><p>安装完成后重启</p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/29.png" alt></p><h1 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h1><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/30.png" alt></p><p>打开终端输入<code>sudo apt-get update</code></p><p><code>sudo apt-get upgrade</code></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/31.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/32.png" alt></p><p><img src="/2019/04/25/用VMware-Workstation15安装Ubuntu19-04/33.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Ubuntu（友帮拓、优般图、乌班图）是一个以&lt;a href=&quot;https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;桌面&lt;/a&gt;应用为主的开
      
    
    </summary>
    
      <category term="linux" scheme="https://smallpotatody.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://smallpotatody.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>kali安装中文搜狗输入法</title>
    <link href="https://smallpotatody.github.io/2019/04/21/kali%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    <id>https://smallpotatody.github.io/2019/04/21/kali安装中文搜狗输入法/</id>
    <published>2019-04-21T12:47:08.000Z</published>
    <updated>2019-04-21T13:36:53.723Z</updated>
    
    <content type="html"><![CDATA[<p>我们在使用大多数linux系统时，有些不提供中文输入法，这就导致我们在使用时存在一些困难，毕竟刚接触linux系统，还是图形界面，对我们这些初学Linux的人来说有许多？那么我们要坚持一个不懂就学懂好习惯，去网上查找答案，因为英语不是很好（英语大神请绕道），所以就需要中文输入法；</p><h2 id="kali安装搜狗输入法"><a href="#kali安装搜狗输入法" class="headerlink" title="kali安装搜狗输入法"></a>kali安装搜狗输入法</h2><h3 id="1-修改软件源"><a href="#1-修改软件源" class="headerlink" title="1.修改软件源"></a>1.修改软件源</h3><p><code>leafpad /etc/apt/sources.list</code></p><p><img src="/2019/04/21/kali安装中文搜狗输入法/1.png" alt>)</p><p>或</p><p><code>vim /etc/apt/sources.list</code>键盘输入e</p><p><img src="/2019/04/21/kali安装中文搜狗输入法/2.png" alt></p><p>进入下面界面</p><p><img src="/2019/04/21/kali安装中文搜狗输入法/3.png" alt></p><p>输入i键后，进行编辑，即下方显示“– 插入 –”</p><p><img src="/2019/04/21/kali安装中文搜狗输入法/4.png" alt></p><p>编辑完成后，按ESC键退出，然后再按”:wq”保存并退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#kali官方源</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">#中科大的源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</span><br><span class="line">#阿里云源</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/kali-security/ kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali-security/ kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure><p>从中任意选两个就ok了！</p><h3 id="2-安装fcitx"><a href="#2-安装fcitx" class="headerlink" title="2.安装fcitx"></a>2.安装fcitx</h3><p><code>sudo apt-get install fcitx</code></p><p><img src="/2019/04/21/kali安装中文搜狗输入法/5.png" alt></p><h3 id="3-下载并安装搜狗输入法"><a href="#3-下载并安装搜狗输入法" class="headerlink" title="3.下载并安装搜狗输入法"></a>3.下载并安装搜狗输入法</h3><p><a href="https://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="noopener">搜狗输入法下载地址</a></p><p>根据自己的系统位数来下载搜狗输入法</p><p><img src="/2019/04/21/kali安装中文搜狗输入法/6.png" alt></p><p><img src="/2019/04/21/kali安装中文搜狗输入法/7.png" alt></p><p>切换到下载目录，先直接安装</p><p><code>dpkg -i sogoupinyin_2.2.0.0108_amd64.deb</code></p><p><img src="/2019/04/21/kali安装中文搜狗输入法/8.png" alt></p><p><strong>注意：出现错误时，输入<code>apt-get -f install</code></strong></p><p>安装成功后，桌面上会出现Fcitx和Fcitx配置两个企鹅图标</p><p>点开Fcitx配置，看输入法中是否会出现搜狗拼音，有就成功了，没有就手动导入一下</p><p><img src="/2019/04/21/kali安装中文搜狗输入法/9.png" alt></p><h3 id="4-最后使用搜狗输入法"><a href="#4-最后使用搜狗输入法" class="headerlink" title="4.最后使用搜狗输入法"></a>4.最后使用搜狗输入法</h3><p>重启电脑后，ctrl+空格键变换输入法</p><p>测试结果，有多种皮肤供选择，选择自己觉得最好看的一个作为皮肤</p><p><img src="/2019/04/21/kali安装中文搜狗输入法/10.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们在使用大多数linux系统时，有些不提供中文输入法，这就导致我们在使用时存在一些困难，毕竟刚接触linux系统，还是图形界面，对我们这些初学Linux的人来说有许多？那么我们要坚持一个不懂就学懂好习惯，去网上查找答案，因为英语不是很好（英语大神请绕道），所以就需要中文输
      
    
    </summary>
    
      <category term="Linux" scheme="https://smallpotatody.github.io/categories/Linux/"/>
    
    
      <category term="kali" scheme="https://smallpotatody.github.io/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>Git和Node.js重新安装</title>
    <link href="https://smallpotatody.github.io/2019/04/18/Git%E5%92%8CNode-js%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85/"/>
    <id>https://smallpotatody.github.io/2019/04/18/Git和Node-js重新安装/</id>
    <published>2019-04-18T10:30:43.000Z</published>
    <updated>2019-04-18T14:14:38.337Z</updated>
    
    <content type="html"><![CDATA[<p>由于最近误删了一个东西，导致Windows10系统崩溃，好像是把系统引导给搞坏了，看了网上一大堆的方法来拯救，最终还是嫌麻烦，就直接重装系统，那么问题就来了，导致我的Git和Node.js也出现了一些问题，不能直接导出，就很麻烦，然后又去下载这两个东西和安装以及配置。</p><h1 id="1-Git安装教程"><a href="#1-Git安装教程" class="headerlink" title="1.Git安装教程"></a>1.Git安装教程</h1><p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git下载地址</a></p><p>开始安装</p><h3 id="第一步：点击next"><a href="#第一步：点击next" class="headerlink" title="第一步：点击next"></a>第一步：点击next</h3><p><img src="/2019/04/18/Git和Node-js重新安装/1.png" alt></p><h3 id="第二步：根据自己想安装软件的位置来选者路径-我这里选择的是D-app-blog-software"><a href="#第二步：根据自己想安装软件的位置来选者路径-我这里选择的是D-app-blog-software" class="headerlink" title="第二步：根据自己想安装软件的位置来选者路径(我这里选择的是D:\app\blog_software)"></a>第二步：根据自己想安装软件的位置来选者路径(我这里选择的是D:\app\blog_software)</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2.png" alt></p><h3 id="第三步：安装配置文件，更具自己需要选择"><a href="#第三步：安装配置文件，更具自己需要选择" class="headerlink" title="第三步：安装配置文件，更具自己需要选择"></a>第三步：安装配置文件，更具自己需要选择</h3><p><img src="/2019/04/18/Git和Node-js重新安装/3.png" alt></p><h3 id="第四步：不创建启动文件夹（勾选Don’t-create-a-Star-Menu-folder）"><a href="#第四步：不创建启动文件夹（勾选Don’t-create-a-Star-Menu-folder）" class="headerlink" title="第四步：不创建启动文件夹（勾选Don’t create a Star Menu folder）"></a>第四步：不创建启动文件夹（勾选Don’t create a Star Menu folder）</h3><p><img src="/2019/04/18/Git和Node-js重新安装/4.png" alt></p><h3 id="第五步：选择默认编辑器"><a href="#第五步：选择默认编辑器" class="headerlink" title="第五步：选择默认编辑器"></a>第五步：选择默认编辑器</h3><p><img src="/2019/04/18/Git和Node-js重新安装/5.png" alt></p><h3 id="第六步：点击Next"><a href="#第六步：点击Next" class="headerlink" title="第六步：点击Next"></a>第六步：点击Next</h3><p><img src="/2019/04/18/Git和Node-js重新安装/6.png" alt></p><h3 id="第七步：使用默认设置就行"><a href="#第七步：使用默认设置就行" class="headerlink" title="第七步：使用默认设置就行"></a>第七步：使用默认设置就行</h3><p><img src="/2019/04/18/Git和Node-js重新安装/7.png" alt></p><h3 id="第八步：默认"><a href="#第八步：默认" class="headerlink" title="第八步：默认"></a>第八步：默认</h3><p><img src="/2019/04/18/Git和Node-js重新安装/8.png" alt></p><h3 id="第九步：在终端模拟器选择页面，默认即可，配置后Git"><a href="#第九步：在终端模拟器选择页面，默认即可，配置后Git" class="headerlink" title="第九步：在终端模拟器选择页面，默认即可，配置后Git"></a>第九步：在终端模拟器选择页面，默认即可，配置后Git</h3><p><img src="/2019/04/18/Git和Node-js重新安装/9.png" alt></p><h3 id="第十步：最后配置Git额外选择默认安装"><a href="#第十步：最后配置Git额外选择默认安装" class="headerlink" title="第十步：最后配置Git额外选择默认安装"></a>第十步：最后配置Git额外选择默认安装</h3><p><img src="/2019/04/18/Git和Node-js重新安装/10.png" alt></p><h3 id="第十一步：安装完成"><a href="#第十一步：安装完成" class="headerlink" title="第十一步：安装完成"></a>第十一步：安装完成</h3><p><img src="/2019/04/18/Git和Node-js重新安装/11.png" alt></p><p><strong>检验 </strong>：</p><p><img src="/2019/04/18/Git和Node-js重新安装/12.png" alt></p><p><img src="/2019/04/18/Git和Node-js重新安装/13.png" alt></p><h1 id="2-Node-js安装"><a href="#2-Node-js安装" class="headerlink" title="2.Node.js安装"></a>2.Node.js安装</h1><p>下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js官网下载地址</a></p><h3 id="第一步：下载完成后，开始安装"><a href="#第一步：下载完成后，开始安装" class="headerlink" title="第一步：下载完成后，开始安装"></a>第一步：下载完成后，开始安装</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_1.png" alt></p><h3 id="第二步：接受协议"><a href="#第二步：接受协议" class="headerlink" title="第二步：接受协议"></a>第二步：接受协议</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_2.png" alt></p><h3 id="第三步：根据自己要安装的地方选择安装目录-我这里选择D-app-blog-software-Node-js路径下"><a href="#第三步：根据自己要安装的地方选择安装目录-我这里选择D-app-blog-software-Node-js路径下" class="headerlink" title="第三步：根据自己要安装的地方选择安装目录(我这里选择D:\app\blog_software\Node.js路径下)"></a>第三步：根据自己要安装的地方选择安装目录(我这里选择D:\app\blog_software\Node.js路径下)</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_3.png" alt></p><h3 id="第四步：选择安装项，一般默认"><a href="#第四步：选择安装项，一般默认" class="headerlink" title="第四步：选择安装项，一般默认"></a>第四步：选择安装项，一般默认</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_4.png" alt></p><h3 id="第五步：点击“Install”按钮，开始安装"><a href="#第五步：点击“Install”按钮，开始安装" class="headerlink" title="第五步：点击“Install”按钮，开始安装"></a>第五步：点击“Install”按钮，开始安装</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_7.png" alt></p><h3 id="第六步：过程"><a href="#第六步：过程" class="headerlink" title="第六步：过程"></a>第六步：过程</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_5.png" alt></p><h3 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h3><p><img src="/2019/04/18/Git和Node-js重新安装/2_6.png" alt></p><p><strong>检验</strong>：</p><p>　1.node -v 查看 node 版本</p><p>​    2.npm -v 查看 npm 版本</p><p><img src="/2019/04/18/Git和Node-js重新安装/2_8.png" alt></p><h1 id="3-环境配置"><a href="#3-环境配置" class="headerlink" title="3.环境配置"></a>3.环境配置</h1><p>说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。<br>例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\app\blog_software\Node.js】下创建两个文件夹【node_global】及【node_cache】如下图：</p><p><img src="/2019/04/18/Git和Node-js重新安装/15.png" alt></p><p>创建完两个空文件夹之后，打开cmd命令窗口，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\app\blog_software\Node.js\node_global&quot;</span><br><span class="line">npm config set prefix &quot;D:\app\blog_software\Node.js\node_cache&quot;</span><br></pre></td></tr></table></figure><p><img src="/2019/04/18/Git和Node-js重新安装/14.png" alt></p><p>接下来设置环境变量，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”</p><p><img src="/2019/04/18/Git和Node-js重新安装/16.png" alt></p><p>在用户变量里选择Path，点击新建，在弹出的框中点击新建，然后在其中添加node_modules文件夹的位置。</p><p><img src="/2019/04/18/Git和Node-js重新安装/17.png" alt></p><p><strong>完成所有的操作，可以在任意地方测试</strong></p><p><img src="/2019/04/18/Git和Node-js重新安装/18.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于最近误删了一个东西，导致Windows10系统崩溃，好像是把系统引导给搞坏了，看了网上一大堆的方法来拯救，最终还是嫌麻烦，就直接重装系统，那么问题就来了，导致我的Git和Node.js也出现了一些问题，不能直接导出，就很麻烦，然后又去下载这两个东西和安装以及配置。&lt;/p
      
    
    </summary>
    
      <category term="Node.js" scheme="https://smallpotatody.github.io/categories/Node-js/"/>
    
    
      <category term="Git" scheme="https://smallpotatody.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>WebStorm的安装与破解</title>
    <link href="https://smallpotatody.github.io/2019/04/09/WebStorm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E7%A0%B4%E8%A7%A3/"/>
    <id>https://smallpotatody.github.io/2019/04/09/WebStorm的安装与破解/</id>
    <published>2019-04-09T10:32:22.000Z</published>
    <updated>2019-04-09T13:17:42.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-WebStorm介绍"><a href="#1-WebStorm介绍" class="headerlink" title="1.WebStorm介绍"></a>1.WebStorm介绍</h2><p>在学习了html+css基础后，想做一些简单的html实战项目，以前在学习html为了方便记忆且容易上手用了Notepad++，现在进行项目实战，难免不了要大量代码以及更多的功能来操作与编写，所以就去下载了WebStorm这种重量级软件来进行学习与开发。</p><p><strong>html提示</strong></p><p><strong>联想查询</strong></p><p><strong>代码重构</strong></p><p><strong>代码检查和快速修复</strong></p><p><strong>代码调试</strong></p><p><strong>代码结构浏览</strong></p><p><strong>代码折叠</strong></p><p><strong>包裹或者去掉外围代码</strong></p><p>对于WebStorm的叙述就到这儿了，“工欲善其事必先利其器”，下面来看看如何安装与破解WebStorm。</p><h2 id="2-WebStorm的下载"><a href="#2-WebStorm的下载" class="headerlink" title="2. WebStorm的下载"></a>2. WebStorm的下载</h2><p>去官网下载</p><p><a href="http://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">WebStorm官网</a></p><p><img src="/2019/04/09/WebStorm的安装与破解/1.png" alt="WebStorm官网"></p><p>点击DOWNLOAD进行下载</p><p>下载完成后双击打开进行安装</p><p><img src="/2019/04/09/WebStorm的安装与破解/2.png" alt></p><p>点击Next</p><p><img src="/2019/04/09/WebStorm的安装与破解/3.png" alt></p><p>选择自己的安装路径</p><p><img src="/2019/04/09/WebStorm的安装与破解/4.png" alt></p><p>根据自己电脑的位数选择，和添加到环境变量，.js .css .html勾选后之后js css html文件默认会用webstorm打开,然后点击Next。</p><p><img src="/2019/04/09/WebStorm的安装与破解/5.png" alt></p><p>点击Install</p><p><img src="/2019/04/09/WebStorm的安装与破解/6.png" alt></p><p><img src="/2019/04/09/WebStorm的安装与破解/7.png" alt></p><p>完成安装，选择I want to manually reboot later，然后点击Finsh。</p><h2 id="3-破解"><a href="#3-破解" class="headerlink" title="3. 破解"></a>3. 破解</h2><p>双击打开程序,选择Do not import settings,点击ok</p><p><img src="/2019/04/09/WebStorm的安装与破解/8.png" alt></p><p>点击Skip</p><p><img src="/2019/04/09/WebStorm的安装与破解/9.png" alt></p><p><strong>方法一：</strong></p><p>注册时，在打开的License Activation窗口中选择“License server”，在输入框输入下面的网址：</p><p><a href="http://idea.imsxm.com/" target="_blank" rel="noopener">http://idea.imsxm.com/</a>或<a href="http://idea.yangyusb.com" target="_blank" rel="noopener">http://idea.yangyusb.com</a></p><p>点击：Activate即可。</p><p><strong>方法二：</strong></p><p>选择Activation code,在其中填入注册码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2RRJMBXW33-eyJsaWNlbnNlSWQiOiIyUlJKTUJYVzMzIiwibGljZW5zZWVOYW1lIjoi5b285bK4IHNvZnR3YXJlMiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJGb3IgZWR1Y2F0aW9uYWwgdXNlIG9ubHkiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In1dLCJoYXNoIjoiOTUyNzQwMS8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-WBR8xuiXaXLeV0obFYbBfUUQ02r54Vj3fE9ImtuXKSP+NuvvnR6lH6gWcVm9PZt67eqdDZa+Deej1NsoGRPDZS5UB6WEt4YVahlOhmG3rgvXPlP98hsfgFUcjr3OQVY7wk5slJ+Q2G9lkpsqwezO+SFIk9yA6pjxyT+U7FjpU8SY5ilsHskq4FG8FoKPYLsfsuwtXrJimRBxVcDClw/QsnCSwgtjuunc8Te37rHb08ZAxtJJieIsjhWnnzrQ3LmxmsR4xstkZOSqD4bYgeNz+m2nbmCWJ5lfP+pnqWfSsUCVri2TUxTpzzTMe4Cx8UhGeJgIgUyBXjq05/0nq3YoVg==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</span><br></pre></td></tr></table></figure><p>或者打开网址（<a href="http://idea.lanyus.com/" target="_blank" rel="noopener">IntelliJ IDEA 注册码</a>）跳转到,点击获得注册码</p><p><img src="/2019/04/09/WebStorm的安装与破解/11.png" alt></p><p>将注册码复制到</p><p><img src="/2019/04/09/WebStorm的安装与破解/10.png" alt></p><p><strong>如果没成功，请换一个旧一点的版本，旧的注册码对新版本不管用。</strong></p><p>用破解补丁来破解：</p><p>下载破解补丁<a href="http://idea.lanyus.com/jar/JetbrainsIdesCrack-4.2-release-sha1-3323d5d0b82e716609808090d3dc7cb3198b8c4b.jar" target="_blank" rel="noopener">破解补丁无需使用注册码，下载地址</a>或者去（<a href="http://idea.lanyus.com/" target="_blank" rel="noopener">IntelliJ IDEA 注册码</a>）下载</p><p><img src="/2019/04/09/WebStorm的安装与破解/13.png" alt></p><p>将下载的文件移动到WebStorm安装目录的bin目录下</p><p><img src="/2019/04/09/WebStorm的安装与破解/14.png" alt></p><p>修改安装目录下的 WebStorm.exe.vmoptions 和WebStorm64.exe.vmoptions，这两个文件一个是32位的，一个是64位的，建议同步修改。用文本编辑器打开之后，在文件最上面加一行代码 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:安装目录/破解补丁名字.jar</span><br></pre></td></tr></table></figure><p><img src="/2019/04/09/WebStorm的安装与破解/15.png" alt></p><p>配置好之后，保存文件。在此再次启动WebStorm，选择Activation code，在其中输入<code>-javaagent:安装目录/破解补丁名字.jar</code>,点击ok完成。</p><p><img src="/2019/04/09/WebStorm的安装与破解/12.png" alt></p><p><img src="/2019/04/09/WebStorm的安装与破解/16.png" alt></p><p>成果：一个八卦图</p><p><img src="/2019/04/09/WebStorm的安装与破解/18.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-WebStorm介绍&quot;&gt;&lt;a href=&quot;#1-WebStorm介绍&quot; class=&quot;headerlink&quot; title=&quot;1.WebStorm介绍&quot;&gt;&lt;/a&gt;1.WebStorm介绍&lt;/h2&gt;&lt;p&gt;在学习了html+css基础后，想做一些简单的html实战项
      
    
    </summary>
    
      <category term="software" scheme="https://smallpotatody.github.io/categories/software/"/>
    
    
      <category term="html+css" scheme="https://smallpotatody.github.io/tags/html-css/"/>
    
  </entry>
  
  <entry>
    <title>CSS部分</title>
    <link href="https://smallpotatody.github.io/2019/04/05/CSS%E9%83%A8%E5%88%86/"/>
    <id>https://smallpotatody.github.io/2019/04/05/CSS部分/</id>
    <published>2019-04-05T02:52:25.000Z</published>
    <updated>2019-04-05T14:25:34.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-HTML-lt-DOCTYPE-gt-声明标签"><a href="#1-HTML-lt-DOCTYPE-gt-声明标签" class="headerlink" title="1.HTML&lt;!DOCTYPE&gt;声明标签"></a>1.HTML&lt;!DOCTYPE&gt;声明标签</h2><p><code>&lt;!doctype&gt;</code>声明必须是HTML文档是的第一行，位于<html>标签之前。<br><code>&lt;!doctype&gt;</code>声明不是HTML标签；它是指示web浏览器关于页面使用的哪个HTML版本进行编写的指令。</html></p><p>HTML5为<code>&lt;!doctype html&gt;</code>,<code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></p><p>在html4.01中单标记必须闭合，单属性必须必须添加属性值，标记和属性必须使用小写，属性的属性值必须使用””。</p><h2 id="2-使用CSS样式的方式"><a href="#2-使用CSS样式的方式" class="headerlink" title="2.使用CSS样式的方式"></a>2.使用CSS样式的方式</h2><p>a.内链样式表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--内链样式表--&gt;</span><br><span class="line">&lt;body style=&quot;background-color:green; margin:0; padding:0;&quot; &gt;</span><br></pre></td></tr></table></figure><p>b.嵌入式样式表：</p><p>需要放在<code>&lt;head&gt;&lt;/head&gt;</code>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--嵌入式样式表--&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">p&#123;</span><br><span class="line">background-color:yellow;</span><br><span class="line">color:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>p是<code>&lt;p&gt;&lt;/p&gt;</code>标记，如果是<code>&lt;h1&gt;&lt;/h1&gt;</code>标记就为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--嵌入式样式表--&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">h1&#123;</span><br><span class="line">background-color:yellow;</span><br><span class="line">color:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>c.引入式样式表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--引入式样式表--&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; herf=&quot;style.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>style.css为新建的css文件，表示要设置属性内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">background-color:green;</span><br><span class="line">color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/04/05/CSS部分/1.png" alt></p><h2 id="3-定义样式表"><a href="#3-定义样式表" class="headerlink" title="3.定义样式表"></a>3.定义样式表</h2><p><code>&lt;h1&gt;&lt;h1&gt;</code>,h1{属性:属性值; 属性:属性值:},h1为选择器，定义那个标记中的内容执行其中的样式，一个选择器可以控制若干个样式属性，属性之间用英语“;”隔开。</p><p>a.Class定义：</p><p><code>&lt;p class=&quot;p&quot;&gt;&lt;/p&gt;</code>,class定义是以“.”开始</p><p>p{属性1:属性值; 属性2:属性值;}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.p&#123;color:green;font-size:10px&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p class=&quot;p&quot;&gt;小土豆很强&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>b.id定义：</p><p><code>&lt;p id=&quot;pp&quot;&gt;&lt;/p&gt;</code>,id定义是#开始的。#pp{属性1:属性值1; 属性2:属性值2;},id只能出现一次。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#PP&#123;background-color:green; color:blue; font-size:20px;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p id=&quot;pp&quot;&gt;...&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>优先级为id&gt;class&gt;html，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&#123;......&#125;</span><br><span class="line">.p&#123;......&#125;</span><br><span class="line">#pp&#123;......&#125;</span><br></pre></td></tr></table></figure><p>不管顺序如何，结果都为#pp{……}中的内容设置。</p><p>同级时选择离元属最近一个的，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#pp&#123;color:red&#125;</span><br><span class="line">#pp&#123;color:white&#125;</span><br></pre></td></tr></table></figure><p>则执行颜色为白色的。</p><p>组合选择器（同时控制多个元素）</p><p><code>h1,h2,h3{font-size:20px; color:red;}</code>,选择器组合可以使用“.”隔开</p><p>超链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:link&#123;color:red&#125;;        正常连接的样式</span><br><span class="line">a:hover&#123;color:yellow&#125;;    鼠标放上去的样式</span><br><span class="line">a:active&#123;color:blue&#125;;     选择链接时的样式</span><br><span class="line">a:visited&#123;color:yellow&#125;;  已经访问过的链接的样式</span><br></pre></td></tr></table></figure><p><img src="/2019/04/05/CSS部分/2.png" alt></p><p>上面的内容纯属不要年放上去的啊！装了一波，哈哈哈！</p><h2 id="4-CSS常见属性"><a href="#4-CSS常见属性" class="headerlink" title="4.CSS常见属性"></a>4.CSS常见属性</h2><ol><li>颜色属性：</li></ol><p>color属性定义文本的颜色，可以有以下格式：</p><p>a. color:green</p><p>b. color:#ff6600或color:f60       ff(red)66(green)00(blue)</p><p>c. RGB——- color:rgb(0~255,0~255,0~255)</p><p>d. RGBA——color:rgba(0~255,0~255,0~255,1) #其中A代表Alpha的（色彩空间）透明</p><p><img src="/2019/04/05/CSS部分/3.png" alt></p><ol start="2"><li>字体属性<ol><li>font-size字体大小，格式为：<code>font-size:内容;</code>内容有px:设置一个固定的值。%:父元素的百分比。smaller:比父元素更小。larger:比父元素更大。inherit:继承父元素的。</li><li>font-family字体类型，格式为：<code>font-family:微软雅黑, serif;</code>可以用<code>&quot;,&quot;</code>隔开，以确保当字体不存在的时候直接使用下一个。</li><li>font-weight字体加粗，格式为：<code>font-weight:内容</code>，内容有normal（默认值）、bold（粗）、bolder（更粗）、lighter（更细），也可以用100~900之间的整百数来表示，其中400=normal，700=bold。</li><li>font-style字体样式，<code>font-style:内容</code>，内容有normal（正常）、italic（斜体）、oblique（倾斜）、inherit（继承）。</li><li>font-variant小型大写字母显示文本，格式为：<code>font-variant:内容</code>，内容有normal（标准）、small-caps（小型大写字母显示文本）、inherit（继承）。</li></ol></li></ol><p><img src="/2019/04/05/CSS部分/4.png" alt></p><ol start="3"><li><p>背景属性</p><ol><li><p>背景颜色：background-color</p></li><li><p>背景图片：background-image</p><p>background-image:url(图片路径)</p><p>background-image:none</p></li><li><p>背景重复：background-repeat</p><p>background-repeat:repeat 重复平铺满</p><p>background-repeat:repeat-x 向x轴重复</p><p>background-repeat:repeat-y 向y轴重复</p><p>background-repeat:no-repeat 不重复</p></li><li><p>背景位置：background-position:(x)(y)</p><p>横向（left,center,right）</p><p>纵向（top,center,bottom）</p><p>也可以为像素px。简写方式background:背景颜色 url(图像) 重复 位置</p><p>background:#f60 url(图片路径) no-repeat top center</p><p><img src="/2019/04/05/CSS部分/5.png" alt></p></li></ol></li><li><p>文本属性</p><ol><li><p>横向排列<code>text-align:left</code>,left、center、right</p></li><li><p>文本行高<code>line-height:</code>,%基于字体大小的百分比行高，数值来设置固定的值。</p></li><li><p>首行缩进<code>text-indent:</code>,%父元素的百分比，px固定值，默认为0，inherit继承。</p></li><li><p>字符间距<code>letter-spacing:</code>,normal默认，length设置具体的数值（可以设置为负值），inherit继承。</p></li><li><p>单词间距<code>word-spacing:</code>,normal标准间距，px固定值，inherit继承。</p></li><li><p>文本方向<code>direction:</code>,ltr从左到右，rtl从右到左，inherit继承。</p></li><li><p>文本大小写<code>text-transform:</code>,none默认，capitalize每个单词以大写字母开头，uppercase定义仅有大写字母，lowercase定义无大写字母，仅有小写字母，inherit规定应该从父元素继承text-transform属性的值。</p><p><img src="/2019/04/05/CSS部分/6.png" alt></p></li></ol></li><li><p>边框属性</p><ol><li>边框风格<code>border-style:</code>,统一风格border-style:，none无边框，solid直线边框，dashed虚线边框，dotted点状边框，double双线边框，groove凸槽边框，ridge垄状边框，inset inset边框，outset outset边框，inherit继承。单独定义某一方向的边框样式:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-bottom-style 下边边框样式</span><br><span class="line">border-top-style 上边框样式</span><br><span class="line">border-left-style 左边边框样式</span><br><span class="line">border-right-style 右边边框样式</span><br></pre></td></tr></table></figure><ol start="2"><li><p>边框宽度<code>border-width:</code>,统一风格<code>border-width:</code>,单独风格border-top-width上边边框宽度,border-bottom-width下边边框宽度,border-left-width左边边框宽度,border-right-width右边边框宽度。边框宽度属性值：thin 细边框、medium 中等边框、thick 粗边框、px 固定值边框、inherit 继承。</p></li><li><p>边框颜色<code>border-color:</code>,统一风格<code>border-color:</code>,单独风格border-top-color 上边框颜色，border-bottom-color 下边框颜色，border-left-color 左边框颜色，border-right-color 右边框颜色。边框颜色属性值：rgb(255,255,255)、rgba(255,255,255,0~1)、十六进制 #ff0000、继承inherit。属性值的四种情况：一个值：border-color:（上、下、左、右）；两个值：border-color:（上下）（左右）；三个值：border-color:（上）、（左、右）、（下）；四个值：border-color:（上）（下）（左）（右）；简写方式：border:solid 2px #f60。</p><p><img src="/2019/04/05/CSS部分/7.png" alt></p></li></ol></li><li><p>列表属性</p><ol><li><p>标记类型<code>list-style-type:</code>；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">none 无标记</span><br><span class="line">disc 默认，标记是实心圆</span><br><span class="line">circle 标记是空心圆</span><br><span class="line">square 标记是实心方快</span><br><span class="line">decimal 标记是数字</span><br><span class="line">decimal-leading-zero 0开头的数字标记（01，02，03等）</span><br><span class="line">lower-roman 小写罗马数字（i，ii，iii，iv，v等）</span><br><span class="line">upper-roman 大写罗马数字（I，II，III，IV，V等）</span><br><span class="line">lower-alpha 小写英文字母（a，b，c等）</span><br><span class="line">upper-alpha 大写英文字幕（A，B，C等）</span><br><span class="line">lower-greek 小写希纳字母（alpha，beta，gamma等）</span><br><span class="line">lower-latin 小写拉丁字母（a，b，c，d，e等）</span><br><span class="line">upper-latin 大写拉丁字母（A,B,C，D，E等）</span><br><span class="line">hebrew 传统的希伯来编号方式</span><br><span class="line">armenian 传统的亚美尼亚编号方式</span><br><span class="line">georgian 传统的乔治亚编号方式（an，ban，gan等）</span><br><span class="line">cjk-ideographic 简单的表意数字</span><br><span class="line">hiragana 标记是：a，i，u，e，o，ka，ki等。</span><br><span class="line">katakana 标记是：A，I，U，E，O，KA，KI等。</span><br><span class="line">hiragana-iroha 标记是：i，ro，ha，ni，ho，he，to等。</span><br><span class="line">katakana-iroha 标记是：I，RO，HA，NI，HO，HE，TO等。</span><br></pre></td></tr></table></figure></li><li><p>标记的位置<code>list-style-position:</code>,inside列表项目标记放置在文本内，且环绕文本根据标记对齐。outside是默认值，保持标记位于文本的左侧。列表项目标记放置在文本以外，且环境文本不根据标记对齐。inherit规定应该从父元素继承list-style-position属性的值。</p></li><li><p>设置图像列表标记<code>list-style-image:</code>,url(图像路径)，none默认，无图形被显示。inherit规定应该从父元素继承list-style-image属性的值。</p><p>简写方式：<code>list-style:square inside url(&#39;/i/arrow.jpg&#39;);</code></p><p><img src="/2019/04/05/CSS部分/8.png" alt>    </p></li></ol></li></ol><h2 id="5-div-css布局"><a href="#5-div-css布局" class="headerlink" title="5.div+css布局"></a>5.div+css布局</h2><ol><li><p>div和span，div和span在整个HTML标记中，没有任何意义，他们的存在就是为了应用CSS样式，div和span的区别在于，span是内联元素，div是块级元素。div是块状，而span只是内容大小。</p></li><li><p>盒模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">margin 盒子外边框</span><br><span class="line">padding 盒子内边框</span><br><span class="line">border 盒子边框宽度</span><br><span class="line">width 盒子宽度</span><br><span class="line">height 盒子高度</span><br></pre></td></tr></table></figure><p><img src="/2019/04/05/CSS部分/9.png" alt></p></li></ol><p><img src="/2019/04/05/CSS部分/10.png" alt></p><ol start="3"><li><p>布局相关的属性</p><ol><li><p>定位方式position</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">relative 正常定位</span><br><span class="line">absolute 根据父元素进行定位</span><br><span class="line">fixed 根据浏览窗口进行定位</span><br><span class="line">static 没有定位</span><br><span class="line">inherit 继承2.</span><br></pre></td></tr></table></figure></li></ol></li></ol><ol start="2"><li><p>定位left（左）、right（右）、top（上）、bottom（下）离页面顶点的距离。如：<code>right:20px;</code>为距离右边边框20像素。</p></li><li><p>z-index层覆盖先后顺序（优先级）如：z-index:2。</p></li><li><p>display显示属性，层不显示display:none;块状显示，在元素后面换行，显示下一个块元素display:block;内联显示，多个快可以显示在一行内display:inline;从内联式到块样式之间的转换。</p></li></ol><ol start="5"><li><p>float浮动属性，left左浮动；right右浮动；</p></li><li><p>clear 清除浮动，clear:both;</p></li><li><p>overflow溢出处理，hidde影藏超出层大小的内容；scroll无法显示内容是否超出层大小都添加滚动条；auto超出时自动添加滚动条。</p><p><img src="/2019/04/05/CSS部分/11.png" alt></p></li></ol><ol start="4"><li><p>兼容问题</p><ol><li>兼容性测试工具：IE Tester、Multibrowser</li><li>常用的浏览器：Google chrome、Firefox、opera</li><li>高效开发工具：轻量级工具：Notepad++、sbulime Text、记事本，重量级的：WebStorm、Dreamweaver。</li><li>网页设计工具：fireworks、photoshop。</li><li>判断IE的方法：</li></ol><p>条件判断格式<code>&lt;!--[if 条件 版本]&gt; 那么显示 &lt;![endif]--&gt;</code>。</p><ul><li>不等于[if !IE 8]表示出来IE8都可以显示</li><li>小于[if lt IE 8]表示如果IE浏览器版本小于8的显示</li><li>大于[if gt IE 8]表示如果IE浏览器版本大于8的显示</li><li>小于或等于[if lte IE 8]表示如果IE浏览器版本小于8的显示</li><li>大于或等于[if gte IE 8]表示如果IE浏览器版本大于8的显示</li><li>大于和小于之间[if (gt IE 5)&amp;(lt IE 7)]表示如果IE浏览器版本大于IE5小于7的显示</li><li>或[if (IE 6)|(IE 7)]表示如果是IE6或者IE7显示</li><li>仅&lt;!–[if IE 8]&gt;表示如果是IE8</li></ul></li></ol><p><strong>注意：条件注释只有在IE浏览器下才能执行，这样就达到了我们的效果</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-HTML-lt-DOCTYPE-gt-声明标签&quot;&gt;&lt;a href=&quot;#1-HTML-lt-DOCTYPE-gt-声明标签&quot; class=&quot;headerlink&quot; title=&quot;1.HTML&amp;lt;!DOCTYPE&amp;gt;声明标签&quot;&gt;&lt;/a&gt;1.HTML&amp;lt;
      
    
    </summary>
    
      <category term="CSS" scheme="https://smallpotatody.github.io/categories/CSS/"/>
    
    
      <category term="CSS" scheme="https://smallpotatody.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo源码上传到Github上同一仓库</title>
    <link href="https://smallpotatody.github.io/2019/04/01/Hexo%E6%BA%90%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0Github%E4%B8%8A%E5%90%8C%E4%B8%80%E4%BB%93%E5%BA%93/"/>
    <id>https://smallpotatody.github.io/2019/04/01/Hexo源码上传到Github上同一仓库/</id>
    <published>2019-04-01T05:55:42.000Z</published>
    <updated>2019-04-01T14:36:17.849Z</updated>
    
    <content type="html"><![CDATA[<p>在使用 Hexo 来写博客的时候，我们想在其他电脑操作上很难，那么我们如果将其放在GitHub上托管，那么就没有那么多麻烦。我们将博客搭建在 GitHub 上后，当我们使用 hexo g -d 部署到 GitHub 上以及网页上，其实没有把我们编写的 xxx.md 原博客文档上传到Github，而只是生成一些博客需要的静态的页面。但我们万事都想安全一点，假设我们硬盘坏了，数据无法恢复，那么我们的博客源文档也会不见，所以最好我们是把源代码也托管到 GitHub 上， 这个也有一个好处就是你在其他电脑上也可以同步编写博客。</p><p>你如果想把源代码上传至GitHub，那么可以上传至GitHub上的仓库，但是我们在建立博客时就已经创建了一个仓库，再创仓库就不方便管理与规划。本文说的前提是你已经建立了github pages——就是利用github搭建了个人博客。</p><h2 id="在你的仓库下创建分支"><a href="#在你的仓库下创建分支" class="headerlink" title="在你的仓库下创建分支"></a>在你的仓库下创建分支</h2><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/1.png" alt></p><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/2.png" alt></p><h2 id="更改默认分支"><a href="#更改默认分支" class="headerlink" title="更改默认分支"></a>更改默认分支</h2><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/3.png" alt></p><h2 id="创建本地分支目录"><a href="#创建本地分支目录" class="headerlink" title="创建本地分支目录"></a>创建本地分支目录</h2><p>在本地磁盘新建一个文件夹（文件夹名随便只要你自己能找到和辨别出就行）用作放即将上传至仓库新建分支sourse（我建立的分支，即你自己建立分支的名字），进入文件夹，鼠标右键选择Git Bash Here</p><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/4.png" alt></p><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/6.png" alt></p><p>将你要上传的源代码文件和你想上传的文件粘贴到刚才创建的文件夹。</p><h2 id="添加项目"><a href="#添加项目" class="headerlink" title="添加项目"></a>添加项目</h2><p>我在这里添加了几张图片和hello-world.md文件</p><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/5.png" alt></p><h2 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h2><p>进入上面的Git Bash Here里面输入以下命令</p><p>你可以直接克隆你的项目到目录下。</p><p><code>git clone https://github.com/yourname/yourname.github.io.git</code></p><p>然后将文件移动到新建的yourname.github.io（就是执行上面命令后产生的）文件夹里面，再在这里面打开Git Bash Here，再输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/yourname/yourname.github.io.git</span><br><span class="line">如果出错提示你已经有了origin可以输入以下命令</span><br><span class="line">git remote rm origin</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;your description&quot;</span><br><span class="line">git push origin sourse</span><br><span class="line">如果出错就可以输入以下命令</span><br><span class="line">git pull origin sourse</span><br><span class="line">或者直接强行输入</span><br><span class="line">git push origin sourse -f</span><br></pre></td></tr></table></figure><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/7.png" alt></p><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/8.png" alt></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>确认你的 _config.yml 配置是提交到 master 分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/9.png" alt></p><p>通过结果可以看出来在sourse文件夹下面的yourname.github.io文件夹里面的内容军上传至Github上yourname仓库的sourse分支下。</p><h2 id="新增文件上传方法"><a href="#新增文件上传方法" class="headerlink" title="新增文件上传方法"></a>新增文件上传方法</h2><p>将添加文件放入到本地仓库分支里面也就是sourse文件夹下面的yourname.github.io文件夹下</p><p>然后在里面进行Git Bash Here输入以下命令</p><figure class="highlight plain"><figcaption><span>add .</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;your description&quot;</span><br><span class="line">git push origin sourse -f</span><br></pre></td></tr></table></figure><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/11.png" alt></p><p><img src="/2019/04/01/Hexo源码上传到Github上同一仓库/10.png" alt></p><p>我相信大家已经配置好了博客，如果没配置可以参考我的另一篇<a href="https://smallpotatody.github.io/2019/03/11/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more">Hexo+GitHub搭建博客</a></p><p>文件参考：<a href="https://blog.csdn.net/u011642663/article/details/70182774" target="_blank" rel="noopener">保存 Hexo 博客源码到 GitHub</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用 Hexo 来写博客的时候，我们想在其他电脑操作上很难，那么我们如果将其放在GitHub上托管，那么就没有那么多麻烦。我们将博客搭建在 GitHub 上后，当我们使用 hexo g -d 部署到 GitHub 上以及网页上，其实没有把我们编写的 xxx.md 原博客文
      
    
    </summary>
    
      <category term="hexo" scheme="https://smallpotatody.github.io/categories/hexo/"/>
    
    
      <category term="github" scheme="https://smallpotatody.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>用python网络爬虫爬取英雄联盟英雄图片</title>
    <link href="https://smallpotatody.github.io/2019/03/28/python%E7%88%AC%E5%8F%96lol%E7%9A%AE%E8%82%A4/"/>
    <id>https://smallpotatody.github.io/2019/03/28/python爬取lol皮肤/</id>
    <published>2019-03-28T09:34:00.068Z</published>
    <updated>2019-03-26T13:41:11.063Z</updated>
    
    <content type="html"><![CDATA[<p>用python爬虫爬取lol皮肤。</p><p>这也用python网络爬虫爬取lol英雄皮肤，忘了是看哪个大神的博客（由于当时学了下就一直放在这儿，现在又才拿出来，再加上马上要考二级挺忙的。），代码基本上是没改，还望大神原谅。本人小白，没学过Python，只是去尝试体python爬虫的感觉和经验，正准备学python。忘大神勿喷。来一句：“人生苦短，我用python”。</p><p>先上一波图</p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAkali8.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAkali9.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAkali10.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAkali14.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAlistar4.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAlistar5.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAlistar6.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAlistar7.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAlistar11.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAmumu0.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAmumu1.jpg" alt></p><p><img src="/2019/03/28/python爬取lol皮肤/imagesAmumu2.jpg" alt></p><p>个人感觉还是挺好的。下面我们就来学习一下怎样爬取？</p><p>所需要的函数库有json re（正则表达式库） requests和time是python自带的</p><p>其中只有requests需要通过cmd命令行安装，安装方法就是在python安装目录下用cmd命令行输入下面字符</p><p><code>pip Install requests</code></p><p><img src="/2019/03/28/python爬取lol皮肤/1.png" alt></p><p>由于我已经安装过了，所以提示我已经安装了。</p><p>第一步是获取英雄id</p><p>ID的获取地址是从英雄联盟官网F12后在Network里找到champion.js，具体地址如下</p><p><a href="http://lol.qq.com/biz/hero/champion.js" target="_blank" rel="noopener">http://lol.qq.com/biz/hero/champion.js</a></p><p><img src="/2019/03/28/python爬取lol皮肤/2.png" alt></p><figure class="highlight plain"><figcaption><span>json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getLOLImages():</span><br><span class="line">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36&apos;&#125;</span><br><span class="line">    url_js = &apos;http://lol.qq.com/biz/hero/champion.js&apos;</span><br><span class="line">    #获取JS源代码 Str bytes</span><br><span class="line">    res_js = requests.get(url_js).content</span><br><span class="line">    #转码 转成字符串</span><br><span class="line">    html_js = res_js.decode()</span><br><span class="line">    #正则表达式</span><br><span class="line">    req = &apos;&quot;keys&quot;:(.*?),&quot;data&quot;&apos;</span><br><span class="line">    list_js = re.findall(req,html_js)</span><br><span class="line">    #转成dict</span><br><span class="line">    dict_js = json.loads(list_js[0])</span><br><span class="line">    print(type(dict_js)) #定义图片列表</span><br><span class="line">    pic_list = []</span><br><span class="line">    for key in dict_js: </span><br><span class="line">    printkey)#英雄ID</span><br></pre></td></tr></table></figure><p>第二步就是拼接URL了，通过发现英雄皮肤url的取名方式，我们可以方向最后的数字是不同的。让后通过此方法来获取图片地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for i in range(20):</span><br><span class="line">    number = str(i)</span><br><span class="line">    if len(number) == 1:</span><br><span class="line">        hero_num = &quot;00&quot;+number</span><br><span class="line">    elif len(number) == 2:</span><br><span class="line">        hero_num = &quot;0&quot;+number</span><br><span class="line">    numstr = key+hero_num</span><br><span class="line">    url = &quot;http://ossweb-img.qq.com/images/lol/web201310/skin/big&quot;+numstr+&quot;.jpg&quot;</span><br><span class="line">    #http://ossweb-img.qq.com/images/lol/web201310/skin/big81000.jpg</span><br><span class="line">    pic_list.append(url)</span><br></pre></td></tr></table></figure><p><img src="/2019/03/28/python爬取lol皮肤/3.png" alt></p><p>第三步是获取图片名称，path那行是放置图片的地址，注意结尾的<code>\\</code>不能丢。路径要设置成自己的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list_filepath = []</span><br><span class="line">    path = &quot;D:\Pycharmdaima\Pachong\LOLTU\\&quot;</span><br><span class="line">for name in dict_js.values():</span><br><span class="line">    for i in range(20):</span><br><span class="line">        file_path = path+name+str(i)+&apos;.jpg&apos;</span><br><span class="line">        list_filepath.append(file_path)</span><br></pre></td></tr></table></figure><p>第四步就是下载图片了，注释掉time.sleep（1）后会加速爬取速度 但是可能被腾讯中断爬取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n = 0</span><br><span class="line">for picurl in pic_list:</span><br><span class="line">    res = requests.get(picurl)</span><br><span class="line">    n += 1</span><br><span class="line">    #获取状态码</span><br><span class="line">    if res.status_code == 200:</span><br><span class="line">        print(&quot;正在下载%s&quot;%list_filepath[n])</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        with open(list_filepath[n],&apos;wb&apos;) as f:</span><br><span class="line">            f.write(res.content)</span><br></pre></td></tr></table></figure><p>下面是全部代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">#获取JS源代码 获取英雄ID</span><br><span class="line">#拼接URL地址</span><br><span class="line">#获取图片下载地址</span><br><span class="line">#下载图片</span><br><span class="line"></span><br><span class="line">#驼峰命名法</span><br><span class="line">#获取英雄图片</span><br><span class="line">def getLOLImages():</span><br><span class="line">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36&apos;&#125;</span><br><span class="line">    url_js = &apos;http://lol.qq.com/biz/hero/champion.js&apos;</span><br><span class="line">    #获取JS源代码 Str bytes</span><br><span class="line">    res_js = requests.get(url_js).content</span><br><span class="line">    #转码 转成字符串</span><br><span class="line">    html_js = res_js.decode()</span><br><span class="line">    #正则表达式</span><br><span class="line">    req = &apos;&quot;keys&quot;:(.*?),&quot;data&quot;&apos;</span><br><span class="line">    list_js = re.findall(req,html_js)</span><br><span class="line">    #转成dict</span><br><span class="line">    dict_js = json.loads(list_js[0])</span><br><span class="line">    # print(type(dict_js))</span><br><span class="line">​    #定义图片列表</span><br><span class="line">​    pic_list = []</span><br><span class="line">​    for key in dict_js:</span><br><span class="line">        # print(key)#英雄ID</span><br><span class="line">​        #拼接URL</span><br><span class="line">​        for i in range(20):</span><br><span class="line">​            number = str(i)</span><br><span class="line">​            if len(number) == 1:</span><br><span class="line">​                hero_num = &quot;00&quot;+number</span><br><span class="line">​            elif len(number) == 2:</span><br><span class="line">​                hero_num = &quot;0&quot;+number</span><br><span class="line">​            numstr = key+hero_num</span><br><span class="line">​            url = &quot;http://ossweb-img.qq.com/images/lol/web201310/skin/big&quot;+numstr+&quot;.jpg&quot;</span><br><span class="line">​            #http://ossweb-img.qq.com/images/lol/web201310/skin/big81000.jpg</span><br><span class="line">​            pic_list.append(url)</span><br><span class="line">​         #获取图片名称</span><br><span class="line">​        list_filepath = []</span><br><span class="line">​        path = &quot;D:\Pycharmdaima\Pachong\LOLTU\\&quot;</span><br><span class="line">​    for name in dict_js.values():</span><br><span class="line">​        for i in range(20):</span><br><span class="line">​            file_path = path+name+str(i)+&apos;.jpg&apos;</span><br><span class="line">​            list_filepath.append(file_path)</span><br><span class="line">​    #下载图片</span><br><span class="line">​    n = 0</span><br><span class="line">​    for picurl in pic_list:</span><br><span class="line">​        res = requests.get(picurl)</span><br><span class="line">​        n += 1</span><br><span class="line">​        #获取状态码</span><br><span class="line">​        if res.status_code == 200:</span><br><span class="line">​            print(&quot;正在下载%s&quot;%list_filepath[n])</span><br><span class="line">​            time.sleep(1)</span><br><span class="line">​            with open(list_filepath[n],&apos;wb&apos;) as f:</span><br><span class="line">​                f.write(res.content)</span><br><span class="line">getLOLImages()</span><br></pre></td></tr></table></figure><p>以下是我的部分代码</p><p><img src="/2019/03/28/python爬取lol皮肤/4.png" alt></p><p>我对以上代码也是有点懵毕竟刚接触，如果大家有意要LOL皮肤的可以给在评论去找我。展示一下，我下了所有的哈哈。。。。。。。。</p><p><img src="/2019/03/28/python爬取lol皮肤/5.png" alt></p><p>最后：大家学爬虫一定要遵守法律，切勿用作商用。</p><p>来自博主的忠告：博主提醒你，爬虫不规范，牢底坐穿，亲人两行泪！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用python爬虫爬取lol皮肤。&lt;/p&gt;
&lt;p&gt;这也用python网络爬虫爬取lol英雄皮肤，忘了是看哪个大神的博客（由于当时学了下就一直放在这儿，现在又才拿出来，再加上马上要考二级挺忙的。），代码基本上是没改，还望大神原谅。本人小白，没学过Python，只是去尝试体py
      
    
    </summary>
    
      <category term="python" scheme="https://smallpotatody.github.io/categories/python/"/>
    
    
      <category term="python爬虫" scheme="https://smallpotatody.github.io/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建博客</title>
    <link href="https://smallpotatody.github.io/2019/03/28/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://smallpotatody.github.io/2019/03/28/Hexo-Github搭建个人博客/</id>
    <published>2019-03-28T09:34:00.060Z</published>
    <updated>2019-03-15T09:00:58.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-GitHub搭建博客"><a href="#hexo-GitHub搭建博客" class="headerlink" title="hexo+GitHub搭建博客"></a>hexo+GitHub搭建博客</h2><a id="more"></a><h3 id="1-下载并安装Git-Node-js"><a href="#1-下载并安装Git-Node-js" class="headerlink" title="1.下载并安装Git,Node.js"></a>1.下载并安装Git,Node.js</h3><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git(官网)</a><br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js（官网）</a><br>下载就不说了。<br>安装就傻瓜式安装，直接默认就行了！</p><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h3><pre><code>计算机---属性---高级系统设置---环境变量----打开用户变量---点击编辑---输入变量名和将node.js安装路径粘贴到变量值中---确定完成环境配置</code></pre><p><img src="/2019/03/28/Hexo-Github搭建个人博客/0.png" alt title="示例图片">     </p><h3 id="3-新建空博客文件夹"><a href="#3-新建空博客文件夹" class="headerlink" title="3.新建空博客文件夹"></a>3.新建空博客文件夹</h3><p>安装hexo，在空文件夹中点击鼠标右键点击Git bash here进入命令行,输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><p><img src="/2019/03/28/Hexo-Github搭建个人博客/1.PNG" alt title="示例图片"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure></p><p><img src="/2019/03/28/Hexo-Github搭建个人博客/2.PNG" alt title="示例图片"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p><img src="/2019/03/28/Hexo-Github搭建个人博客/3.PNG" alt title="示例图片"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p><p><img src="/2019/03/28/Hexo-Github搭建个人博客/4.PNG" alt title="示例图片"><br>界面上会有一个类似<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>的网站,界面如下：<br><img src="/2019/03/28/Hexo-Github搭建个人博客/4.jpg" alt title="示例图片"></p><h3 id="4-注册github账号"><a href="#4-注册github账号" class="headerlink" title="4.注册github账号"></a>4.注册github账号</h3><p><a href="https://github.com" target="_blank" rel="noopener">github</a><br><img src="/2019/03/28/Hexo-Github搭建个人博客/6.PNG" alt title="示例图片"></p><h3 id="5-创建一个仓库"><a href="#5-创建一个仓库" class="headerlink" title="5.创建一个仓库"></a>5.创建一个仓库</h3><p>#####注：<br> GithubPages的Repository名字是特定的，比如我Github账号是abc，那么我Github Pages Repository名字就是abc.github.io。<br><img src="/2019/03/28/Hexo-Github搭建个人博客/7.PNG" alt title="示例图片"></p><h3 id="6-设置github-pages"><a href="#6-设置github-pages" class="headerlink" title="6.设置github pages"></a>6.设置github pages</h3><p>点击进入你刚刚创建好的仓库，接着点击settings，进入仓库管理，选择主题，和选择来源为master，试试在浏览器的地址栏输入”你github的用户名.github.io”吧！<br><img src="/2019/03/28/Hexo-Github搭建个人博客/8.GIF" alt title="示例图片"></p><h3 id="7-SSH授权"><a href="#7-SSH授权" class="headerlink" title="7.SSH授权"></a>7.SSH授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>接着3次回车，这样就会在C盘用户目录下生成id_rsa和id_rsa.pub这两个文件<br><img src="/2019/03/28/Hexo-Github搭建个人博客/9.PNG" alt title="示例图片"><br>打开id_rsa.pub，复制其中的全部内容，点击github头像，再点击setting选择SSH and GPG keys，再点击NEW SSH key，将刚才复制的内容粘贴到其中<br><img src="/2019/03/28/Hexo-Github搭建个人博客/11.PNG" alt title="示例图片"><br><img src="/2019/03/28/Hexo-Github搭建个人博客/12.PNG" alt title="示例图片"><br><img src="/2019/03/28/Hexo-Github搭建个人博客/13.PNG" alt title="示例图片"><br><img src="/2019/03/28/Hexo-Github搭建个人博客/14.PNG" alt title="示例图片"></p><h3 id="8-在-config-yml中添加"><a href="#8-在-config-yml中添加" class="headerlink" title="8.在_config.yml中添加"></a>8.在_config.yml中添加</h3><p>复制clone or download下的git地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:github用户名/github用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p><img src="/2019/03/28/Hexo-Github搭建个人博客/10.PNG" alt title="示例图片"></p><h3 id="9-回到命令窗口"><a href="#9-回到命令窗口" class="headerlink" title="9.回到命令窗口"></a>9.回到命令窗口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></p><p><img src="/2019/03/28/Hexo-Github搭建个人博客/15.PNG" alt title="示例图片"><br>最后访问<a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a><br>例如：<br><img src="/2019/03/28/Hexo-Github搭建个人博客/16.PNG" alt title="示例图片"><br>博客搭建初步完成</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo-GitHub搭建博客&quot;&gt;&lt;a href=&quot;#hexo-GitHub搭建博客&quot; class=&quot;headerlink&quot; title=&quot;hexo+GitHub搭建博客&quot;&gt;&lt;/a&gt;hexo+GitHub搭建博客&lt;/h2&gt;
    
    </summary>
    
      <category term="software" scheme="https://smallpotatody.github.io/categories/software/"/>
    
    
      <category term="心得" scheme="https://smallpotatody.github.io/tags/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>VMware Workstation pro 15破解版安装</title>
    <link href="https://smallpotatody.github.io/2019/03/26/VMware-15%E7%A0%B4%E8%A7%A3%E7%89%88/"/>
    <id>https://smallpotatody.github.io/2019/03/26/VMware-15破解版/</id>
    <published>2019-03-26T10:14:43.000Z</published>
    <updated>2019-03-26T12:58:47.589Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-为什么要下载vmware？以及vmware是什么？"><a href="#1-为什么要下载vmware？以及vmware是什么？" class="headerlink" title="1.为什么要下载vmware？以及vmware是什么？"></a>1.为什么要下载vmware？以及vmware是什么？</h1><p>俗话说“工欲善其事，必先利其器”，所以不管是学习Python还是运维以及网络安全，最好在Linux系统上。但是我们有只有一台电脑，装双系统又麻烦，所以选择在Windows上装一个虚拟机来分配一个假想的“电脑”。虚拟机主要有vxbox和vmware这两种，这里我们选择vmware，至于原因不说了。看看维基百科上面怎么说</p><blockquote><p>VMware Workstation是VMware公司销售的<a href="https://zh.wikipedia.org/wiki/%E5%95%86%E4%B8%9A%E8%BD%AF%E4%BB%B6" target="_blank" rel="noopener">商业软件</a>产品之一。该工作站软件包含一个用于<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E7%89%B9%E5%B0%94" target="_blank" rel="noopener">英特尔</a><a href="https://zh.wikipedia.org/wiki/X86" target="_blank" rel="noopener">x86</a>兼容计算机的<a href="https://zh.wikipedia.org/wiki/%E8%99%9A%E6%8B%9F%E6%9C%BA" target="_blank" rel="noopener">虚拟机</a>套装，其允许用户同时创建和运行多个x86虚拟机。每个虚拟机可以运行其安装的操作系统，如（但不限于）<a href="https://zh.wikipedia.org/wiki/Microsoft_Windows" target="_blank" rel="noopener">Windows</a>、<a href="https://zh.wikipedia.org/wiki/Linux" target="_blank" rel="noopener">Linux</a>、<a href="https://zh.wikipedia.org/wiki/BSD" target="_blank" rel="noopener">BSD变生版本</a>。用简单术语来描述就是，VMware Workstation允许一台真实的计算机在一个<a href="https://zh.wikipedia.org/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1" target="_blank" rel="noopener">操作系统</a>中同时打开并运行数个操作系统，其它VMware产品帮助在多个宿主计算机之间管理或移植VMware虚拟机。免费版本为<a href="https://zh.wikipedia.org/wiki/VMware_Workstation_Player" target="_blank" rel="noopener">VMware Workstation Player</a>。</p></blockquote><p>也可以看看百度百科：</p><blockquote><p>VMware Workstation（中文名“威睿工作站”）是一款功能强大的桌面<a href="https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E8%AE%A1%E7%AE%97%E6%9C%BA/5732003" target="_blank" rel="noopener">虚拟计算机</a>软件，提供用户可在单一的桌面上同时运行不同的操作系统，和进行开发、测试 、部署新的应用程序的最佳解决方案。VMware Workstation可在一部实体机器上模拟完整的网络环境，以及可便于携带的<a href="https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E6%9C%BA" target="_blank" rel="noopener">虚拟机</a>器，其更好的灵活性与先进的技术胜过了市面上其他的虚拟计算机软件。对于企业的 IT开发人员和系统管理员而言， VMware在虚拟网路，实时快照，拖曳<a href="https://baike.baidu.com/item/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/7258865" target="_blank" rel="noopener">共享文件夹</a>，支持 PXE 等方面的特点使它成为必不可少的工</p></blockquote><p>好了废话不多说了，有什么不懂自行百度就ok啦！下面言归正传</p><h1 id="2-下载VMware-Workstation-Pro-15"><a href="#2-下载VMware-Workstation-Pro-15" class="headerlink" title="2.下载VMware Workstation Pro 15"></a>2.下载VMware Workstation Pro 15</h1><p><a href="http://www.zdfans.com/html/23250.html" target="_blank" rel="noopener">ZD423</a><br><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html" target="_blank" rel="noopener">官网</a>或者直接去百度上搜索。<br>先看一下官网。。。。。哈哈<br><img src="/2019/03/26/VMware-15破解版/1.png" alt></p><h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h1><p>1.在下载目录下找到安装包并以管理员运行</p><p><img src="/2019/03/26/VMware-15破解版/3.png" alt></p><p>2.在弹出的界面选择下一步</p><p><img src="/2019/03/26/VMware-15破解版/11.png" alt></p><p>3.然后勾选我接受许可协议，然后点击下一步</p><p>4.点击更改选择自己要安装的位置</p><p><img src="/2019/03/26/VMware-15破解版/4.png" alt></p><p>5.点击下一步</p><p>6.点击下一步</p><p><img src="/2019/03/26/VMware-15破解版/5.png" alt></p><p>7.点击安装</p><p><img src="/2019/03/26/VMware-15破解版/6.png" alt></p><p>9.点击许可证</p><p><img src="/2019/03/26/VMware-15破解版/7.png" alt></p><p>10.输入许可证,在下面随便找一个注册码填到其中，再点击完成，完成安装</p><p><img src="/2019/03/26/VMware-15破解版/8.png" alt></p><h1 id="4-使用"><a href="#4-使用" class="headerlink" title="4.使用"></a>4.使用</h1><p>1.在桌面找到vmware workstation pro的快捷方式</p><p><img src="/2019/03/26/VMware-15破解版/9.png" alt></p><p>2.vmware界面</p><p><img src="/2019/03/26/VMware-15破解版/10.png" alt></p><h1 id="5-成果"><a href="#5-成果" class="headerlink" title="5.成果"></a>5.成果</h1><p>我安装了国产deepin系统以及kali和ubuntu，给大家展示一下deepin国产系统</p><p>deepin介绍看百度百科</p><blockquote><p>[1]  Deepin 原名Linux Deepin，在2014年4月改名<a href="https://baike.baidu.com/item/Deepin" target="_blank" rel="noopener">Deepin</a>。Deepin团队基于Qt/C++（用于前端）和Go（用于后端）开发了的全新深度桌面环境（DDE），以及音乐播放器，视频播放器，软件中心等一系列特色软件。</p><p>Deepin是由武汉深之度科技有限公司开发的Linux发行版。Deepin 是一个基于 Linux 的操作系统，专注于使用者对日常办公、学习、生活和娱乐的操作体验的极致，适合笔记本、桌面计算机和一体机。它包含了所有您需要的应用程序，网页浏览器、幻灯片演示、文档编辑、电子表格、娱乐、声音和图片处理软件，即时通讯软件等等。Deepin 的历史可以追溯到 2004年，其前身 Hiweed Linux 是中国第一个基于 Debian的本地化衍生版，并提供轻量级的可用LiveCD，旨在创造一个全新的简单、易用、美观的 Linux 操作系统。</p><p>Deepin拥有自主设计的特色软件：深度软件中心、深度截图、深度音乐播放器和深度影音，全部使用自主的DeepinUI，其中有深度桌面环境，DeepinTalk（深谈）等。</p><p>Deepin是中国最活跃的 Linux 发行版，Deepin 为所有人提供稳定、高效的操作系统，强调安全、易用、美观。其口号为“免除新手痛苦，节约老手时间”。在社区的参与下，“让 Linux 更易用”也不断变成可以触摸的现实。 [2] </p></blockquote><p><img src="/2019/03/26/VMware-15破解版/12.png" alt></p><p>应用商店有很多windows上常用的软件,甚至还有steam，这可以说非常适合热衷于游戏党了！可以看到他还有编程开发分类页，这上面有很多软件像Pycharm等这些软件，这不需要太多Linux命令，还是汉语，上面还有终端，可以说非常适合小白和新手入门Linux。</p><p><img src="/2019/03/26/VMware-15破解版/13.png" alt></p><p>让我们来看一下deepin上的终端</p><p><img src="/2019/03/26/VMware-15破解版/14.png" alt></p><p>可以说相当漂亮还有多种主题选择</p><p>最后给一个deepin系统下载地址：<a href="https://www.deepin.org/download/" target="_blank" rel="noopener">deepin镜像</a></p><p>注册码：</p><p><code>AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</code></p><p><code>CU702-DRD1M-H89GP-JFW5E-YL8X6</code></p><p><code>YY5EA-00XDJ-480RP-35QQV-XY8F6</code></p><p><code>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</code></p><p><code>VF750-4MX5Q-488DQ-9WZE9-ZY2D6</code></p><p><code>UU54R-FVD91-488PP-7NNGC-ZFAX6</code></p><p><code>YC74H-FGF92-081VZ-R5QNG-P6RY4</code></p><p><code>YC34H-6WWDK-085MQ-JYPNX-NZRA2</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-为什么要下载vmware？以及vmware是什么？&quot;&gt;&lt;a href=&quot;#1-为什么要下载vmware？以及vmware是什么？&quot; class=&quot;headerlink&quot; title=&quot;1.为什么要下载vmware？以及vmware是什么？&quot;&gt;&lt;/a&gt;1.为什么
      
    
    </summary>
    
      <category term="虚拟机" scheme="https://smallpotatody.github.io/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="虚拟机" scheme="https://smallpotatody.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Html+css基础语法</title>
    <link href="https://smallpotatody.github.io/2019/03/22/html-css%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>https://smallpotatody.github.io/2019/03/22/html-css基础语法/</id>
    <published>2019-03-22T10:47:44.000Z</published>
    <updated>2019-03-22T11:56:07.833Z</updated>
    
    <content type="html"><![CDATA[<p>Html标记语言<br>目录<br>Html标记语言<br>1.Html语法<br>1.什么是html语言<br>2.Html的标记和属性    </p><ol start="3"><li>语法不区分大小写<br> 2.html的基本结构<br> 1.<code>&lt;html&gt;</code>内容<code>&lt;/html&gt;</code><br> 2.<code>&lt;head&gt;</code>内容<code>&lt;/head&gt;</code><br> 3.<code>&lt;title&gt;</code>内容<code>&lt;/title&gt;</code><br> 4.<code>&lt;body&gt;</code>内容<code>&lt;/body&gt;</code><br> 5.<code>&lt;meta&gt;</code><br> 3.文档设置标记<br> 1.格式标记<br> 2.文本标记<br> 4.图形标记    </li><li>使用方法<br> 2.注意<br> 3.<code>&lt;img&gt;</code>标记属性<br> 5.超链接的使用<br> 6.表格<br> 1.<code>&lt;table&gt;…&lt;/table&gt;</code>标记<br> 2.<code>&lt;caption&gt;…&lt;/caption&gt;</code>标记<br> 3.<code>&lt;tr&gt;…&lt;/tr&gt;</code>表记<br> 7.框架<br> 1.<code>&lt;frameset&gt;</code>划分框架标记：<br> 2.<code>&lt;frame&gt;</code>子窗口标记：<br> 8.表单<br> 1.表单标记：<br> 2.文本域和密码：<br> 3.提交、重置、普通按钮：<br> 4.单选框和复选框：<br> 5.隐藏域：<br> 6.多行文本域：<br> 7.菜单下拉域：    </li></ol><p>1.Html语法<br>1.什么是html语言<br>超文本标记语言，标准通用标记语言下的一个应用。是 网页制作必备的编程语言。超文本”就是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素。超文本标记语言的结构包括“头”部分（英语：Head）、和“主体”部分（英语：Body），其中头”部提供关于网页的信息，“主体”部分提供网页的具体内容。<br>2.Html的标记和属性<br>HTML保存格式</p><ol><li>.html</li><li>.htm</li><li>.xhtml<br>标记和被标记的内容构建出HTML文档<ol><li>&lt;标记&gt; 内容 &lt;/标记&gt;<br>标记属性</li><li>就是用来控制我们的内容如何显示</li><li>格式：&lt;标记 属性1=属性值 属性2=属性值……….&gt;内容&lt;/标记&gt;</li></ol></li><li>语法不区分大小写<pre><code>a. &lt;HTML&gt;,&lt;Html&gt;,&lt;html&gt;都是一样的意义，但是尽量使用小写</code></pre></li><li>文档注释<pre><code>a.&lt;!—注释内容--&gt;</code></pre></li><li>代码格式<pre><code>a.空格键和回车键在网页中都不起作用b.使用Tab键进行缩进！</code></pre></li><li>字符实体<br>a.什么是字符实体？<br>字符实体通俗讲就是网页文件中复杂的符号代码和一些标点的代码。例如小于号 &lt; 大于号 &gt; 双引号 “这些符号要在浏览器中显示，在HTML文档中都必需被转化成字符实体。字符实体有三部分：一个和号 (&amp;)，一个实体名称及一个分号（；），或者 # 和一个实体编号，以及一个分号 (;)。<br>b.常见字符实体<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">显示结果描述实体名称实体编号</span><br><span class="line">  空格  &amp;nbsp;&amp;#160;</span><br><span class="line">&lt;小于号&amp;lt;&amp;#60;</span><br><span class="line">&gt;大于号&amp;gt;&amp;#62;</span><br><span class="line">&amp;和号&amp;amp;&amp;#38;</span><br><span class="line">&quot;引号&amp;quot;&amp;#34;</span><br><span class="line">&apos;撇号 &amp;apos; (IE不支持)&amp;#39;</span><br><span class="line">￠分（cent）&amp;cent;&amp;#162;</span><br><span class="line">£镑（pound）&amp;pound;&amp;#163;</span><br><span class="line">¥元（yen）&amp;yen;&amp;#165;</span><br><span class="line">€欧元（euro）&amp;euro;&amp;#8364;</span><br><span class="line">§小节&amp;sect;&amp;#167;</span><br><span class="line">©版权（copyright）&amp;copy;&amp;#169;</span><br><span class="line">®注册商标&amp;reg;&amp;#174;</span><br><span class="line">™商标&amp;trade;&amp;#8482;</span><br><span class="line">×乘号&amp;times;&amp;#215;</span><br><span class="line">÷除号&amp;divide;&amp;#247;</span><br></pre></td></tr></table></figure></li></ol><p>2.html的基本结构<br>1.<code>&lt;html&gt;</code>内容<code>&lt;/html&gt;</code><br>Html文档的文档标记，也称为html的开始标记。分别位于网页最前端和最后段，<code>&lt;html&gt;</code>表示网页开始，<code>&lt;/html&gt;</code>表示网页的结束。<br>2.<code>&lt;head&gt;内容&lt;/head&gt;</code><br>Html文件头标记，也称为html头信息开始标记。用来包含文件的基本信息，比如网页的标题、关键字。在其中可以放入<code>&lt;title&gt;……&lt;/title&gt;、&lt;meta&gt;、&lt;style&gt;……&lt;/style&gt;</code>等标记。<br>3.<code>&lt;title&gt;</code>内容<code>&lt;/title&gt;</code><br>Html文件标题标记，网页的“主题”，显示在浏览器的窗口的左上角，应当注意网页的标题不能太长，像百度这种短小精悍。<br>4.<code>&lt;body&gt;</code>内容<code>&lt;/body&gt;</code><br>HTML文档的主体标记，可以包含多个标记。例如：<code>&lt;p&gt;&lt;/p&gt;、&lt;h1&gt;&lt;/h1&gt;、&lt;br&gt;&lt;/br&gt;</code>等标记来组成我们看见的网页。Body标记常见属性：<br>bgcolor—————–设置背景颜色———<code>&lt;body bgcolor=&quot;blue&quot;&gt;&lt;/body&gt;</code><br>text——————–设置文本颜色———-<code>&lt;body text=&quot;red&quot;&gt;&lt;/body&gt;</code><br>link———————设置连接颜色———<code>&lt;body link=&quot;red&quot;&gt;&lt;/body&gt;</code><br>vlink——————–已经访问了的链接颜色–<code>&lt;body vlink=&quot;yellow&quot;&gt;&lt;/body&gt;</code><br>alink——————–正在被点击的链接颜色–<code>&lt;body alink=&quot;red&quot;&gt;&lt;/body&gt;</code><br>5.<code>&lt;meta&gt;</code><br>页面的元信息，提供有关页面的元信息，比如针对搜索引擎和更新频度的描述和关键词</p><p>`</p><p><meta name="”keyworlds”" content="”内容”">`<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">其中常用的name属性有author、keyworlds、description、others。&lt;meta&gt;必须放在head元素里面。&lt;meta charset=”utf-8”&gt;来设置编码格式。</span><br></pre></td></tr></table></figure></p><p>3.文档设置标记<br>1.格式标记<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;强制换行标记</span><br><span class="line">&lt;p&gt;换段落标记</span><br><span class="line">&lt;center&gt;居中对齐标记</span><br><span class="line">&lt;pre&gt;预格式化标记</span><br><span class="line">&lt;li&gt;列表项目标记</span><br><span class="line">&lt;ul&gt;无序列表标记</span><br><span class="line">&lt;ol&gt;有序列表标记---&#123; &lt;ol type=”符号类型”&gt;</span><br><span class="line">                     &lt;li type=”符号类型“&gt;&lt;/li&gt;</span><br><span class="line"> &lt;li type=”符号类型”&gt;&lt;/li&gt;</span><br><span class="line">                     …………………………………</span><br><span class="line">………………………………</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">&#125;</span><br><span class="line">Type属性值：1、A、a、I、i</span><br><span class="line">Value定义一个新的序列数字起始值，列表可以嵌套。</span><br><span class="line">&lt;dl&gt;&lt;dt&gt;&lt;dd&gt;对列表条目进行简短的说明，格式：</span><br><span class="line">&lt;dl&gt;</span><br><span class="line">&lt;dt&gt;软件说明：&lt;/dt&gt;</span><br><span class="line">&lt;dd&gt;简单介绍软件的功能及基本应用&lt;/dd&gt;</span><br><span class="line">&lt;dt&gt;软件界面&lt;/dt&gt;</span><br><span class="line">&lt;dd&gt;用于选择软件的外观&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br><span class="line">&lt;hr&gt;分割线————————————————————————————</span><br><span class="line">&lt;div&gt;分区显示标记，也称之为层标记，常用来编排一大段的html段落，也可以用于格式化表，和&lt;p&gt;很相似，可以多层嵌套使用。</span><br></pre></td></tr></table></figure></p><p>2.文本标记<br><code>&lt;hn&gt;&lt;/hn&gt;</code>，标题标记，n为1到6个级别，h1最大，h6最小；<br><code>&lt;font&gt;&lt;/font&gt;</code>，字体设置标记，有size（字体大小）、color（颜色）、face（字体）。例如：<font size="”3”" color="”red”" face="”宋体”"></font>。Size从1到7；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;&lt;/b&gt;粗体标记；</span><br><span class="line">&lt;i&gt;&lt;/i&gt;斜体标记；</span><br><span class="line">&lt;cite&gt;&lt;/cite&gt;引用方式的字体，斜体；</span><br><span class="line">&lt;em&gt;&lt;/em&gt;表示强调，斜体；</span><br><span class="line">&lt;sub&gt;&lt;/sub&gt;文字下标字体标记；</span><br><span class="line">&lt;sup&gt;&lt;/sup&gt;文字上标字体标记；</span><br><span class="line">&lt;strong&gt;&lt;/strong&gt;表示强调，粗体；</span><br><span class="line">&lt;small&gt;&lt;/small&gt;小型字体标记；</span><br><span class="line">&lt;big&gt;&lt;/big&gt;大型字体标记;</span><br><span class="line">&lt;u&gt;&lt;/u&gt;下划线字体标记；</span><br></pre></td></tr></table></figure></p><p>4.图形标记<br><code>&lt;img&gt;</code>图像标记</p><ol><li>使用方法<br>&lt;img src=”路径/文件名.图片格式或者图片网址” width=”属性值” height=”属性值” border=”属性值” alt=”属性值”&gt;<br>2.注意<br><code>&lt;img&gt;</code>为单标记；<br>3.<code>&lt;img&gt;</code>标记属性<br>1.src属性：指定我们要加载的图片的路径和图片名称和格式<br>2.width属性：指定图片的宽度，单位为px、em、cm、mm。<br>3.height属性：指定图片高度，单位为px、em、cm、mm。<br>4.border属性：指定图片的边框宽度，单位为px、em、cm、mm。<br>5.alt属性：当网页上的图片被加载完成后，鼠标移动到上面去，会显示这个图片指定的属性文字。如果图像没有下载或者加载失败，会用文字来代替图像显示。搜索引擎可以通个这个属性的文字来抓取图片。<br>5.超链接的使用<br>1.基本语法<br><code>&lt;a href=” ” target=”打开方式” name=“页面锚点名称” &gt;链接文字或者图片&lt;/a&gt;</code><br>2.属性<br>1.href属性：链接的的地址，链接的地址可以是一个网页，也可以是一个视频、图片、音乐等等。<br>2.target属性：<br>定义超链接的打开方式<br>_blank 在一个新的窗口中打开链接；<br>_seif(默认值)在当前页面打开；<br>_parent 在父窗口中打开页面<br>_top 在顶层窗口中打开文件<br>3.name属性：<br>指定页面的的锚点名称；<br><img src="/2019/03/22/html-css基础语法/1.1.png" alt><br><img src="/2019/03/22/html-css基础语法/1.2.png" alt><br>6.表格<br>1.<code>&lt;table&gt;…&lt;/table&gt;</code>标记<br>1.基本格式：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">   &lt;table width=&quot;960&quot; …… height=&quot;300&quot;(属性=”属性值”) &gt;</span><br><span class="line">&lt;caption&gt;表格标题&lt;/caption&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;班级&lt;/th&gt;</span><br><span class="line">&lt;th&gt;姓名&lt;/th&gt; </span><br><span class="line">&lt;th&gt;年龄&lt;/th&gt; </span><br><span class="line">&lt;th&gt;成绩&lt;/th&gt; </span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;四年级一班&lt;/td&gt;</span><br><span class="line">&lt;td&gt;张三&lt;/td&gt;</span><br><span class="line">&lt;td&gt;16&lt;/td&gt;</span><br><span class="line">&lt;td&gt;80&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></li></ol><p>2.table标记的属性：<br>    1.width表示表格宽度，单位px、%。<br>    2.height 表示表格的高度，单位px、%。<br>    3.border 表示表格外边框的宽度，单位<br>    4.align属性 表格显示的位置。如：align=“left”，其中left可以为center、right，默认是left。<br>    5.cellspacing 单元格之间的间距，默认值是2px，单位为px像素。<br>    6.cellpadding 单元格内容与单元格边框的显示距离，单位像素。<br>    7.frame 控制表格边框最外层的四条线框：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.void：默认值，表示无边框</span><br><span class="line">2.above：表示仅有顶部边框</span><br><span class="line">3.below：表示仅有底部边框</span><br><span class="line">4.hsides：表示仅有顶部和底部边框</span><br><span class="line">5.lhs：表示仅有左侧边框</span><br><span class="line">6.rhs：表示仅有右侧边框</span><br><span class="line">7.vsides：表示仅有左右侧边框</span><br><span class="line">8.box：表示包含全部4个边框</span><br><span class="line">9.border：表示包含全部4个边框</span><br></pre></td></tr></table></figure></p><p>8.rules 控制单元是否显示以及如何显示单元格之间的分割线：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.none 表示无分割线</span><br><span class="line">2.all 表示包括所有分割线</span><br><span class="line">3.rows 表示仅有行分割线</span><br><span class="line">4.clos 表示仅有列分割线</span><br><span class="line">5.groups 表示仅在行组和列祖之间有分割线</span><br></pre></td></tr></table></figure></p><p>2.<code>&lt;caption&gt;…&lt;/caption&gt;</code>标记<br>即表格标题标记，位于<code>&lt;table&gt;</code>之后，<code>&lt;tr&gt;</code>之前。有align属性，使用格式为<code>&lt;caption align=”top”&gt;</code>。top可以为bottom（表格的下部）、left（表格的左部）、right（表格的右部）。<br>3.<code>&lt;tr&gt;…&lt;/tr&gt;</code>标记<br>定义表格的一行，对于每一个表格行，都是由一对<tr>…</tr>标记表示，每一行<tr>标记内可以嵌套多个<td>或者<th>标记。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.bgcolor 设置背景颜色，bgcolor=”颜色值”</span><br><span class="line">2.align 设置垂直方向对齐方式，align=“值”，值为top（靠底部对齐）、bottom（靠顶端对齐）、middle（居中对齐）。</span><br><span class="line">3.valign 设置水平方向对齐方式，valign=”值”，值为left（靠左对齐）、right（靠右对齐）、center（居中对齐）。</span><br></pre></td></tr></table></figure></th></td></tr></p><p>4.<code>&lt;td&gt;和&lt;th&gt;</code>标记<br><code>&lt;td&gt;和&lt;th&gt;</code>都是单元格的标记，其必须嵌套在<code>&lt;tr&gt;</code>标签内，是成对出现的，<code>&lt;th&gt;</code>是表头标记，通常位于首行或者首列，<code>&lt;th&gt;</code>中的文字默认会被加粗，而<code>&lt;td&gt;</code>不会，<code>&lt;td&gt;</code>是数据标记，表示该单元格的具体数据。属性有bgcolor、align、valign、width、height、rowspan(单元格所占行数)、colspan（单元格所占列数）。<br><img src="/2019/03/22/html-css基础语法/3.png" alt><br>7.框架<br>框架将浏览器划分成不同的部分，每一个部分加载不同的网页，实现在同一浏览器窗口中加载多个页面的效果。<br>格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;HTML框架&lt;/title&gt;</span><br><span class="line">&lt;meta=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;frameset rows=&quot;90,*,90&quot; frameborder=&quot;1&quot; border=&quot;1&quot;&gt;</span><br><span class="line">&lt;frame name=&quot;top&quot; src=&quot;top.html&quot;/&gt;</span><br><span class="line">&lt;frameset cols=&quot;30%,70%&quot;&gt;</span><br><span class="line">&lt;frame name=&quot;left&quot; src=&quot;left.html&quot;/&gt;</span><br><span class="line">&lt;frame name=&quot;right&quot; src=&quot;right.html&quot; scrolling=&quot;auto&quot;/&gt;</span><br><span class="line">&lt;/frameset&gt;</span><br><span class="line">&lt;frame name=&quot;bottom&quot; src=&quot;bottom.html&quot;/&gt;</span><br><span class="line">&lt;/frameset&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>1.<code>&lt;frameset&gt;</code>划分框架标记：<br>cols：分割左右窗口，<code>’*’</code>表示剩余部分，<code>’*’,’*’</code>表示均分成两个，<code>’*,’*’,’*’</code>表示均分成三个，单位为像素和%比。<br>rows：分割上下窗口，<code>’*’</code>表示剩余部分，<code>’*’,’*’</code>表示均分成两个<code>，’*,’*’,’*’</code>表示均分成三个，单位为像素和%比。<br>frameborder：指定是否显示边框，0表示不显示边框，1表示显示边框。<br>border：设置边框的大小，默认值为5像素。<br>2.<code>&lt;frame&gt;</code>子窗口标记：<br>在<code>&lt;frameset&gt;</code>中设置了几个窗口，就必须对应使用几个<code>&lt;frame&gt;</code>框架，而且还必须使用src属性指定一个网页。<br>src：加载网页文件的URL地址；<br>name: 框架名称，是链接标记的target所要参数；<br>noresize：表示不能调节框架大小，没有设置时可以调整；<br>scrolling：是否需要滚动条，根据需要可以选择yes（表示有滚动条）、no（表示无滚动条）、auto（表示根据需要自动出现）。<br>frameborder：是否需要边框，1表示显示边框，0表示不显示边框。<br><img src="/2019/03/22/html-css基础语法/2..png" alt><br><img src="/2019/03/22/html-css基础语法/2.png" alt><br><img src="/2019/03/22/html-css基础语法/2.1.png" alt><br>8.表单<br>1.表单标记：</p><p><code>&lt;form&gt; &lt;/form&gt;</code>定义表单开始和结束位置，表单提交时的内容就是<code>&lt;form&gt;</code>表单中的内容。<br>基本格式<code>&lt;form action=”服务器端地址（接受表单内容的地址）” name=”表单名称” method=“post或者get“&gt;…&lt;/from&gt;</code>。name为表单名称，method为传送数据的方式，分为post和get两种方式，get方式提交时，会将表单的内容附加在URL地址的后面，所以限制了提交内容的长度，不超过8192个字符，且不具备保密性。post方式提交时，将表单中的数据一并包含在表单主体中，一起传送到服务器中处理，没有数据大小限制，且具有保密性,默认是get方式。action是指表单数据的处理程序的URL地址，如果为空则使用当前文档的URL地址，如果表单中不需要使用action属性也要指定其属性为”no”。enctype设置表单的资料的编码方式。Target用来指定目标窗口，和超链接的属于类似。<br>2.文本域和密码：<br><code>&lt;input&gt;</code>标记是单标记没有结束标记。<code>&lt;input type=”” name=”” value=”” size=”” maxlength=””&gt;</code>。type属性有text和password两种，type=”text”时，<code>&lt;input&gt;</code>表示一个文本输入域，type=”password”时，<code>&lt;input&gt;</code>表示一个密码域。name属性定义控件的名称。value属性表示初始化值，打开浏览器时，文本框中的内容。size属性设置控件的长度。maxlenght属性表示输入框中最大允许输入的字符数。<br>3.提交、重置、普通按钮：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">提交按钮： &lt;input type=”submit”&gt;;</span><br><span class="line">重置按钮： &lt;input type=”reset”&gt;</span><br><span class="line">普通按钮： &lt;input type=”button”&gt;</span><br></pre></td></tr></table></figure></p><p>4.单选框和复选框：<br><code>&lt;input type=”radio”&gt;</code>   ————&gt;除了初值为两个都没选，其余要选则必须选一个，且只能是一个；<br><code>&lt;input type=”checkbox”&gt;</code>  ———&gt;可以选一个也可取消，或可两个都选和不选；<br><code>&lt;input type=”radio” checked=”checked”&gt;</code> ——&gt;checked为默认选项；<br>5.隐藏域：<br><code>&lt;input type=”hidden”&gt;</code> ————&gt;隐藏表单域；<br>6.多行文本域：<br><code>&lt;textarea name=”name” rows=”n” cols=”n” value=”……”&gt;…&lt;/textarea&gt;</code>，n指数值，rows属性指行数，cols属性指列数，单位是字符个数。<br>7.菜单下拉域：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=”” size=”value” multiple&gt; ——&gt;multiple表示多选</span><br><span class="line">&lt;option value=”value” selected&gt; value &lt;/option&gt;</span><br><span class="line">&lt;option value=”value”&gt; value &lt;/option&gt;</span><br><span class="line">&lt;option value=”value”&gt; value &lt;/option&gt;</span><br><span class="line">…………………………………………………………</span><br><span class="line">&lt;option value=”value”&gt; value &lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p><p><code>&lt;option&gt;</code>标记用来指定列表中的的一个选项，需要放在<code>&lt;select&gt;&lt;/select&gt;</code>之间，给选项赋值，指定传送到服务器上面的值，selected指定默认选项值。</p><p><img src="/2019/03/22/html-css基础语法/1.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Html标记语言&lt;br&gt;目录&lt;br&gt;Html标记语言&lt;br&gt;1.Html语法&lt;br&gt;1.什么是html语言&lt;br&gt;2.Html的标记和属性    &lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;语法不区分大小写&lt;br&gt; 2.html的基本结构&lt;br&gt; 1.&lt;code&gt;&amp;lt
      
    
    </summary>
    
      <category term="html+css" scheme="https://smallpotatody.github.io/categories/html-css/"/>
    
    
      <category term="html+css" scheme="https://smallpotatody.github.io/tags/html-css/"/>
    
  </entry>
  
  <entry>
    <title>SecureCRT的安装与破解</title>
    <link href="https://smallpotatody.github.io/2019/03/15/SecureCRT/"/>
    <id>https://smallpotatody.github.io/2019/03/15/SecureCRT/</id>
    <published>2019-03-15T07:04:30.000Z</published>
    <updated>2019-03-15T10:14:49.084Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1-下载securecrt"><a href="#1-下载securecrt" class="headerlink" title="1.下载securecrt"></a>1.下载securecrt</h1><p>securecrt下载地址:</p><p><a href="https://pan.baidu.com/s/1cOSa11PBETc_fq3jAmWcFQ/" target="_blank" rel="noopener">百度网盘</a> 提取码: fbmi 复制这段内容后打开百度网盘手机App，操作更方便哦!<br>软件资源取自ZD423,也可以去ZD423去下载!<br><a href="http://www.zdfans.com/html/16750.html" target="_blank" rel="noopener">ZD423</a><br><a href="https://www.vandyke.com/cgi-bin/releases.php?product=securecrt" target="_blank" rel="noopener">官网</a><br>找到自己要下的对应的版本下载<br><img src="/2019/03/15/SecureCRT/8.png" alt></p><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><ul><li><p>将下载下来的软件解压，然后安装scrt_sfx833-x64</p><p><img src="/2019/03/15/SecureCRT/1.png" alt></p></li></ul><ul><li>选择complete</li></ul><p><img src="/2019/03/15/SecureCRT/2.png" alt></p><ul><li>添加桌面快捷方式</li></ul><p><img src="/2019/03/15/SecureCRT/3.png" alt></p><ul><li><p>安装完成</p><p><img src="/2019/03/15/SecureCRT/4.png" alt></p></li><li><p>安装完成后，可以看到桌面已经有了快捷方式，先别忙打开软件</p><p>将Crack文件夹或者keygen.exe复制到SecureCRT安装路径：c &gt; program &gt; VanDyke Software &gt; Clients</p><p><img src="/2019/03/15/SecureCRT/5.png" alt></p></li><li><p>以管理员身份运行keygen.exe</p><p><img src="/2019/03/15/SecureCRT/6.png" alt></p></li></ul><ul><li><p>点击Patch，如果出现We are sorry ……………,那么就关掉重新点击注册机上的Generate按钮更换注册码，直到成功出现Path has been done successfully!字样代表成功了。</p><p><img src="/2019/03/15/SecureCRT/7.png" alt></p></li></ul><p><strong>注意：</strong> 点击确定按钮后会再弹出一个界面选择LicenseHelper.exe,然后会出现同样成功的字样。</p><ul><li>再点击桌面上的快捷方式就会弹出 一个服务器连着电脑的图形界面就成功了。<h1 id="3-SecureCRT的使用"><a href="#3-SecureCRT的使用" class="headerlink" title="3.SecureCRT的使用"></a>3.SecureCRT的使用</h1></li></ul><ul><li>在连接之前，你与要到你的Linux系统上去开启sshd服务在终端输入<br><code>sudo apt-get install openssh-server</code></li></ul><ul><li>终端上显示:<code>ssh start/running, process 2425</code>就表示安装好了。<br><img src="/2019/03/15/SecureCRT/10.png" alt></li></ul><ul><li>在终端上输入命令<code>ifconfig</code></li></ul><ul><li>找到你虚拟机的ip，然后将IP复制到以下界面中的Hostname<br><img src="/2019/03/15/SecureCRT/9.png" alt></li></ul><ul><li>然后连接进行测试，由于我使用的是ubuntu<br><img src="/2019/03/15/SecureCRT/11.png" alt></li></ul><ul><li>找到SecureCRT的设置及Session Options进行设置<br><img src="/2019/03/15/SecureCRT/12.png" alt></li></ul><ul><li>文件传输Zmodem<br>先在终端上输入命令进行安装：<code>sudo apt-get install lrzsz</code></li></ul><ul><li>从windows上传文件至linux：<code>rz</code> </li></ul><ul><li>从linux上传文件至windows：<code>sz filename</code>,然后在windows上的Downloads<br><img src="/2019/03/15/SecureCRT/13.png" alt><br><img src="/2019/03/15/SecureCRT/14.png" alt></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1-下载securecrt&quot;&gt;&lt;a href=&quot;#1-下载securecrt&quot; class=&quot;headerlink&quot; title=&quot;1.下载securecrt&quot;&gt;&lt;/a&gt;1.下载securecrt&lt;/h1&gt;&lt;p&gt;securecr
      
    
    </summary>
    
      <category term="software" scheme="https://smallpotatody.github.io/categories/software/"/>
    
    
      <category term="软件安装" scheme="https://smallpotatody.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法的介绍</title>
    <link href="https://smallpotatody.github.io/2019/03/11/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://smallpotatody.github.io/2019/03/11/markdown语法/</id>
    <published>2019-03-11T10:50:38.923Z</published>
    <updated>2019-03-11T12:11:27.531Z</updated>
    
    <content type="html"><![CDATA[<p>怎样在网站上书写我们的第一篇博客吧<br><a id="more"></a></p><h1 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a>一、创建文章</h1><p>在站点文件夹中打开 git bash，输入如下命令创建文章，其中 name 为文章的标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;name&quot;</span><br></pre></td></tr></table></figure></p><p>当输入命令后，就会在 source/_post 文件夹下创建一个文件，命名为：name.md<br>这个文件就是将要发布到网站上的原始文件，用于记录文章内容</p><h1 id="二、编写文章（基于-Markdown）"><a href="#二、编写文章（基于-Markdown）" class="headerlink" title="二、编写文章（基于 Markdown）"></a>二、编写文章（基于 Markdown）</h1><h2 id="1、Markdown-简介"><a href="#1、Markdown-简介" class="headerlink" title="1、Markdown 简介"></a>1、Markdown 简介</h2><p>Markdown 是一种可以使用普通文本编辑器编写的 标记语言，通过简单的 标记语法，它可以使普通文本内容具有一定的格式<br>基于 Markdown 语法的简洁性，它已经成为目前世界上最流行的用于书写博客的语言</p><h2 id="2、Markdown-语法"><a href="#2、Markdown-语法" class="headerlink" title="2、Markdown 语法"></a>2、Markdown 语法</h2><p>Typora-Markdown编辑器<br>简单而强大，支持原生的语法，也支持对应的快捷键，还可以 实时预览<br> Typora 的下载地址：<a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a></p><h1 id="三、常用的-Markdown-语法"><a href="#三、常用的-Markdown-语法" class="headerlink" title="三、常用的 Markdown 语法"></a>三、常用的 Markdown 语法</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p>Markdown 语法：</p><p> #一级标题</p><p> ##二级标题</p><p> ###三级标题</p><p> ####四级标题</p><p> #####五级标题</p><p> ######六级标题<br>Typora 快捷键：<br>Ctrl+1：一级标题<br>Ctrl+2：二级标题<br>Ctrl+3：三级标题<br>Ctrl+4：四级标题<br>Ctrl+5：五级标题<br>Ctrl+6 ：六级标题<br>Ctrl+0：段落</p><h2 id="2-粗体、斜体、删除线和下划线"><a href="#2-粗体、斜体、删除线和下划线" class="headerlink" title="2.粗体、斜体、删除线和下划线"></a>2.粗体、斜体、删除线和下划线</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure></p><p>Typora 快捷键：<br>Ctrl+I：斜体<br>Ctrl+B：粗体<br>Ctrl+U：下划线<br>Alt+Shift+5：删除线</p><h2 id="3-引用块"><a href="#3-引用块" class="headerlink" title="3.引用块"></a>3.引用块</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 文字引用</span><br><span class="line">Typora 快捷键： Ctrl+Shift+Q</span><br></pre></td></tr></table></figure></p><h2 id="4-代码块"><a href="#4-代码块" class="headerlink" title="4.代码块"></a>4.代码块</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`行内代码`</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``` 多行代码  ```</span><br></pre></td></tr></table></figure><p>Typora 快捷键：</p><p>行内代码：Ctrl+Shift+`</p><p>多行代码：Ctrl+Shift+K</p><h2 id="5-公式块"><a href="#5-公式块" class="headerlink" title="5.公式块"></a>5.公式块</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$ </span><br><span class="line">  数学公式</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></p><p>Typora 快捷键： Ctrl+Shift+M</p><h2 id="6-分割线"><a href="#6-分割线" class="headerlink" title="6.分割线"></a>6.分割线</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法一:---</span><br><span class="line"></span><br><span class="line">方法二:+++</span><br><span class="line"></span><br><span class="line">方法三：***</span><br></pre></td></tr></table></figure></p><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a>7.列表</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.有序列表项</span><br><span class="line"></span><br><span class="line">*无序列表项</span><br><span class="line"></span><br><span class="line">+无序列表项</span><br><span class="line"></span><br><span class="line">-无序列表项</span><br></pre></td></tr></table></figure></p><p>Typora 快捷键：</p><p>有序列表项：Ctrl+Shift+[</p><p>无序列表项：Ctrl+Shift+]</p><h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h2><p>Markdown 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">表头1|表头2</span><br><span class="line">-|-|-</span><br><span class="line">内容11|内容12</span><br><span class="line">内容21|内容22</span><br></pre></td></tr></table></figure></p><p>Typora 快捷键： Ctrl+T</p><h2 id="9-超链接"><a href="#9-超链接" class="headerlink" title="9.超链接"></a>9.超链接</h2><p>Markdown语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法一[](链接地址 &quot;链接描述&quot;)</span><br><span class="line">如[](https://www.example.com/ &quot;示例链接&quot;)</span><br><span class="line"></span><br><span class="line">方法二：&lt;链接地址&gt;</span><br><span class="line">如：&lt;https://www.example.com/&gt;</span><br></pre></td></tr></table></figure></p><p>Typora快捷键： Ctrl+K</p><p>##10.图片<br>Markdown语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![图片文字](图片地址 &quot;图片描述&quot;)</span><br><span class="line">如：![示例图片](https://www.example.com/example.PNG &quot;示例图片&quot;)</span><br></pre></td></tr></table></figure></p><p>Typora快捷键： Ctrl+Shift+I</p><p>注:</p><p>安装插件 npm install hexo-asset-image –save</p><p>将 站点配置文件 中的 post_asset_folde: true</p><p>这样，当使用 hexo new name文章时，将同时在 source/_post 文件夹中生成一个 name文件夹，我们只需将图片放进此文件夹中，然后在文章中通过 Markdown语法写入<br>如：在资源文件夹（就是那个与 name文件夹）中添加图片 example.PNG，则可以在对应的文章中使用语句 <code>![示例图片](title/example.PNG &quot;示例图片&quot;)</code>添加图片</p><h1 id="四、高级设置"><a href="#四、高级设置" class="headerlink" title="四、高级设置"></a>四、高级设置</h1><h2 id="1-模板设置"><a href="#1-模板设置" class="headerlink" title="1.模板设置"></a>1.模板设置</h2><p>当我们使用命令 hexo new “title” 创建文章时，Hexo 会根据 /scaffolds/post.md 对新文章进行初始化<br>换言之，/scaffolds/post.md 就是新文章的 模板，所以我们可以修改它来适应自己的写作习惯<br>一个简单的示例如下：<br>title: Markdown语法的介绍<br>date: 1552301438923<br>tags:<br>categories: </p><h2 id="2-头部设置"><a href="#2-头部设置" class="headerlink" title="2.头部设置"></a>2.头部设置</h2><p>在每篇利用 Hexo 创建的文章的开头，都会有对文章进行说明的文字，叫做 文章头部<br>文章的头部除了可以设置文章标题、发布日期等基础信息外，还可以为文章添加标签、分类等<br>一个简单的示例如下：<br>title: Title<br>date: YYYY-MM-DD HH:MM:SS<br>tags: [tag1, tag2, …]<br>categories: category<br>注意：属性和属性值之间必须有一个空格，否则会解析错误</p><h2 id="3-首页显示"><a href="#3-首页显示" class="headerlink" title="3.首页显示"></a>3.首页显示</h2><p>在利用 Hexo 框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容<br>如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简<br>这时，我们只需在文章中使用 <!--more--> 标志即可，表示只会显示标志前面的内容</p><h1 id="五、部署发布"><a href="#五、部署发布" class="headerlink" title="五、部署发布"></a>五、部署发布</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>建议：在使用 hexo g 部署之后，可以先使用 hexo s 运行本地站点，然后在浏览器输入地址 <a href="http://lacolhost:4000/" target="_blank" rel="noopener">http://lacolhost:4000/</a> 查看运行结果，检查无误后再使用 hexo d 发布</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;怎样在网站上书写我们的第一篇博客吧&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://smallpotatody.github.io/2019/03/09/hello-world/"/>
    <id>https://smallpotatody.github.io/2019/03/09/hello-world/</id>
    <published>2019-03-09T10:32:22.000Z</published>
    <updated>2019-04-09T13:43:48.161Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
