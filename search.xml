<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[计算机网络]]></title>
    <url>%2F2019%2F05%2F19%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[第一章1.1 计算机网络在信息时代中的作用 21世纪的一些重要特征就是数字化、网络化和信息化，它是一个以网络为核心的信息时代。 网络是指“三网”，即电信网络、有线电视网络和计算机网络。 计算机网络向用户提供最重要的功能： 连通性——计算机网络使上网用户之间都可以交换信息。 共享——资源共享。 1.2 因特网概述 网络(network)由若干结点(node)和连接这些结点的链路(link)组成。 结点——用于计算机网络中，表示计算机或路由器。 链路——连接的线路。 互联网是“网络的网络”(network of networks)。 连接在因特网上的计算机都称为主机(host)。 internet——互连网（互联网） Internet——当前全球最大的、开放的、由众多网络相互连接而成的特定计算机网络，使用TCP/IP协议族作为通信规则。前身是美国的阿帕网APPRANET n起源于美国的因特网现已发展成为世界上最大的国际性计算机互联网 因特网发展三个阶段 第一阶段——从单个网络ARPANET向互联网发展 第二阶段——逐步建成了三级结构的因特网 第三阶段——逐渐形成了多层次ISP结构的因特网 计算机网络、互联网、互连网 计算机网络：一些相互连接的计算机的集合。 互连网、互联网：一些相互连接的计算机网络的集合（网络的网络，互连网(互联网)由许多网络通过路由器互连而成）。 1.3 因特网的组成 边缘部分——由所有连接在因特网上的主机组成。这部分是用户直接使用的，用来进行通信（传送数据、音频或视频）和资源共享。 核心部分——由大量网络和连接这些网络的路由器组成。这部分是为边缘部分提供服务的（提供连通性和交换）。 两种通信方式 客户服务器方式（C/S 方式——Client/Server） 客户(client)和服务器(server)都是指通信中所涉及的两个应用进程。客户是服务的请求方，服务器是服务的提供方。 对等方式（P2P 方式——Peer to Peer） 因特网核心部分 在网络核心部分起特殊作用的是路由器(router)。 路由器是实现分组交换(packet switching)的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。 电路交换 从通信资源的分配角度来看，“交换”就是按照某种方式动态地分配传输线路的资源。 电路交换必定是面向连接的。 且利用率很低。 电路交换的三个阶段： 建立连接 通信 释放连接 分组交换（存储转发） 报文：要发送的整块数据 分组：先将报文划分成较短的、固定长度的数据段，每一个数据段前面添加上首部构成分组或包。 每一个分组的首部都含有地址等控制信息。分组交换网中的结点交换机根据收到的分组的首部中的地址信息，把分组转发到下一个结点交换机。用这样的存储转发方式，最后分组就能到达最终目的地。 因特网的核心部分是由许多网络和把它们互连起来的路由器组成，而主机处在因特网的边缘部分。在因特网核心部分的路由器之间一般都用高速链路相连接，而在网络边缘的主机接入到核心部分则通常以相对较低速率的链路相连接。主机的用途是为用户进行信息处理的，并且可以和其他主机通过网络交换信息。路由器的用途则是用来转发分组的，即进行分组交换的。 分组交换优点 高效 灵活 迅速 可靠 分组在各结点存储转发时需要排队，这就会造成一定的时延。 分组必须携带的首部（里面有必不可少的控制信息）也造成了一定的开销。无法确保通信时端到端所需的带宽，在通信量较大时可能造成网络拥塞。 1.4计算机网络的的定义与分类最简单定义：计算机网络是一些互相连接、自治的计算机的集合。 分类： 从网络的作用范围进行分类 广域网 WAN (Wide Area Network) 局域网 LAN (Local Area Network) 城域网 MAN (Metropolitan Area Network) 个人区域网 PAN (Personal Area Network) 从网络的使用者分类 公用网（public network） 专用网（private network） 1.5计算机网络的主要性能指标 速率 速率即数据率(data rate)或比特率(bit rate)是计算机网络中最重要的一个性能指标。速率的单位是b/s，或kb/s,Mb/s, Gb/s 等。 带宽 “带宽”(bandwidth)本来是指信号具有的频带宽度，单位是赫（或千赫、兆赫、吉赫等）。 现在“带宽”是数字信道所能传送的“最高数据率”的同义语，单位是“比特每秒”，或 b/s (bit/s)。 吞吐量 吞吐量/吞吐率(throughput)表示在单位时间内通过某个网络（或信道、接口）的数据量。 吞吐量更经常地用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络。 受网络的带宽或网络的额定速率的限制。 时延 对于高速网络链路，我们提高的仅仅是数据的发送速率而不是比特在链路上的传播速率。提高链路带宽减小了数据的发送时延. 丢包率 丢包率即分组丢失率，是指在一定的时间范围内，分组在传输过程中丢失的分组数量与总的分组数量的比率。 具体：接口丢包率、结点丢包率、链路丢包率、路径丢包率、网络丢包率等。 在现代计算机网络中网络拥塞是丢包的主要原因。因此，丢包率往往反映了网络的拥塞情况。 利用率 信道利用率指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零。 网络利用率则是全网络的信道利用率的加权平均值。 信道利用率并非越高越好。 若令 D0 表示网络空闲时的时延，D表示网络当前的时延，则在适当的假定条件下，可以用下面的简单公式表示D和 D0之间的关系： 1.6计算机网络体系结构网络协议(network protocol)，简称为协议，是为进行网络中的数据交换而建立的规则、标准或约定。 三要素：语法，即数据与控制信息的结构或格式。 语义，即各个控制信息的具体含义，包括需要发出何种控制信息，完成何种动作以及做出何种响应。 同步（或时序），即事件实现顺序和时间的详细说明，包括数据应该在何时发送出去以及数据应该以什么速率发送。 计算机网络的体系结构(architecture)是计算机网络的各层及其协议的集合。l体系结构是抽象的，而实现则是具体的，是真正在运行的计算机硬件和软件。 物理层: 如何在物理媒体上传送比特流 数据链路层: 相邻节点间分组(帧)的传输 PPP, 以太网 网络层: 如何将分组从源主机通过中间路由器传送到目的主机 IP, 选路协议 运输层: 提供不同主机上应用程序间的数据传输服务 TCP, UDP 应用层:如何通过应用进程间的交互来完成特定网络应用。 FTP, SMTP, STTP 实体(entity) 表示任何可发送或接收信息的硬件或软件进程。 协议是控制两个对等实体进行通信的规则的集合。 在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。 要实现本层协议，还需要使用下层所提供的服务。 本层的服务用户只能看见服务而无法看见下面的协议。 下面的协议对上面的服务用户是透明的。 协议是“水平的”，即协议是控制对等实体之间通信的规则。 服务是“垂直的”，即服务是由下层向上层通过层间接口提供的。 1.7计算机网络在我国发展1994年4月20日我国用64kbit/s专线正式连入因特网。 1.8两个重要的新兴网络技术云计算 基础设施即服务 平台即服务 软件即服务 物联网 对象识别 环境监控和对象跟踪 对象的自能控制 第二章2.1物理层的基本概念物理层协议的主要任务就是确定与传输媒体的接口的一些特性 机械特性 电器特性 功能特性 规程特性 2.2数据通信的基础知识数据通信系统： 源系统：源点、发送器 传输系统 目的系统：接收器、终点 通信的目的是传送消息。数据是信息的实体。信号是数据的电气或电磁表现。 编码：将数字数据转换成数字信号的过程。 调制：将数字数据转换成模拟信号的过程。 提高数据传输速率的途径 要使用更好的传输媒体，使用先进的编码和调制技术，但不管采用好的传输媒体和怎样先进的调制技术，数据传输速率总是受限的，不可能任意地提高，否则就会出现较多的差错。 传输方式 2.3物理层下面的传输媒体导引型传输媒体 双绞线 屏蔽双绞线 STP(Shielded Twisted Pair) 无屏蔽双绞线 UTP (Unshielded Twisted Pair) 同轴电缆 50 W 同轴电缆 75 W 同轴电缆 光纤 非导引型传输媒体 无线传输所使用的频段很广。 短波通信主要是靠电离层的反射，但短波信道的通信质量较差。 微波在空间主要是直线传播。 地面微波接力通信 卫星通信 2.4信道复用技术复用：通过一条物理线路同时传输多路用户的信号 频分复用：所有用户在同样的时间占用不同的带宽资源。 时分复用：所有用户在不同的时间占用同样的频带宽度 统计时分复用： 2.5数字传输系统将模拟电话信号转换为数字信号目前采用的都是脉冲编码调制PCM (Pulse Code Modulation)技术，将一路模拟电话信号转换为64 kbit/s的PCM数字脉冲信号。 为了充分利用高速传输线路的带宽，通常将多路PCM信号用TDM方法汇集成时分复用帧，按某种固定的复用结构进行长途传输。 两个互不兼容的PCM复用速率标准：即北美体制和欧洲体制 早期的数字传输系统存在许多缺点。主要由速率标准不统一和不是同步传输。 传统SDH/SONET传输网络由光传输系统和交换结点的电子设备组成。 全光网AON (All Optical Network) 用光网络结点代替原来交换结点的电子设备，组成以端到端光通道为基础的全光传输网，避免因光/电转换所带来的带宽瓶颈，而路由器等电信号处理设备在边缘网络连接用户终端设备。 2.6互连网接入技术接入：将端系统连接到边缘路由器。接入技术解决的就是最终用户接入本地ISP“最后一公里”的问题。通常，人们将端系统连接到ISP边缘路由器的物理链路及相关设备的集合称为接入网AN(accessnetwork)。 通过拨号调制解调器接入（非带宽接入） –允许最高56Kbps接入速率(通常会更低) –不能同时上网和打电话 –不提供持续连接 ADSL接入 上行和下行带宽做成不对称的。 上行指从用户到 ISP，而下行指从 ISP 到用户。 ADSL 在用户线（铜线）的两端各安装一个 ADSL 调制解调器。 我国目前采用的方案是离散多音调 DMT (Discrete Multi-Tone)调制技术。这里的“多音调”就是“多载波”或“多子信道”的意思。 光纤接入 以太网接入 无线接入 第三章3.1使用点对点信道的数据链路层信道类型： 点对点信道：这种信道使用一对一点对点通信方式。 广播信道：这种信道使用一对多的广播通信方式，因此过程比较复杂。广播信道上连接的主机很多，因此必须使用专用的共享信道协议来协调这些主机的数据发送。 链路(link)是一条无源的点到点的物理线路段，中间没有任何其他的交换结点。 数据链路(data link) 除了物理线路外，还必须有通信协议来控制这些数据的传输。若把实现这些协议的硬件和软件加到链路上，就构成了数据链路。 封装成帧 封装成帧(framing)就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧。确定帧的界限。首部和尾部的一个重要作用就是进行帧定界。 透明传输 字节填充(byte stuffing)或字符填充(character stuffing)——接收端的数据链路层在将数据送往网络层之前删除插入的转义字符。如果转义字符也出现数据当中，那么应在转义字符前面插入一个转义字符。当接收端收到连续的两个转义字符时，就删除其中前面的一个。 ** 为了保证数据传输的可靠性，在计算机网络传输数据时，必须采用各种差错检测措施。 在数据后面添加上的冗余码称为帧检验序列 FCS (Frame Check Sequence)。 循环冗余检验的原理 循环冗余检验 CRC 和帧检验序列 FCS并不等同。CRC 是一种常用的检错方法，而 FCS 是添加在数据后面的冗余码。FCS 可以用CRC 这种方法得出，但 CRC 并非用来获得 FCS 的唯一方法。 仅用循环冗余检验CRC差错检出技术只能做到无差错接受。 可靠传输 要做到“可靠传输”就必须用到确认和重传机制。 停止等待协议 使用上述的确认和重传机制，我们就可以在不可靠的传输网络上实现可靠的通信。这种可靠传输协议常称为自动重传请求ARQ(Automatic Repeat reQuest).ARQ 表明重传的请求是自动进行的。接收方不需要请求发送方重传某个出错的分组 。 在发送完一个帧后，必须暂时保留已发送的帧的副本。数据帧和确认帧都必须进行编号。只要超过了一段时间还没有收到确认，就认为已发送的帧出错或丢失了，因而重传已发送过的帧。这就叫做超时重传。超时计时器的重传时间应当比数据在分组传输的平均往返时间更长一些。 停止等待协议不适合发送时延小于往返时延的情况。优点是简单，缺点是信道利用率低。 流水线传输 发送方可连续发送多个分组，不必每发完一个分组就停顿下来等待对方的确认。由于信道上一直有数据不间断地传送，这种传输方式可获得很高的信道利用率。 3.2点对点协议PPP特点： 简单 封装成帧 透明性 多种网络层协议 多种类型链路 差错检测 检测连接状态 PPP协议组成 一个将IP数据包封装到串行链路的方法。 链路控制协议LCP 网络控制协议NCP PPP协议的帧格式 透明传输问题 当 PPP 用在同步传输链路时，协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。 当 PPP 用在异步传输时，就使用一种特殊的字符填充法。 零比特填充 在发送端，只要发现有 5 个连续 1，则立即填入一个 0。接收端对帧中的比特流进行扫描。每当发现5 个连续1时，就把这 5 个连续 1 后的一个 0 删除， 3.3使用广播信道的数据链路层由于用广播信道连接的计算机共享同一传输媒体，因此使用广播信道的局域网被称为共享式局域网。虽然交换式局域网在有线领域已完全取代了共享式局域网，但无线局域网仍然使用的是共享媒体技术。 媒体接入控制（MAC） 静态划分信道：频分多址、时分多址、码分多址 动态接入控制： 随机接入 受控接入 局域网 网络为一个单位所拥有，且地理范围和站点数目均有限。 局域网的数据链路层的两个子层： 逻辑链路控制 LLC (Logical Link Control)子层。（与传输媒体无关）。 媒体接入控制 MAC (Medium Access Control)子层。 3.4共享式以太网为了通信的简便以太网采取了两种重要的措施 采用较为灵活的无连接的工作方式，即不必先建立连接就可以直接发送数据。 以太网对发送的数据帧不进行编号，也不要求对方发回确认。 这样做的理由是局域网信道的质量很好，因信道质量产生差错的概率是很小的。 以太网提供的服务 以太网的服务是不可靠的交付，即尽最大努力的交付。当目的站收到有差错的数据帧时就丢弃此帧，其他什么也不做。差错的纠正由高层来决定。如果高层发现丢失了一些数据而进行重传，但以太网并不知道这是一个重传的帧，而是当作一个新的数据帧来发送。 载波监听多点接入/碰撞检测 CSMA/CD 最先发送数据帧的站，在发送数据帧后至多经过时间 2t （两倍的端到端往返时延）就可知道发送的数据帧是否遭受了碰撞。 以太网的端到端往返时延 2t 称为争用期，或碰撞窗口。 经过争用期这段时间还没有检测到碰撞，才能肯定这次发送不会发生碰撞。 使用 CSMA/CD 协议的以太网不能进行全双工通信而只能进行双向交替通信（半双工通信）。 每个站在发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。 当连接很多站点时，以太网的平均吞吐量要比以太网的最高数据率小很多. 以太网的MAC帧格式 3.5网络和以太网交换机用集线器扩展以太网 优点：使原来属于不同碰撞域的局域网上的计算机能够进行跨碰撞域的通信。 扩大了局域网覆盖的地理范围。 缺点：碰撞域增大了，但总的吞吐量并未提高。 如果不同的碰撞域使用不同的数据率，那么就不能用集线器将它们互连起来。 由于争用期的限制，并不能无限扩大地理覆盖范围 在数据链路层扩展以太网 使用网桥。网桥工作在数据链路层，它根据 MAC 帧的目的地址对收到的帧进行转发。网桥具有过滤帧的功能。当网桥收到一个帧时，并不是向所有的接口转发此帧，而是先检查此帧的目的MAC 地址，然后再确定将该帧转发到哪一个接口。 使用网桥优点 过滤通信量 扩大了物理范围 提高了可靠性 可互连不同物理层、不同MAC子层和不同速率的局域网。 使用网桥缺点 存储转发增加了时延。 在MAC 子层并没有流量控制功能。 具有不同 MAC 子层的网段桥接在一起时时延更大。 网桥只适合于用户数不太多(不超过几百个)和通信量不太大的局域网，否则有时还会因传播过多的广播信息而产生网络拥塞。这就是所谓的广播风暴。 集线器在转发帧时，不对传输媒体进行检测。 网桥在转发帧之前必须执行 CSMA/CD 算法。 若在发送过程中出现碰撞，就必须停止发送和进行退避。 透明网桥是一种即插即用设备。 网桥在转发表中登记以下三个信息 在网桥的转发表中写入的信息除了地址和接口外，还有帧进入该网桥的时间。 虚拟局域网 虚拟局域网其实只是局域网给用户提供的一种服务，而不是一种新型局域网！ 简化网络管理。 控制广播风暴。 增强网络的安全性。 3.6以太网的演进速率达到或超过 100 Mb/s 的以太网称为高速以太网。 3.7无线局域网有固定基础设施的无线局域网 一个移动站若要加入到一个基本服务集 BSS，就必须先选择一个接入点 AP，并与此接入点建立关联。 移动站与AP建立关联的方法 被动扫描，即移动站等待接收接入站周期性发出的信标帧(beacon frame)。 主动扫描，即移动站主动发出探测请求帧(probe request frame)，然后等待从 AP 发回的探测响应帧(probe response frame)。 使用CSMA/CA协议 无线局域网不能使用CSMA/CD，而只能使用改进的CSMA协议。改进办法就是把CSMA增加一个碰撞避免功能。 无线局域网不能简单地搬用 CSMA/CD 协议。这里主要有两个原因。 对于无线信道，接收信号强度往往会远远小于发送信号强度。如要在无线局域网的适配器上实现碰撞检测，对硬件的要求非常高。。 即使我们能够实现碰撞检测的功能，并且当我们在发送数据时检测到信道是空闲的，在接收端仍然有可能发生碰撞（隐蔽站问题）。 第四章4.1网络层概述分组转发和路由选择（转发表） 电信网的成功经验让网络负责可靠交付 虚电路服务 面向连接，建立虚电路，使用可靠传输协议(虚电路是逻辑上的连接) 因特网采用设计思路 网络层向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务。 网络在发送分组时不需要先建立连接。每一个分组（即 IP 数据报）独立发送，与其前后的分组无关（不进行编号）。 网络层不提供服务质量的承诺。即所传送的分组可能出错、丢失、重复和失序（不按序到达终点），当然也不保证分组传送的时限。 数据报服务 虚电路转发表 每台中间路由器在转发分组时必须用一个新的VC号替代原来的VC号。 4.2网际协议IP网际层协议IP 地址解析协议ARP 逆地址解析协议RARP 网际控制报文协议ICMP 网际组管理协议IGMP 中间设备 物理层：转发器 数据链路层：网桥或桥接器 网络层：路由器 网络层以上：网关 虚拟互连网 所谓虚拟互连网络也就是逻辑互连网络，它的意思就是互连起来的各种物理网络的异构性本来是客观存在的，但是我们利用IP 协议就可以使这些性能各异的网络从用户看起来好像是一个统一的网络。使用虚拟互连网络的好处是：当互联网上的主机进行通信时，就好像在一个网络上通信一样，而看不见互连的各具体的网络异构细节。 IP地址及编址方式 点分十进制记法：32位二进制代码，每8位插入一个空格，转换成十进制，提高可读性。 分类编址 IP地址 ::= {&lt;网络号&gt;,&lt;主机号&gt;} ::=代表“定义为” IP地址的使用范围 | 网络类别 | 最大网络数 | 第一个可用的网络号 | 最后一个可用的网络号 | 每个网络中最大的主机数 || ——– | ——————- | —————— | ——————– | ———————- || A | 126（2^7-2） | 1 | 126 | 16777214 || B | 16383(2^14-1) | 128.1 | 191.255 | 65534 || C | 2,097,151 (221 - 1) | 192.0.1 | 223.255.255 | 254 | 划分子网 三级的IP地址 IP地址 ::= {&lt;网络号&gt;, &lt;子网号&gt;, &lt;主机号&gt;} 无分类编址CIDR IP地址 ::= {&lt;网络前缀&gt;, &lt;主机号&gt;} 在分类编址中，给定一个IP地址，就确定了它的网络号和主机号。但在无分类编址中，由于网络前缀是不定长，IP地址本身并不能确定其网络前缀和主机号。 使用子网掩码(subnet mask)可以找出 IP 地址中的网络部分(网络前缀)。 CIDR 还使用“斜线记法” ，它又称为CIDR记法，即在 IP 地址面加上一个斜线“/”，然后写上网络前缀所占的位数。 地址解析协议ARP IP地址——&gt;ARP——&gt;物理地址 物理地址——&gt;RARP——&gt;IP地址 IP数据报由首部和数据两部分组成，首部前一部分是固定长度，共20字节，是所有IP数据报必须具有的。 IP数据报分片 4.3网际控制报文协议ICMPICMP 不是高层协议，而是 IP 层的协议。 ICMP 报文作为 IP 层数据报的数据，加上数据报的首部，组成 IP 数据报发送出去。 前四个字节是统一的三个字段：类型、代码、检验和 ICMP报文的种类 差错报告报文 ICMP询问报文 PING PING用来测试两个主机之间的连通性 PING 使用了 ICMP 回送请求与回送回答报文。 PING 是应用层直接使用网络层 ICMP 的例子，它没有通过运输层的 TCP 或UDP。 4.4因特网的路由选择协议静态路由选择策略——即非自适应路由选择，其特点是简单和开销较小，但不能及时适应网络状态的变化。 动态路由选择策略——即自适应路由选择，其特点是能较好地适应网络状态的变化，但实现起来较为复杂，开销也比较大。 分层次的路由选择协议 自治系统AS 自治系统 AS 的定义：在单一的技术管理下的一组路由器，而这些路由器使用一种AS 内部的路由选择协议和共同的度量以确定分组在该AS 内的路由，同时还使用一种 AS 之间的路由选择协议用以确定分组在AS之间的路由。 因特网两大路由选择协议 内部网关协议IGP RIP三个要点： ​ 仅和相邻路由器交换信息。 ​ 交换的信息是当前本路由器所知道的全部信息，即自己的路由表。 ​ 按固定的时间间隔交换路由信息，例如，每隔 30 秒。 OSPF三个要点： ​ 向本自治系统中所有路由器发送信息，这里使用的方法是洪泛法。 ​ 发送的信息就是与本路由器相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。“链路状态”就是说明本路由器都和哪些路由器相邻，以及该链路的“度量”(metric)。 ​ 只有当链路状态发生变化时，路由器才用洪泛法向所有路由器发送此信息。 外部网关协议EGP 划分区域 划分区域的好处就是将利用洪泛法交换链路状态信息的范围局限于每一个区域而不是整个的自治系统，这就减少了整个网络上的通信量。 4.5路由器的工作原理转发和路由选择的区别 “转发”(forwarding)就是路由器根据转发表将用户的 IP 数据报从合适的端口转发出去。 “路由选择”(routing)则是按照分布式算法，根据从各相邻路由器得到的关于网络拓扑的变化情况，动态地改变所选择的路由。 路由表是根据路由选择算法得出的。而转发表是从路由表得出的。 在讨论路由选择的原理时，往往不去区分转发表和路由表的区别。 由输入端口、变换结构、输出端口 交换机与路由器的比较 交换机的优点是即插即用，并具有相对高的分组过滤和转发速度。缺点是：大型交换机网络要求交换机维护大的转发表，主机中维护大的ARP表，并可能产生广播风暴，逻辑拓扑被限制为树。 路由器的优点是能提供更加智能的路由选择，并能隔离广播域。缺点是：路由器不是即插即用的，对每个分组处理时间通常比交换机更长。 4.6VPN与NAT用隧道技术实现虚拟专用网 4.7IP多播IP多播的一些特点 ​ 多播使用组地址—— IP 使用 D 类地址支持多播。多播地址只能用于目的地址，而不能用于源地址。 ​ 永久组地址——由因特网号码指派管理局 IANA 负责指派。 ​ 动态的组成员 利用局域网的硬件多播 IP多播需要两种协议 网际组管理协议IGMP ​ IGMP 并非在因特网范围内对所有多播组成员进行管理的协议。 ​ IGMP 不知道 IP 多播组包含的成员数，也不知道这些成员都分布在哪些网络上。 ​ IGMP 协议是让连接在本地局域网上的多播路由器知道本局域网上是否有主机（严格讲，是主机上的某个进程）参加或退出了某个多播组。 多播路由器选择协议 ​ 多播转发必须动态地适应多播组成员的变化（这时网络拓扑并未发生变化）。请注意，单播路由选择通常是在网络拓扑发生变化时才需要更新路由。 ​ 多播路由器在转发多播数据报时，不能仅仅根据多播数据报中的目的地址，而是还要考虑这个多播数据报从什么地方来和要到什么地方去。 ​ 多播数据报可以由没有加入多播组的主机发出，也可以通过没有组成员接入的网络。 4.9下一代的网际协议IPV6IPV6引进的主要变化 IPv6 仍支持无连接的传送所引进的主要变化如下 更大的地址空间。IPv6 将地址从 IPv4 的 32 位 增大到了 128 位。 扩展的地址层次结构。 灵活的首部格式。 改进的选项。 允许协议继续扩充。 支持即插即用（即自动配置） 支持资源的预分配。 IPv6 数据报的目的地址可以是以下三种基本类型地址之一： 1.单播(unicast) 单播就是传统的点对点通信。 2.多播(multicast) 多播是一点对多点的通信。 3.任播(anycast) 这是 IPv6 增加的一种类型。任播的目的站是一组计算机，但数据报在交付时只交付其中的一个，通常是距离最近的一个。 从IPV4到IPV6的过渡 双协议栈 隧道技术 第五章5.1运输层协议概述从通信和信息处理的角度看，运输层向它上面的应用层提供通信服务，它属于面向通信部分的最高层，同时也是用户功能中的最低层。 运输层协议和网络层协议的主要区别 IP协议的作用范围是提供主机之间的逻辑通信 TCP（传输控制协议）和UDP（用户数据报协议）协议的作用范围是提供进程之间的逻辑通信 运输层的主要功能 运输层为应用进程之间提供端到端的逻辑通信（但网络层是为主机之间提供逻辑通信）。 运输层还要对收到的报文进行差错检测。 可靠数据传输 流量控制 拥塞控制 5.2用户数据报协议UDPUDP 只在 IP 的数据报服务之上增加了很少一点的功能，即端口的功能和差错检测的功能。 UDP 在某些方面有其特殊的优点 发送数据之前不需要建立连接 UDP 的主机不需要维持复杂的连接状态表。 UDP 用户数据报只有 8 个字节的首部开销。 网络出现的拥塞不会使源主机的发送速率降低。这对某些实时应用是很重要的。 UDP的特点 UDP是无连接的。 UDP使用尽最大努力交付，即不保证可靠交付，同时也不使用拥塞控制，因此主机不需要维持具有许多参数的、复杂的连接状态表。 由于 UDP 没有拥塞控制，因此网络出现的拥塞不会使源主机的发送速率降低。 UDP是面向报文的。 UDP支持一对一、一对多、多对一和多对多的交互通信。 5.3传输控制协议TCPTCP的主要特点： ​ TCP 是面向连接的运输层协议。 ​ 每一条 TCP 连接只能有两个端点(endpoint)，每一条 TCP 连接只能是点对点的（一对一）。 ​ TCP 提供可靠交付的服务。 ​ TCP 提供全双工通信。 ​ 面向字节流。 发送缓存和接收缓存 TCP 连接是一条虚连接而不是一条真正的物理连接。 一对一通信 TCP 把连接作为最基本的抽象。 每一条 TCP 连接唯一地被通信两端的两个端点所确定。即： TCP 连接 ::= {(IP1: port1), (IP2: port2)} UDP与TCP复用的区别 TCP报文段结构 TCP 报文段分为首部和数据两部分。 TCP 的全部功能都体现在它首部中各字段的作用。 TCP 报文段首部的前 20个 字节是固定的，后面有 4N 字节是根据需要而增加的选项(N 必须是整数)。因此 TCP 首部的最小长度是 20 字节。 TCP的可靠传输 TCP在IP的不可靠的尽最大努力服务的基础上实现了一种可靠数据传输服务，保证数据无差错、无丢失、按序和无重复的交付。 由于TCP下面的传输数据的互联网的结构非常复杂，因此不能采用最简单的停止等待协议来实现可靠传输。 以字节为单位的滑动窗口 流量控制 •流量控制(flow control)就是让发送方的发送速率不要太快，既要让接收方来得及接收。 •利用滑动窗口机制可以很方便地在 TCP 连接上实现流量控制。 超时重传时间的选择 指数加权 karn算法（不采用重传） 新的 RTTS = (1 - a) * (旧的 RTTS) + a * (新的 RTT 样本) RTO = RTTS + 4 *RTTD 新的 RTTD = (1 - b) (旧的RTTD）+b|RTTS - 新的 RTT样本| 快速重传 5.4拥塞控制如果网络中的负载(load)，即发送到网络中的分组数量，超过了网络的容量，即网络中能处理的分组数量，那么在网络中就会发生拥塞(congestion)。 所谓拥塞控制(congestion control)就是防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。 开环控制和闭环控制 开环控制方法就是在设计网络时事先将有关发生拥塞的因素考虑周到，力求网络在工作时不产生拥塞。 闭环控制是基于反馈环路的概念。]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML-CSS基础]]></title>
    <url>%2F2019%2F05%2F15%2FHTML-CSS%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[HTML软件架构 C/S：C(客户端，用户通过客户端来使用软件)，S表示服务器。一般软件都是C/S架构。 软件使用前必须安装 软件更新时，服务器与客户端同时更新 不能跨平台使用 C/S架构的软件客户端和服务器通信采用的是自有协议，相对来说比较安全 B/S：B(浏览器)，B/S架构软件通过使用浏览器访问网页的形式，来使用软件。 软件不需要安装，直接使用浏览器访问指定网址即可； 软件更新时，客户端不需要更新 软件可以跨平台使用 客户端和服务器之间通信采用的是通用HTTP协议，相对来说不安全 软件开发流程 网页设计师根据需求设计网页（PS） 前端工程师将设计做成静态网页（HTML） 后台工程师将静态网页修改为动态网页（JSP） 网页组成 结构（HTML用于描述页面的结构） 表现（CSS用于控制页面中元素的样式） 行为（JavaScript用于响应用户操作） 乱码 编码：依据一定的规则，将字符转换为二进制编码的过程； 解码：一句一定的规则，将二进制编码转换为字符的过程； 特殊符号称为实体（转义字符），转换用&amp;实体名字； &lt; &amp;lt; &amp;copy; 图片格式JPEG（JPG） JPEG图片支持的颜色比较多，图片可以压缩，但是不支持透明 一般使用JPEG来保存照片等颜色丰富的图片 GIF GIF支持的颜色少，只支持简单的透明，支持动态图 图片颜色单一或者是动态图时可以使用GIF PNG PNG支持颜色多，并且支持复杂的透明 可以用来显示颜色复杂的透明的图片 图片使用规则： 效果不一致，使用效果好的 效果一致，使用容量小的 meta标记作用 可以用来设置网页关键字 &lt;meta name=&quot;keywords&quot; content=&quot;HTML5,JavaScript,前端，后端，Python&quot; /&gt; 用来指定网页的描述 搜索引擎在检索页面时，会同时检索页面中的关键词和描述，但是这两个值不会影响页面在搜索引擎中的排名 &lt;meta name=&quot;description&quot; content=&quot;子在川上曰：逝者如斯夫！&quot; 可以用作请求重定向 &lt;meta http-equiv=&quot;refresh&quot; content=&quot;4(秒数);url=http:www.baidu.com(目标路径)&quot; /&gt; src属性配置src属性配置的是图片的路径，目前我们所要使用的路径全是相对路径 相对路径：相对路径指相对于当前资源所在目录的位置 语法规范 HTML中不区分大小写 HTML中注释不能嵌套 HTML标签必须结构完整，要么成对出现，要么自结束标签 HTML标签可以嵌套，但是不能交叉嵌套 HTML标签中的属性必须有值，且值必须加引号 浏览器尽最大的努力正确的解析页面，你所有的不符合语法规范的内容，浏览器都会为你自动修正，但是有些情况会修正错误 内联框架使用内联框架可以引入一个外部的页面，使用iframe来创建一个内联框架，属性： src:指向一个外部页面的路径，可以使用相对路径 width: height: name:可以为内联框架指定一个name属性 在现实开发中不推荐使用内联框架，因为内联框架的内容不会被搜索引擎所检索 &lt;iframe src=&quot;demo2.html&quot; name=&quot;tom&quot;&gt;&lt;/iframe&gt; a标签&lt;a href=&quot;#&quot;&gt;&lt;/a&gt; 如果链接地址设为#，则点击超链接以后，会自动跳转到当前页面顶部。id是html中属性作为标签的唯一标识，id属性在同一页面中只能有一个不能重复。 1.&lt;a id=&quot;1&quot; href=&quot;#&quot;&gt;回到顶部&lt;/a&gt; 2.&lt;a href=&quot;#1&quot;&gt;回到底部&lt;/a&gt; 通过2可以快速到1的地方 还可以发送电子邮件的超链接，点击超链接以后可以自动打开计算机中默认的邮件客服端href=”mailto:123@nik.com“；当点击这个超链接时，会默认打开计算机的默认电子邮件客服端，并且将收件人设置为mailto后的邮件地址； CSS层叠样式表（Cascading Style Sheets）,css可以用来为网页创建样式表，通过样式表可以对网页进行装饰。 可以将CSS样式编写到元素的style属性中，将样式直接编写到style属性中，这种样式称为内联样式，内联样式只对当前的元素中的内容起作用，内联样式不方便复用，内联样式属于结构与表现耦合，不方便后期维护，不推荐使用 CSS样式 内联样式：&lt;p style=&quot;color:red;font-size:20px;&quot;&gt; 内部样式： type12345678......&lt;style type=&quot;text/css&quot;&gt;p&#123;​ color:red;​ font-size:40px;&#125;&lt;/style&gt;...... 外部样式表：将样式表写到外部的CSS文件中，然后通过link标签来将外部的CSS文件引入到当前页面中，这样外部文件中的CSS样式表将会应用到当前页面中。将CSS样式统一编写到外部的样式表中，完全使结构和表现分离，可以是样式表可以在不同的页面使用，最大限度的使样式可以进行复用，将样式表统一写在样式表中，然后通过link标签引入，可以利用浏览器的缓存加快用户访问的速度提高用户体验，所以在开发中我们推荐使用的方式就是外部的CSS文件； 1&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css(style文件)&quot; /&gt; CSS注释/**/作用和HTML注释类似，只不过它必须编写在style标签中，或者是css文件中 CSS的语法 选择快 通过选择器可以选中页面中指定的元素，并且将声明块中的样式应用到选择其对应的元素上 声明块 声明块紧跟在选择器的后边，使用一对{}括起来，声明块中实际上就是一组一组的名值对结构，这一组一组的名值对我们称为声明，在一个声明块中可以写多个声明，多个声明之间使用;隔开，声明的样式名和样式值之间使用:来连接。 IDEnodep++ sublime HBuilder（免费、国产） webstorm（收费） 块元素和内联元素 div就是一个块元素，块元素就是会独占一行的元素，无论有多少内容，他都会独占一行。 div标签没有任何语义，就是纯粹的块元素，并且不会为它里边的元素设置任何的默认样式，div元素主要用来对页面进行布局的。 p hn span是一个内联元素（行内元素），所谓的行内元素，是指只占自身大小的元素，不会占用一行常见的内联元素 span没有任何语义，span标签专门用来选中文字，然后为文字来设置样式 a img iframe span 块元素主要用来做页面的布局，内联元素主要用来选中文本设置样式，一般情况下只使用块元素去包含内联元素，而不会使用内联元素去包含一个块元素。a元素可以包含任意元素，除了它本身。p元素不可以包含任何块元素。 元素选择器 作用：通过元素选择器可以选择页面中的所有指定元素 语法：标签名{} id选择器 通过元素的id属性值选中唯一的一个元素 语法：#id属性值{} 类选择器 通过元素的class属性值选中一组元素 语法：.class属性值{} 选择分组（并集选择器） 通过选择器分组可以同时选中多个选择器对应的元素 语法：选择器1，选择器2，选择器N{} 通配选择器 他可以用来选中页面的所有元素 语法：*{} 复合选择器（交集选择器） 可以选中同时满足多个选择器的元素 语法：选择器1选择器2选择器N{} 元素关系 父元素：直接包含子元素的元素 子元素：直接被父元素包含的元素 祖先元素：直接或间接包含后代元素的元素，父元素也是祖先元素 后代元素：直接或间接被祖先元素包含的元素，子元素也是后代元素 兄弟元素：拥有相同父元素的元素叫做兄弟元素 后代元素选择器 作用：选中指定元素的指定后代元素 语法：祖先元素 后代元素{} 子元素选择器 作用：选中指定父元素的指定元素 语法：父元素 &gt; 子元素 伪类伪类专门用来表示元素的一种特殊的状态，当我们需要为处在这些特殊状态的元素设置样式时，就可以使用伪类 a:link{color:red;}表示正常链接 a:visited{color:blue;}表示访问过的链接 a:hover{color:yellow;}表示鼠标滑过的链接 a:active{color:green;}表示的是超链接被点击的状态 浏览器是通过历史记录来判断一个链接是否访问过，由于涉及到用户的隐私问题，所以使用visited味蕾只能设置字体的颜色 :hover和:active也可以对其他元素设置 IE6中不支持对超链接外的元素设置:hover和:active -:focus{}表示获取焦点 -:before{}表示指定元素前 -:after{}表示指定元素后 -::selection{}表示选中的元素 -:first-letter{}表示首字母 -:first-line{}表示首行 属性选择器title属性，这个属性可以给任何标签指定，当鼠标移入到元素上时，元素中的title属性的值将会作为提示文字显示 作用：可以根据元素中的属性或属性值来选取指定元素 语法： [属性名]选取含有指定属性的元素 [属性名=”属性值”]选择含有指定属性值的元素 [属性名^=”属性值”]选取属性值以指定内容开头的元素 [属性名$=”属性值”]选取属性值以指定内容结尾的元素 [属性名*=”属性值”]选取属性值以包含指定内容元素 例：p[title]{background-color:red;} ​ p[title=&quot;属性值&quot;]{color:red;} ​ p[title^=&quot;属性值&quot;]{color:red;} ​ p[title$=&quot;属性值&quot;]{color:red;} 子元素的伪类p:first-child{background-color:red}可以选中第一个元素 p:last-child{background-color:red}可以选中最后一个元素 p:nth-child（3）{background-color:red}可以选中任意位置的元素，3表示是第三个元素，even表示偶数位置的元素，odd表示是奇数位置的元素。 child是在所有的子元素中排列，而type是在当前类型的子元素中排列。 p:first-of-type{background-color:red;}表示第一个p元素背景设置为热点。 p:last-of-type{background-color:red;}表示最后一个p元素背景设置为热点。 p:nth-of-type（even）{background-color:red;}表示任意位置的p元素。 兄弟选择器– 查找后边一个兄弟元素• 兄弟元素 + 兄弟元素{} – 查找后边所有的兄弟元素• 兄弟元素 ~ 兄弟元素{} 否定伪类 作用：可以从已选中的元素中剔出某些元素 语法：p:not(.hello（选择器）){background-color：red；} 样式继承• 就像父亲的财产会遗传给儿子一样，在 CSS 中祖先元素的样式 同样也会被子元素继承。• 继承是指应用在一个标签上的那些 CSS 样式会同时被应用到其 内嵌标签上。• 比如为父元素设置了字体颜色，子也会应用上相同的。 比如为父元素设置了字体颜色，子也会应用上相同的。 比如为父元素设置了字体颜色，子也会应用上相同的。• 当然并不是所有的样式都会被继承，这一点我们讲到具体时，再去讨论。 权重（优先级）当使用不同的选择器，选中同一个元素时并且设置相同的样式时，这样样式之间产生冲突，最终到底采用哪个选择器定义的样式，由选择器的优先级（权重）决定，优先级高的优先运行 优先级的规则 内联样式：优先级1000 id选择器：优先级100 类和伪类：优先级10 元素选择器：优先级1 通配*：优先级0 继承的样式没有优先级 当选择器中包含多种选择器时，需要将多种选择器的优先级相加然后再比较，但是选择器优先级计算不会超过他的最大数量级，如果选择器的优先级一样，则使用靠后的样式。 并集选择器的优先级是单独计算，可以在样式的最后添加一个!important,则此时该样式将会获得一个最高的优先级，将会优先于所有的样式显示甚至超过内联样式，但是在开发中尽量避免使用!important 伪类的顺序l v h a 文本标签&lt;em&gt;和&lt;strong&gt;这两个标签都表示一个强调的内容，&lt;em&gt;主要表示语气上的强调，&lt;em&gt;在浏览器中默认使用斜体显示 &lt;strong&gt;表示强调的内容，比&lt;em&gt;更强烈，默认使用粗体显示 &lt;i&gt;标签中的内容会以斜体显示,&lt;b&gt;标签中的内容会以粗体显示 &lt;small&gt;&lt;/small&gt;表示比父元素小的字号。&lt;cite&gt;&lt;/cite&gt;标签可以指明对其内容的应用或参考。 &lt;q&gt;&lt;/q&gt;表示加引号，&lt;blockquote&gt;&lt;/blockquote&gt;表示 &lt;sub&gt;&lt;/sub&gt;和&lt;sup&gt;&lt;/sup&gt; &lt;ins&gt;&lt;/ins&gt; 表示插入的内容，显时通常会加上下 划线。&lt;del&gt;&lt;/del&gt;表示删 除的内容，显时通常会加上除线 &lt;pre&gt;&lt;/pre&gt;表示预格式，&lt;code&gt;&lt;/code&gt;表示代码，一般结合使用pre和code来表示一段代码 列表 无序列表 disc默认值，实心的圆点 square实心的方块 circle空心的园 有序列表 1 默认值 a i 定义列表 &lt;dl&gt; &lt;dt&gt;&lt;/dt&gt; &lt;dd&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;都是块元素，列表可以嵌套 长度单位 像素px：是我们在网页中使用的最多一个单位，一个像素就相当于我们屏幕中的一个小店，我们的屏幕实际上就是由这些像素点构成的，但是这些像素点是不能直接看见的。不同显示器一个像素的大小也不相同，显示效果越好越清晰，像素越小，反之像素越大。 百分比%：也可以将单位设置成一个百分比的形式，这样浏览器将会根据其父元素的样式来计算该值。好处是当父元素发生变化时，子元素也会按照比例发生改变，我们创建一个自适应的页面时，经常使用百分比作为单位。 em：em和百分比相似，它是相对于当前元素的字体大小来计算的，1em = 1font-size。使用em时，当字体发生变化时，em也随之变化，当设置字体相关的样式时，经常会使用em。 颜色rgb(255,255,255) rgb(100%,100%100%) #ffffff 字体的样式设置字体的颜色，使用color来设置文字的颜色color:red; 设置字体的大小，浏览器中一般默认的文字大小都是16px，font-size设置的并不是文字本身的大小，在页面中每个文字都是处在一个看不见的框中，我们设置的font-size实际上是设置格的高度，并不是字体的大小，一般情况下文字都要比这个格要小一些，也有时会比格大。根据字体的不同，显示效果也不同。 通过font-family可以指定文字的字体，当采用某种字体时，如果浏览器支持则使用该字体，如果字体不支持，则使用默认字体，该样式可以同时指定多个字体，多个字体之间使用,分开，当采用多个字体时，浏览器会优先使用前边的字体，如果前边没有，再尝试下一个。 浏览器使用的字体默认是计算机中的字体，如果计算机中有，则使用，如果没有就不用。在开发中，如果字体太奇怪或用的太少了，尽量就不要使用。 颜色单位 颜色的单词 RGB(0~255,0~255,0~255) RGB(1~100%,1~100%,1~100%) 字体分类 erif（衬线字体） sans-serif（非衬线字体） monospace （等宽字体） cursive （草书字体） fantasy （虚幻字体） 可以将这些字体设置为这些大的分类，当设置为大的分类以后，浏览器会自动选择指定的字体并应用样式。一般将字体的大分类，指定为font-family中的最后一个字体。 font-style设置字体斜体 font-weight设置字体的粗细 font-variant用来设置小型大写字母，有normal和small-caps文本以小型大写字母显示。 在css中还为我们提供了一个样式叫font，使用该样式可以同时设置字体相关的所有样式，可以将字体的样式的值，统一写在font样式中，不同的值之间使用空格隔开 使用font设置字体样式时，斜体 加粗 小大字母没有顺序要求，甚至可写可不写，如果不写则使用默认值，但是要求文字的大小和字体必须写，而且字体必须是最后一个样式，大小必须是倒数第二个样式。 font可以一次性同时设置多个字体的样式。 语法：font:加粗 斜体 小型大写 大小/行高 字体这里前边几个加粗、斜体和小型大写的顺序无所谓，也可以不写，但是大小和字体必须写且必须写到后两个。 行间距在CSS并没有为我们提供一个直接设置行间距的方式，我们只能通过设置行高来间接设置行间距，行高越大行间距越大。使用line-height来设置行高，网页中的文字实际上也是写在一个看不见的线中，而文字默认会在行高中垂直居中显示。 行间距 = 行高 - 字体 通过设置line-height可以间接的设置行高，可接受的值：直接接受一个大小；或指定一个百分数，则会相对于字体去计算行高；可以直接传一个数值，则行高会设置字体大小的相应倍数。 对于单行文本来说，可以将行高设置为和父元素的高度一致，这样可以是单行文本在父元素中垂直居中。 font:加粗 斜体 小型大写 大小/行高 字体，行高是可选的，如果不指定则会使用默认值。 大写化text-transform样式用于将元素中的字母全都变成大小。 大写：text-transform:uppercase 小写：text-tansform:lowercase 首字母大写：text-transform:capitalize 正常：text-transform:none 文本的修饰 text-decoration属性，用来给文本添加各种修饰。通过它可以为文本的上方、下方或者中间添加线条。可选值： underline overline line-through none 字母间距和单词间距 letter-spacing用来设置字符之间的间距 word-spacing用来设置单词之间的间距 对齐文本text-align用于设置文本的对齐方式 可选值： left：左对齐 right：右对齐 justify：两边对齐 center：居中对齐 首行缩进text-indent用来设置首行缩进 该样式需要指定一个长度，并且只对第一行生效。 盒子模型CSS处理网页时，它认为每个元素都包含在一个不可见的盒子里。为什么要想象成盒子呢？因为如果把所有的元素都想象成盒子，那么我们对网页的布局就相当于是摆放盒子。 一个盒子会分成几个部分 内容区（content） 内边距（padding） 边框（border） 外边距（margin） 使用width来设置盒子内容区的宽度，使用height来设置盒子内容区的高度 边框设置 border-width 表示边框宽度 border-color 表示边框颜色 border-style 表示边框样式 边框可以设置多种样式：– none（没有边框）– dotted（点线）– dashed（虚线）– solid（实线）– double（双线）– groove（槽线）– ridge（脊线）– inset（凹边）– outset（凸边） 当属性值只有一个时，则代表上、下、左、右一样，两个时代表上下、左右，当只有三个时，则代表上、左右、下，有四个时代表上、右、下、左。 例如：border-width:20px 30px 40px 10px; 还可以使用border-xxx-width，xxx可以有top、right、bottom、left表示上、右、下、左各边的宽度。 三者缺一不可，但大部分浏览器中，边框的宽度和颜色都是有默认值，而边框的样式默认值都是none，所有无法显示，必须要设置border-style border:red solid 10px，三个属性值顺序不限，但border一指定就同时指定四个边，不能分别指定。但可以用border-xxx来表示某一边。 内边距指的就是元素内容区与边框以内的空间，默认情况下width和height不包含padding的大小。 内边距会影响盒子的可见框的大小，元素的背景会延伸到内边距，盒子的大小由内容区、内边距和边框共同决定 盒子可见框宽度 = border-left-width + padding-left + width +padding-right + border-right-width 外边距外边距指的是当前盒子与其它盒子之间的距离，不会影响可见框的大小，而会影响到盒子的位置。 盒子有四个方向的外边距 margin-top margin-right margin-bottom margin-left 由于页面中的元素都是靠左靠上摆放的，所以注意当我们设置上和左外边距时，会导致盒子自身的位置发生改变。如果是设置右和下外边距会改变其它盒子的位置。如果外边距设置的是负值，则元素会向反方向移动。 margin还可以设置为auto，auto一般只设置给水平方向的margin，如果指定，左外边距或右外边距的margin为auto则会将外边距设置为最大值，垂直方向外边距如果设置为auto，则外边距默认就是0。 如果将left和right同时设置为auto，则会居中。 垂直外边距的重叠在网页中相邻的垂直方向的外边距会发生外边距重叠，所谓外边距重叠是指兄弟元素之间相邻外边距会取最大值而不是取和。 可以在相邻两个元素之间输入一个数 或者设置一个外边距和内边距 浏览器默认样式浏览器为了在页面中没有样式时，也可以有一个比较好的效果，所以为很多的元素设置一些默认的margin和padding，而它的这些默认样式，正常情况下我们是不需要使用的。所以我们往往在编写样式之前需要将浏览器中的默认的margin和padding统统的去掉。 清楚浏览器默认样式： 1234*&#123; padding:0; margin:0;&#125; 内联元素的盒模型内联元素不能设置width和height，但可以设置水平方向的内边距，也可以设置垂直方向内边距，但是不会影响页面的布局。内联元素可以设置边框，但是垂直的边框不会影响到页面的布局，会影响水平方向的页面布局。 内联元素支持水平方向的外边距，水平方向的相邻外边距不会重叠，而是求和。内联元素不支持垂直方向外边距。 display将一个内联元素变成块元素，通过display样式可以修改元素类型 inline：可以将一个元素作为内联元素显示 block：可以将一个元素设置块元素显示 inline-block：将一个元素转换为行内块元素，可以使一个元素既有行内元素的特点又有块元素的特点，既可设置行高，又不会独占一行。 none：使用该方式隐藏元素，不会在页面中显示，并且不再占据页面的位置。 visibility可以用来设置元素的隐藏和显示状态。visible默认值，元素默认会在页面中显示。hidden元素会隐藏不显示，但它的位置会依然保持。 overflow子元素默认是存在于父元素的内容区中，理论上讲子元素的大小超过了父元素的最大可以等于父元素的内容区，则超过的大小会在父元素意外的位置显示，超过父元素的内容，我们称为溢出内容，在父元素外边显示，通过overflow可以设置父元素如何处理溢出内容 可选值： – scroll ：添加滚动条,不论内容是否溢出，都会添加水平和垂直方向的滚动条。– auto ：根据需要添加滚动条– hidden ：隐藏超出盒子的内容 – visible visible visible：默认值 文档流文档流处在网页的最底层，它表示的是一个页面中位置，我们创建的元素默认都处在文档流中。 元素在文档流中的特点 块元素在文档流中会独占一行，块元素会自上向下排列。块元素在文档流中默认宽度是父元素的100%。块元素在文档流中的高度默认被内容撑开。 内联元素在文档流中只有自身的大小，会默认从左向右排列，如果在一行中不足以容纳所有的内联元素，则会到下一行，继续自左向右。内联元素的宽度和高度默认都被内容撑开。 当元素的宽度的值为auto时，此时指定内边距不会影响可见框的大小，而是会自动修改宽度，以适应内边距。 浮动块元素在文档流中默认垂直排列，所以这个三个div自上至下依次排开，如果希望块元素在页面中水平排列，可以是使块元素脱离文档流。使用float来使元素浮动，从而脱离文档流。 可选值： – none：不浮动– left：向左浮动– right ：向右浮动 当为一个元素设置浮动以后（float属性是一个非none的值），元素会立即脱离文档流，元素脱离文档流以后，它下边的元素会立即向上移动看，元素移动后，会尽量向页面的左上或右上漂浮，直到遇到父元素的边框或者其他的浮动元素，如果浮动元素上边是一个没有浮动的元素，则浮动元素不会超过块元素。浮动的元素不会超过它上边的兄弟元素，最多最多一边齐。 浮动元素不会盖住文字，文字会自动环绕在浮动元素的周围，所以我们可以通过浮动来设置文字环绕图片的效果。 当元素设置浮动以后，会完全脱离文档流，块元素脱离文档流以后，高度和宽度都被内容撑开。内联元素脱离文档流以后会变成块元素。 简单布局 高度塌陷问题在文档流中，父元素的高度默认就是被子元素撑开的，也就是说子元素多高，父元素就多高。但是为子元素设置浮动以后，子元素会完全脱离文档流，此时将会导致子元素无法撑起父元素的高度，导致父元素的高度塌陷。由于父元素高度塌陷，则父元素下的所有元素都会向上移动。这样将会导致页面布局混乱。所以在开发中一定要避免出现的高度塌陷的问题，我们可以将父元素的高度写死，以免塌陷的问题出现，但是一定高度写死，父元素的高度将不能自动适应子元素的高度，所以这种方案是不推荐使用的！ 解决高度塌陷问题 根据W3C的标准，在页面中元素都一个隐含的属性叫做Block Formatting Context，简称BFC，该属性可以设置打开或者关闭，默认是关闭的。当开启元素的BFC以后，元素将会具有如下的特性： 父元素的垂直外边距不会和子元素重叠 开启BFC的元素不会被浮动元素所覆盖 开启BFC的元素可以包含浮动的子元素 如何开启元素的BFC 设置元素浮动——使用这种方式开启，虽然可以撑开父元素，但是会导致父元素的宽度丢失，而且使用这种方式也会导致下边的元素上移，不能解决问题。 设置元素绝对定位 设置元素为inline-block——可以解决问题，但是会导致宽度丢失，不推荐使用这种方式。 将元素的overflow设置为一个非visible的值 推荐方式：将overflow设置为hidden是副作用最小的开启BFC的方式。 但是在IE6及以下的浏览器中并不支持BFC，所以使用这种方式不能兼容IE6。在IE6中虽然没有BFC，但是具有另一个隐含的属性叫做haslayout，该属性的作用和BFC类似，所在IE6浏览器可以通过开haslayout来解决该问题。开启方式有很多，我们直接使用一种副作用最小的——直接将元素的zoom设置为1即可。 zoom表示放大的意思，后边跟着一个数值，写几就将元素放大几倍，zoom:1;表示不放大元素，但是通过该样式可以开启haslayout。zoom这个样式只在IE中支持，其他浏览器都不支持。 clear可以用来清除其他浮动元素对当前元素的影响，可选值： none：默认值，不清除浮动 left：清除左侧浮动元素对当前元素的影响 right：清除右侧浮动元素对当前元素的影响 both：清除两侧浮动元素对当前元素的影响，清除影响对它最大的那个元素的浮动。 清除浮动以后，元素会回到其他元素浮动之前的位置。 解决高度塌陷方案二 可以直接在高度塌陷的父元素的最后，添加一个空白的div，由于这个div并没有浮动，所以它是可以撑开父元素的高度的，然后进行清除浮动，这样可以通过这个空白的div来撑开父元素的高度，基本没有副作用。或者通过after伪类向元素的最后添加一个空白的块元素，然后对其清除浮动，这样做和添加一个div的原理一样，可以达到一个相同的效果，而且不会在页面中添加多余的div，这是我们最推荐使用的方式，几乎没有副作用。 1234567.clearfix:after&#123; content:&quot;&quot;; displayP:block; clear:both;&#125;......&lt;div class=&quot;box1 clearfix&quot;&gt; 导航条练习 开班信息练习 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; *&#123; margin: 0; padding: 0; &#125; body&#123; font: 12px/1 宋体; &#125; .outer&#123; width: 300px; margin: 50px auto; &#125; .title&#123; border-top:2px #019e8b solid; height: 36px; background-color: #f5f5f5; line-height: 36px; padding: 0 22px 0 16px; &#125; .title a&#123; float: right; color: red; &#125; .title h3&#123; font: 16px/36px &quot;微软雅黑&quot;; &#125; .content&#123; border: 1px solid #deddd9; padding: 0 28px 0 20px; &#125; .content a&#123; color: black; text-decoration: none; font-size: 12px; &#125; .content a:hover&#123; color: yellowgreen; text-decoration: underline; &#125; .content h3&#123; margin-top:14px ; margin-bottom: 16px; &#125; .content .right&#123; float: right; &#125; ul&#123; list-style: none; border-bottom:1px dashed #deddd9; &#125; .content .border&#123; border: none; &#125; .content .red&#123; color: red; font-weight: bold; &#125; .content li&#123; margin-bottom: 15px; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;outer&quot;&gt; &lt;div class=&quot;title&quot;&gt; &lt;a href=&quot;#&quot;&gt;16年面授开班计划&lt;/a&gt; &lt;h3&gt;近期开班&lt;/h3&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;h3&gt;&lt;a href=&quot;&quot;&gt;JavaEE+云计算-全程就业班&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span class=&quot;red&quot;&gt;预约报名&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span class=&quot;red&quot;&gt;2016-04-27&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span class=&quot;red&quot;&gt;无座，名额爆满&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span class=&quot;red&quot;&gt;2016-04-27&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2016-04-27&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2016-03-15&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2016-02-25&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;a href=&quot;&quot;&gt;Android+人工智能-全程就业班&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span class=&quot;red&quot;&gt;预约报名&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span class=&quot;red&quot;&gt;2016-04-10&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2016-03-17&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2016-02-20&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2015-12-23&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;a href=&quot;&quot;&gt;前端+HTML5-全程就业班&lt;/a&gt;&lt;/h3&gt; &lt;ul class=&quot;no-border&quot;&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span class=&quot;red&quot;&gt;预约报名&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span class=&quot;red&quot;&gt;2016-05-10&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&quot;right&quot; href=&quot;#&quot;&gt;&lt;span&gt;开班盛况&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;开班时间：&lt;span&gt;2016-03-16&lt;/span&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 相对定位与绝对定位定位：定位指的是将指定的元素放到页面的任意位置，通过定位可以任意的摆放元素。通过position属性来设置元素的定位 可选值： static：默认值，元素没有开启定位 relative：开启元素的相对定位 当开启了元素的相对定位以后，而不设置偏移量时，元素不会发生了变化。相对定位是相对于元素在文档流中原来的位置进行定位。相对定位的元素不会脱离文档流。相对定位会使元素提升一个层级。相对定位不会改变元素的性质，块还是块，内联还是内联。 通常偏移量只需要使用两个就可以对一个元素进行定位。 absolute：开启元素的绝对定位 开启绝对定位，会使元素脱离文档流。开启绝对定位以后，如果不设置偏移量，则元素的位置不会发生变化。绝对定位是相对于离他最近的开启了定位的祖先元素进行定位的（一般情况，开启了子元素的绝对定位都会同时开启父元素的相对定位），如果所有的祖先元素都没有开启定位，则会相对于浏览器窗口进行定位。绝对定位会使元素提升一个层级。绝对定位会改变元素的性质，内联元素变成块元素，块元素的宽度和高度默认都被内容撑开。 fixed：开启元素的固定定位（也是绝对定位的一种） 固定定位是一种绝对定位，它的大部分特点和绝对定位一样。不同的是固定定位永远都会相对于浏览器窗口进行定位，固定定位会固定在浏览器窗口某个位置，不会随滚动条滚动。IE6不支持固定定位。 元素层级如果定位元素的层级是一样的，则下边的元素会盖住上边的，通过z-index属性可以用来设置元素的层级，可以为z-index指定一个正整数作为值，该值将会作为当前元素的层级。层级越高，越优先显示。对于没有开启定位的元素不能使用z-index。父元素的层级永远盖不住子元素的层级。 透明背景opacity可以用来设置元素背景的透明，它需要一个0~1之间的值，0表示全透明，1表示完全不透明，0.5表示半透明。opacity属性在IE8及以下的浏览器中不支持，IE8及以下的浏览器需要使用如下属性代替alpha(opacity=透明度)。透明度，需要一个0~100之间的值，0表示完全透明，100表示完全不透明，50为半透明。 背景background-color:red; 使用background-image:url(相对路径);来设置背景图片，如果 ​ 背景图片大于元素，默认会显示图片的左上角 ​ 背景图片和元素一样大，则会将背景图片全部显示 ​ 背景图小于元素大小，则会默认将背景图片平铺以充满元素 可以同时为一个元素指定背景颜色和背景图片，这样背景颜色将会作为背景图片的底色。 用background-repeat:repeat;来设置背景图片的重复方式，可选值： repeat：默认值，背景图片会双向重复（平铺） no-repeat：背景图片不会重复，有多大就显示多大 repeat-x：背景图片沿水平方向重复 repeat-y：背景图片沿垂直方向重复 用background-position：center center；来设置背景图片的位置（九宫格）用right、left、center、top、bottom。第一个值是左右，第二个值是上下。如果只给出一个值，则第二个值默认值是center。也可以直接指定两个偏移量，第一个值水平偏移量，第二个是垂直偏移量。如果是正值就向右或下偏移，如果是负值就向左或上偏移。 用background-attachment:fixed;来设置背景图片是否随页面一起滚动，可选值： scroll：默认值，背景图片随着窗口滚动 fixed：背景图片会固定在某一位置，不随页面滚动 不随窗口滚动的图片，我们一般都是设置给body，而不设置给其他元素。 按钮练习产生闪烁的原因：背景图片是以外部资源加载进网页的，浏览器没加载一个外部资源就需要单独的发送一次请求，但是我们外部资源并不是同时加载，浏览器会在资源被使用采取才去加载资源。由于加载图片需要一定时间，所以在加载和显示过程会有一段时间，背景图片无法显示，导致出现闪烁的情况。 解决方法：通过将三张图片整合到一张图片上，这样就可以同时将三张图片一起加载，就不会出现闪烁问题，再用background-position来切换要显示的图片的位置，这种技术叫做图片整合技术（css-sprite）。 整合技术优点： 将多个图片整合成一张图片里，浏览器只需要发送一次请求，可以同时加载多个图片，提高访问效率，提高了用户体验。 将多个图片整合为一张图片，减小了图片的总大小，提高请求的速度，增加了用户体验。 背景简写方式 background: red url() center center no-repeat fixed; 没有顺序要求，也没有数量要求，不写就代表默认值。 表格通过border-spacing:0px属性来设置table与td边框之间距离。 通过border-collapse：collapse；来设置表格边框合并。 设置了边框合并，则border-spacing自动失效。 在一些情况下表格是非常长的，这时就需要将表格分为三个部分，表头，表格主体，表格底部。thead、tbody、tfoot来区分表格的不同部分，他们都是table的子标签，都需要直接写到table中，tr需要写到这些标签中，并且thead中内容永远会显示到表格头部，tbody中内容永远都会显示在表格的底部，tfoot中的内容永远都会显示在表格底部。 如果表格中没有写tbody，浏览器会自动在表格中添加tbody，并且将所有的tr都放到tbody中，所以注意tr并不是table的子元素，而是tbody的子元素，通过table &gt; tr 无法选中进行，需要通过tbody &gt; tr 来选择设置。 表格布局表格的列数由td最多的决定，表格可以嵌套，可以在td中放置一个表格。 已经被淘汰，不易维护。 clearfix子元素和父元素相邻的垂直外边距会发生重叠，子元素的外边距会传递给父元素。使用空的table标签可以隔离父元素的外边距，阻止外边距的重叠。 即可解决高度塌陷，又可确保父元素和子元素的垂直外边距不会重叠 表单使用 &lt;form&gt; &lt;/form&gt; 标签来创建一个表单表单中必须要有两个属性 action和method，action表示提交单到服务器中的地址 method 。 用户填写的消息会附在url地址的后边以查询字符串的形式发送给服务器url地址？查询字符串 格式：属性名=属性值 123456789101112131415161718192021用户名&lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;admin&quot;&gt;密码&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;单选按钮：性别&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;man&quot; /&gt;男&lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;woman&quot; /&gt;女多选框：&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;zq&quot;&gt;足球&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;ymq&quot;&gt;羽毛球&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;ppq&quot;&gt;乒乓球下拉列表：&lt;select name=&quot;char&quot;&gt; &lt;optgroup label=&quot;前两个&quot;&gt; &lt;option value=&quot;A&quot;&gt;a&lt;/option&gt; &lt;option value=&quot;B&quot; selected=&quot;selected&quot;&gt;b&lt;/option&gt; &lt;/optgroup&gt; &lt;optgroup label=&quot;后两个&quot;&gt; &lt;option value=&quot;C&quot;&gt;c&lt;/option&gt; &lt;option value=&quot;D&quot;&gt;d&lt;/option&gt; &lt;/optgroup&gt;&lt;/select&gt;如果希望在单选框中或多选框中指定默认选项，则可以在希望选中的项中添加checked=&quot;checked&quot;属性。而在下拉列表option中添加selected=&quot;selected&quot;来设置默认选中项。在select添加一个multiple=&quot;multiple&quot;,则下拉列表变成一个多选的下拉列表。 在select中可以使用optgroup对选项进行分组，可以通过lable属性来指定分组的名字。 &lt;label for=&quot;id中的值&quot;&gt;文字&lt;/label&gt;用来设置点击文字就跳到该选项框中。 fieldset 、legend 、label• fieldset 用来为表单项进行分组。• legend 用于指定每组的名字。• label 标签用来为表单项定义描述文字。 框架集框架集和内联框架的作用类似，都是用于在一个页面中引入其他的外部的页面，框架集可以同时引入多个页面，而内联框架只能引入一个，在h5标准中，推荐使用框架集，而不使用内联框架 。使用frameset来创建一个框架集，注意frameset不能和body出现在同一个页面中，所以要使用框架集，页面中就不可以使用body标签。 属性： rows：指定框架集中的所有的框架，一行一行的排列 cols：指定框架集中所有的页面，一列一列的排列 这两个属性frameset必须选择一个，并且需要在属性中指定每一部分所占的大小。 franeset和iframe一样，它里边的内容都不会被搜索引擎所检索，所以如果使用框架集则意味着页面中不能有自己的内容，只能引入其他页面，而我们每单独加载一个页面，浏览器都需要重新发送一次请求，引入几个页面就需要发送几次请求 IE6中png修复在IE6中对图片格式png24，则会导致透明度效果无法正常显示 解决方法： 可以使用png8来代替png24，即可解决问题，但是使用png8来代替png24以后，图片的清晰度会有所下降。 使用Javascript来解决问题，需要向页面中引入一个外部的Javascript文件然后再写一个简单的JS代码，来处理该问题。 有一些情况，有一些特殊的代码我们只需要在某些特殊浏览器中执行，而其他的浏览器中不需要执行，这时就可以使用CSS Hack来解决该问题，CSS Hack实际上指的是一个特殊的代码，这段代码只在某些浏览器中可以识别，而其它浏览器不能识别，通过这种方式，来为一些浏览器设置特殊的代码。 1234条件HACK只对IE浏览器有效，其他浏览器都会将它识别为注释，IE10及以上的浏览器已经不支持这种方式。&lt;!--[if IE 6]&gt; .......&lt;![endif]--&gt; 属性级HACK12345678.body&#123; background-color:red; /*在样式前添加一个下划线，则该样式只有IE6及以下的浏览器才可以识别*/ _background-color:yellow; /*在样式前添加一个*的样式，只有在IE7及以下的浏览器才能识别*/ *background-color:blue; /**/&#125; CSS Hack一般情况下不使用。]]></content>
      <categories>
        <category>html+css</category>
      </categories>
      <tags>
        <tag>html+css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[嵌入式复习]]></title>
    <url>%2F2019%2F04%2F26%2F%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%A4%8D%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[第一章嵌入式系统概念：以应用为中心，以计算机为基础，软件、硬件可裁剪，功能、可靠性、成本、体积、功耗严格要求的专用计算机系统（国内）；用于控制、监控或辅助操作机器和设备的装置（IEEE）； 嵌入式发展阶段：无操作系统阶段、简单操作系统阶段、实时操作系统阶段、面向Internet阶段； 嵌入式应用领域：工业控制、交通管理、信息家电、家庭智能管理、网络及电子商务、环境监测和机器人等方面。 嵌入式技术的发展趋势： 嵌入式应用软件的开发需要强大的开发工具和操作系统的支持； 联网成为必然趋势； 精简系统内核、算法，设备实现小尺寸、微功耗和低成本； 提供精巧的多媒体人机界面； 嵌入式系统的基本组成： 嵌入式系统的重要特征： 系统内核小 专用性强 系统精简和高实时性操作系统 高效率的设计 创新性和有效性 嵌入式软件开发走向标准化 嵌入式系统开发工具和环境 嵌入式系统的硬件组成： 嵌入式系统基本硬件架构主要包括有处理器、外围电路及接口和外部设备三大部分。其中外围电路一般有时钟、复位电路、程序存储器、数据存储器和电源模块等部件组成； 嵌入式处理器分类： ​ 嵌入式微控制器（MCU）：主要特点：单片化，体积大大减小，功耗和成本低、可靠性提高。 ​ 嵌入式DSP处理器（DSP）：专门用于信号处理方面的处理器，具有在系统结构和指令算法方面进行了特殊设计，执行DSP算法，编译效率较高，指令执行速度也很快。 ​ 嵌入式微处理器（MPU）：只保留和嵌入式应用紧密相关的功能硬件，去除冗余部分，体积小、重量轻、成本低、可靠性高的优点。 ​ 嵌入式片上系统（System On Chip）：成功实现了软/硬件无缝结合。可以直接在处理器片内嵌入操作系统的代码模块。可以用VHDL等硬件描述语言进行系统设计。只需要使用精确的编程语言，综合时序设计可直接在器件库中调用各种通用处理器标准。 嵌入式系统好处：就是屏蔽了底层硬件的差别，给上层应用提供统一的接口，并管理进程调度和资源（如CPU时间、内存）分配等。 主要有实时系统、分时系统（非实时系统）和顺序执行系统。 （1）实时操作系统：系统内有多个程序运行，每个程序有不同的优先级，只有最高优先级的任务才能占有CPU的控制权。VXworks、UC/OS （2）分时操作系统：系统内同时可以有多个程序运行，把CPU的时间分按顺序分成若干片，每个时间片内执行不同的程序，如UNIX，windows。 （3）顺序执行系统：系统内只含有一个程序，独占CPU的运行时间，按语句顺序执行该程序，直至执行完毕，另一程序才能启动运行。如DOS操作系统 实时性： 它的正确性不仅与系统的逻辑正确性相关，而且与系统的响应时间相关。 具有强(硬）实时特点的嵌入式操作系统 ​ 系统在指定的时间内未能实现某个确定的任务，会导致系统的全面失败，则被称为硬（强）实时系统。硬实时系统，其系统响应时间在毫秒或微秒级。一个硬实时系统通常在硬件上需要添加专门用于时间和优先级管理的控制芯片，uc/os和VxWorks是典型的实时操作系统。 具有弱（软）实时特点的嵌入式操作系统 ​ 在软实时系统中，虽然响应时间同样重要，但是超时却不会发生致命的错误。软实时系统则主要在软件方面通过编程实现现实的管理。比如Windows CE、uCLinux是一个多任务分时系统。一般软实时系统，其系统响应时间在毫秒或几秒的数量级上，其实时性的要求比强实时系统要差一些（电子菜谱的查询）。 第一章： 在日常生活中，你接触过哪些嵌入式产品？他们都有些什么功能? 答：数字电视、手持通信、智能玩具。 嵌入式硬实时操作系统与软实时操作系统的区别是什么？ 答：硬实时操作系统的系统在指定的时间内未能实现某个确定的任务，会导致系统的全面失败，一个硬实时系统通常在硬件上需要添加专门用于时间和优先级管理的控制芯片，响应时间在毫秒或微秒级上。在软实时系统中，虽然响应时间同样重要，但是超时却不会发生致命的错误。软实时系统则主要在软件方面通过编程实现现实的管理，系统响应时间在毫秒或几秒的数量级上 嵌入式处理器是如何分类的？ 答：嵌入式微控制器（MCU）、嵌入式DSP处理器（DSP）、嵌入式微处理器（MPU）、嵌入式片上系统（System On Chip）。 嵌入式操作系统的作用是什么？ 答：屏蔽了底层硬件的差别，给上层应用提供统一的接口，并管理进程调度和资源（如CPU**时间内存）分配等。** 交叉开发的概念。 答：在一台通用计算机上进行软件的编辑、编译，然后下载到嵌入式系统中运行调试。 主流的操作系统的特点 答：windows：用户多；Linux：开源，免费； 第二章嵌入式系统的硬件基本组成 嵌入式系统的硬件是以嵌入式微处理器为核心，主要由嵌入式微处理器、总线、存储器以及I/O接口和设备组成。 嵌入式微处理器的体系结构 目前使用冯．诺依曼结构的CPU和微控制器品种有很多，例如Intel公司的8086系列及其他CPU，ARM公司的ARM7、MIPS公司MIPS处理器等。 目前使用哈佛结构的CPU和微控制器品种有很多，除DSP处理器外，还有摩托罗拉公司的MC68系列、Zilog公司的Z8系、ATMEL公司的AVR系列和ARM公司的ARM9、ARM10和ARM11等。 总线 片内总线：与嵌入式微处理器集成在一起（如：AMBA、AVALON、OCP、ISHBONE等）。 片外总线：集成在嵌入式微处理器内或外接芯片扩展上，用于连接外部设备。 片内总线的选择取决于CPU core；片外总线的选择取决与应用； 存储器 片内存储器:存储容量小、速度快、价格较高 可以做主存的存储器有： ​ ROM类：Nor Flash、EPROM、E2PROM、PROM等； ​ RAM类：SRAM、DRAM、SDRAM等； 外存：容量大、成本低 在嵌入式系统中常用的外存有： ​ NandFlash ​ DOC（Disk On Chip） ​ CF（Compact Flash） ​ SD（Secure Digital） ​ MMC（Multi MediaCard）等 SRAM速度快、价格贵； DRAM速度较SRAM慢、价格便宜； NOR Flash具有随机存储速度快、电压低、功耗低、稳定性高等特点。 NandFlash具有容量大、回写速度快、芯片面积小等特点，主要用于外存。 输入/输出接口和设备 输入/输出接口主要有中断控制器、DMA、串行和并行接口等，设备主要有定时器（Timers）、计数器（counters）、看门狗（watchdog timers）、RTC、UARTs、PWM（Pulse width modulator）、AD/DA、显示器、键盘和网络等。 嵌入式处理器分类 按用途来分,嵌入式微处理器可以分为嵌入式DSP和通用的嵌入式微处理器两种； 在最普通的情况下，嵌入式微处理器包括： 片内存储器：部分嵌入式微处理器 外部存储器的控制器，外设接口(串口，并口) LCD控制器：面向终端类应用的嵌入式微处理器 中断控制器，DMA控制器，协处理器 定时器，A/D、D/A转换器 多媒体加速器：当高级图形功能需要时 总线 其他标准接口或外设 流水线 通常采用单周期执行指令，可能导致比较长的流水线 流水线的概念：流水线，亦称管线，是现代计算机处理器中必不可少的部分，是指将计算机指令处理过程拆分为多个步骤，并通过多个硬件处理单元并执行来加快指令执行速度。 嵌入式微处理器的功耗管理 降低工作电压 提供不同的时钟频率 关闭暂时不使用的功能块 提供功耗管理机制 运行模式（Running Mode）：处理器处于全速运行状态下。 待命模式（Standby Mode）：处理器不执行指令，所有存储的信息是可用的，处理器能在几个周期内返回运行模式。 时钟关闭模式（clock-off mode）：时钟完全停止，要退出这个模式系统需要重新启动。 影响功耗的其他因素还有总线和存储器的类型大小 ARM(Advanced RISC Machine)是专门从事基于RISC技术芯片设计开发的公司，主要出售芯片设计技术的授权，作为知识产权供应商，本身不直接从事芯片生产，靠转让设计许可由合作公司生产各具特色的芯片，半导体生产商从ARM公司购买其设计的ARM微处理器核，根据各自不同的应用领域，加入适当的外围电路，从而形成自己的ARM微处理器芯片进入市场。 ARM内核是一种32位RISC微处理器，具有功耗低、性价比高、代码密度高等三大特色。 什么是Thumb指令？ ​ Thumb指令集可以看作是ARM指令压缩形式的子集，它是为减小代码量而提出，具有16bit的代码密度。 什么是Thumb-2指令？ ​ Thumb-2是16位Thumb指令集的一个超集，在Thumb-2中，16位指令首次与32位指令并存，结果在Thumb状态下可以做的事情丰富了许多。 ‘T’是Thumb指令或者Thumb-2指令； ‘E’提供DSP能力 ‘J’增加了Jazelle扩展以支持Java加速技术 数据类型 字节型类型（Byte）：数据宽度为8bits 半字数据类型（HalfWord）：数据宽度为16bits，存取式必须是以2字节对齐方式 字数据类型（Word）：数据宽度为32bits，存取时必须以4字节对齐的方式 char：1 short：2 int：4 long：4 float：4 double：8 什么叫字节对齐？ 如果一个数据是以能被4或者2整除的地址开始的连续存储，那么它就是字节对齐，否则就是非字节对齐。 为什么必须字节对齐？ 原因：各个硬件平台对存储空间的处理上有很大的不同。一些平台对某些特定类型的数据只能从某些特定地址开始存取。如有些只能访问偶地址，有些只能访问4的倍数地址。字节对齐存储可提高CPU效率 7种CPU模式 处理器工作状态： ARM:32位，执行字对准的ARM指令（从能被4整除的存储器地址一次取4字节arm指令） Thumb:16位，执行半字对准的Thumb指令（从能被2整除的存储器地址一次取2字节Thumb指令） ARM和Thumb之间状态的切换不影响处理器的模式或寄存器的内容 处理器为什么要有两种状态？ 在保证处理器性能的同时，更少的占用内存，更低的功耗 ARM处理器有37个寄存器 31个通用寄存器：程序计数器、堆栈及其他通用寄存器；6个状态寄存器 R8-R12各有两组物理寄存器：一组为FIQ模式，另一组是除FIQ以外的其他模式。 R13-R14各有6个分组的物理寄存器，一个用于用户模式和系统模式，其他5个分别用于5种异常模式。访问时需要指定它们的模式，如：R13_＜mode＞，R14_＜mode＞；其中：＜mode＞可以从usr、svc、abt、und、irq和fiq六种模式中选取一个 程序状态寄存器 异常 是由内部或者外部原因引起的，当异常发生时CPU将暂停执行当前指令自动到指定的向量地址读取指令并且执行。 内存和I/O ARM的寻址空间是线性的地址空间，2^32=4G ARM支持大端和小端的内存数据方式 总线宽度、频率与总线带宽之间的关系 答：总线带宽=（总线宽度/8）总线频率 第三章 驱动层BSP BSP的概念：BSP是板级支持包，是介于主板硬件和操作系统之间的一层，属于操作系统的一部分，主要目的是为了支持操作系统，使之能够更好的运行与硬件主板。 BSP对于不同的操作系统有不同的形式 操作系统层OS 操作系统功能简单来说就是隐藏硬件细节，而只提供给应用程序开发人员一个个抽象的接口。 操作系统层包括嵌入式内核、嵌入式TCP/IP网络系统、嵌入式文件系统、嵌入式GUI系统和电源管理等部分。其中嵌入式内核是基础和必备的部分，其他部分要根据嵌入式系统的需要来确定。 操作系统负责确定可在CPU上执行的程序及其执行时间的长短，此功能称为进程调度，调度的方法由操作系统所定的优先策略决定。 中间层 中间层为上层软件提供了设备操作接口。 应用层 应用层软件主要由多个相对独立的应用任务组成。每个应用任务完成特定的工作。 嵌入式软件运行流程： 上电复位、板级初始化阶段 嵌入式系统完成上电复位后完成板级初始化工作。板级初始化程序具有完全的硬件特性，一般采用汇编语言实现。不同的嵌入式系统，板级初始化时要完成的工作具有一定的特殊性，但以下工作一般是必须完成的： CPU中堆栈指针寄存器的初始化。 CPU芯片级的初始化：中断控制器、内存等的初始化。 系统引导/升级阶段 根据需要分别进入系统软件引导阶段或系统升级阶段。通过测试通信端口数据或判断特定开关的方式分别进入不同阶段。 远程升级：TFTP、FTP、HTTP 串口本地升级：超级终端、特定升级软件 系统初始化阶段 系统初始化需要按特定顺序进行 应用初始化阶段 进行应用任务的创建，信号量、消息队列的创建和应用相关的其它初始化工作。 多任务应用运行阶段 系统进入多任务状态，操作系统按照已确定的算法进行任务调度，各应用任务分别完成特定功能。 操作系统可以简单的分为通用操作系统和实时操作系统（RTOS） 实时操作系统就是”在给定时间内提供某种程度的服务，如果在规定的时间内没有得到结果，那整个的系统就是失败”。 实时操作系统特点： 多任务 任务的事件驱动 中断与中断优先级 异常中断的优先级 微处理器的异常中断响应过程 从异常中断处理程序中返回 同步与异步 资源与临界资源 容错与安全 操作系统体系结构： 体系结构是操作系统的基础，它定义了硬件与软件的界限、内核与操作系统其它组件的组织关系、系统与应用的接口。 目前操作系统的体系结构可分为：单块结构（Linux）、层次结构和客户/服务器（微内核）结构。 目前嵌入式操作系统主要采用分层和模块化相结合的结构或微内核结构。 分层和模块化相结合的结构将操作系统分为硬件无关层、硬件抽象层和硬件相关层，每层在划分功能模块。移植工作便集中在硬件相关层。微内核结构便于扩展。 嵌入式操作系统的功能 负责嵌入式系统的全部软、硬件资源的分配、调度，将CPU时钟、I/O、中断等资源封装起来给用户提供一个标准的API接口，供用户调用。由应用程序接口、设备驱动程序接口、设备驱动、操作系统内核等组成。 嵌入式内核 任务管理 内存管理 通信、同步和互斥机制 中断管理 时间管理任务扩展功能 实时系统的评价指标 在实时系统中主要有三个指标来衡量系统的实时性，即响应时间（Response Time）、生存时间（Survival Time）、吞吐量（Throughput）。 响应时间：是计算机识别一个外部时间到作出响应的时间，在控制应用中它是最重要的指标，如果实践部能即时处理，系统可能就会崩溃。 任务调度，这是操作系统内核的主要职责之一，它决定该轮到哪个任务运行了,调度是基于任务的优先级。 生存时间：是数据有效等待时间，在这段时间里数据是有效的。 吞吐量：是在一给定时间内，系统可以处理的事件总数。 非占先式内核的优缺点： 优点：正在运行着的任务占有CPU，而不必单行被别的任务抢占。 缺点：其响应高优先级的任务慢。 常见的嵌入式操作系统特点： 1.uC/OS-II:公开源代码、代码结构清晰、注释详尽、组织有调理、可移植性好、可裁剪、可固化、抢占式内核、最多可管理60个任务。可用于8位，16/32位单片机或DSP。 2.Linux:具有可移植性、一定的稳定性、各种性能的升级能力，开发更容易。开放源代码，不存在黑箱技术。内核小、功能强大、运行稳定、效率高。开放源代码的操作系统易于定制裁剪，在价格上极具竞争力。不支持X86CPU，还可支持其他数十种CPU芯片。有大量的且不断增加的开发工具和开发环境。其内核的结构在网络方面是非常完整的，提供了对多种互联网方式的全面支持。 3.Windows CE:其核心全是由C语言开发，内核提供内存管理、抢先多任务和中断处理功能。具有高度模块化，可在内核基础上添加各种模块，适合作为可裁剪的32位嵌入式操作系统，既适用于工业设备的嵌入式控制模块，也适用于消费类电子产品。其核允许每个进程有256个优先级，采用抢占式优先权调度法。它嚄没有DOS模式，不能运行现有的应用程序，有严格的内存限制，有精简的运行库和API，硬件并不十分标准化。 4.VxWorks:具有可靠性、实时性和可裁剪性。支持多种处理器，如:x86、i960、Sun Sparc、MIPS、PowerPC等。 第四章嵌入式系统大致可以分为四个层次： 硬件层 特点： 处理器体系结构不统一 硬件资源通常受限 外部设备的种类繁多 有实时性和可靠性要求 OEM层 Bootloader的功能：初始化硬件,加载操作系统映像（0S Image ）到内存，然后跳转到操作系统代码去执行。 BSP是介于主板硬件和操作系统之间的一层也可以说是属于操作系统的一部分，主要目的是为了支持操作系统使之能够正常地运行于硬件主板上。 bootLoader获得操作系统的方式： ​ 方式一:串口、USB(U-BOOT)、以太网下载(E-BOOT)； ​ 方式二：从本地的存储设备例如CF卡和硬盘中读取操作系统映像。 操作系统层 Windows CE 是一个微内核操作系统。操作系统的基本功能被放在多个独立的进程（EXE）里面实现。在运行的时候，这些进程大致有如下几个： 内核NK. EXE ; 图形系统GWES. EXE ; 对象存储FILESYS .EXE ; 设备管理系统DEVICE .EXE ; 服务SERVICES. EXE 应用程序层 应用程序层位于Windows CE层次结构的最顶层。从系统的角度看，每个应用程序都是Windows CE 中的单独的程。 在Windows CE中，应用程序与操作系统交互的接口同样是Win32 API 。 进程与线程： 进程：进程即是程序的一次动态执行实例。 线程：线程是Windows CE中最小的可执行单元。 进程与程序的区别： 进程是动态概念，而程序是静态的概念。 进程有创建、执行及结束完整的生命周期，而程序只是一个文件。 一个进程可以对应多个进程，而一个进程只能对应一个程序。 进程本身不参加系统的调度，也没有有优先级和上下文。真正参加系统调度的是线程，系统只识别和调度线程，每个进程在创建的时候都会创建一个主线程作为该进程默认的执行体。进程只是线程的容器。一个进程可拥有的线程数理论上是没有限制的，只与当前可用的内存有关。系统中同时最多只能有32个进程。 wince线程的状态 Windows CE开发流程： 硬件设计 自己设计硬件：开发难度大、周期长，需要开发人员有很好的硬件基础。 从OEM厂商购买：难度最小，周期最短，需要一定的经费，有较好的售后支持。 定制操作系统 应用程序开发 安装包（像桌面Windows一样） 作为操作系统的一个组件，打包进入操作系统的运行时映像中。 WinCE开发环境过程 安装.NET Framework 安装Platform Builder开发工具和升级包 安装开发板支持包根据具体的实验箱而定 建立并编译WinCE系统平台 定制软件开发工具包（SDK） 建立eMbedded Visual C++ 4.0开发环境（EVC文件夹） 安装同步软件 Windows CE开发中涉及到的工具 Platform Buider 功能： 可对Windows CE操作系统进行定制、构建、下载、调试及发布； 可开发简单的基于Windows CE的应用程序； Visual Studio 功能： 可编写Windows应用程序、Web应用程序和移动设备应用程序。 eMbedded Visual C++ 功能： 可用C/C++语言来为Windows CE开发应用程序 如果使用EVC4为Windows CE5.0开发应用程序，那么就必须安装EVCSP4 SDK SDK概念：软件开发工具包是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等创建应用软件的开发工具的集合。 功能 为某种特定的Windows CE平台开发应用程序，必须安装特定的SDK。 ACtiveSync 简介：ActiveSync用来连接Windows CE设备和安装桌面Windows的PC机的工具。 主要功能： PC机可借助ActiveSync的通信功能查看Windows CE上的文件系统，以及安装软件。 对于开发人员，还可使用ActiveSync下载编写的应用程序和进行代码调试。 依赖关系：对各种软件的安装必须按一定顺序；否则可能导致软件或则软件的部分功能不能使用。 第五章• Wince的平台初始化文件 common． 文件、 platform． 文件、project．*文件的作用域；读懂.dat文件的代码，读懂.bib中 memory、modules、files的代码。 答：common．*文件的作用域是所有的OSDesign，对common．x文件的修改会影响到所有的OSDesign platform． 文件的作用范围是使用该BSP的OSDesign，因此一般把与硬件相关的配置信息放到platform．文件中； project． 文件的作用范围仅仅是当前OS Design，一般在poject．文件中只存放与本项目相关的一些配置信息。 ;;创建根目录下子目录Program Files root: -Directory (“Program Files”) ;;创建目录Program Files下一个子目录My Projects Directory (“\Program Files”): -Directory (“My Projects”) ;;复制文件从\Windows\Myproj.exe到\Program Files\My Projects\My Project.exe Directory (“\Program Files\My Projects”): -File (“My Project.exe”, “\Windows\My proj.exe”) ;;复制文件从\Windows\control.lnk到\control.lnk root: -File (“\control.lnk”, “\Windows\control.lnk”) MEMORY ; Name Start Size Type modules、files 模块名称 路径 内存块 类型 ; @CESYSGEN IF CE_MODULES_DEVICE device.exe $(_FLATRELEASEDIR) \device.exe NK SHM • SDK的概念及作用 答：SDK是一系列头文件、库文件、文档、平台管理器和运行时库的总称。应用开发人员可使用SDK为某个特定平台开发应用程序。 第六章Windows CE应用程序开发工具： 1.Platform Builder 应用程序将被链接到OS内核中 一旦修改代码，必须再重新编译镜像 容易调试OS内核,不容易调试应用程序 2.Embedded Visual C++ 易于调试和测试 必须安装相应的为特定平台开发的SDK，从而开发相应的应用程序 3.VIsual Studio 目标平台上需要安装 .NET compact framework 易于调试和测试 必须安装相应的为特定平台开发的SDK，从而开发相应的应用程序 4.Embedded Visual Tools 3.0 应用程序开发流程： 1.安装合适的SDk 2.编写代码和调试 3.发布应用程序 两种途径获得SDK： 1.开发人员可以从微软或者第三方处获得SDK； 2.开发人员可以通过Platform Builder导出自己的SDK； 应用程序发布涉及到代码签名和代码打包 Windows CE应用程序开发，代码的选择： 1.托管代码：是指使用.NET compact framework开发的程序代码，执行时需要有.NET的运行时环境。 2.本地代码：是指用C++等高级语言开发的程序代码，可执行文件被编译成与CPU指令集有关的机器码，可以直接运行。 托管代码主要的优缺点 优点：与硬件平台无关；与编程语言无关； 缺点：执行效率低； 托管代码优缺点与本地代码优缺点互补 Windows CE的应用编程接口（API） Win32 API（应用程序接口） 包括源代码文件（.c/.cpp/.H等）和资源文件（.BMP/.ICO/.CUR/.FON） 源代码文件经过C/C++编译器编译后形成目标文件；资源文件经过资源编译器编译后形成.RES二进制资源。然后，链接器负责把目标文件、二进制资源及库文件等统一链接，最终形成可执行文件。 MFC与ATL Microsoft .NET Framework精简版 各种编程接口的比较 资源大小： 开发效率和执行时间：]]></content>
      <categories>
        <category>嵌入式</category>
      </categories>
      <tags>
        <tag>嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用VMware Workstation15安装Ubuntu19.04]]></title>
    <url>%2F2019%2F04%2F25%2F%E7%94%A8VMware-Workstation15%E5%AE%89%E8%A3%85Ubuntu19-04%2F</url>
    <content type="text"><![CDATA[Ubuntu（友帮拓、优般图、乌班图）是一个以桌面应用为主的开源GNU/Linux操作系统，Ubuntu 是基于DebianGNU/Linux，支持x86、amd64（即x64）和ppc架构，由全球化的专业开发团队（Canonical Ltd）打造的。 1.下载Ubuntuubuntu下载地址：官网 18是LTS版是长期支持（Long Term Support）的缩写。直到2023年四月，免费安全和维护更新。19只提供九个月到2020年1月，根据自己需求选择，我这里选择19。 2.安装我相信大家都应该安装好了自己的Vmware Workstation15，如果没有安装好，可以参考一下我的另一篇博客：VMware Workstation pro 15破解版安装 1.双击运行VMware Workstation Pro 2.创建新的虚拟机可以选择典型和自定义，我喜欢个性化，所以就选择了自定义。 下一步 选择安装程序光盘映像文件(iso)(M):，点击浏览选择刚刚下载的Ubuntu镜像 进行简单的配置用户名和密码 设置虚拟机名称和安装的位置 根据自己电脑的CPU来设置处理器数量和内核数量 设置内存 默认选择，下一步 创建新虚拟磁盘 分配磁盘空间大小和选择将虚拟磁盘存储为单个文件 默认，下一步 完成 3.开始安装ubuntu 点击开启此虚拟机 我们可以先看看，点击Try Ubuntu 然后关闭重新启动进行安装 选择语言后进行安装 直接点击继续 简单的配置自己的用户名以及密码 这个安装时间有点长 安装完成后重启 3.使用 打开终端输入sudo apt-get update sudo apt-get upgrade]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali安装中文搜狗输入法]]></title>
    <url>%2F2019%2F04%2F21%2Fkali%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%2F</url>
    <content type="text"><![CDATA[我们在使用大多数linux系统时，有些不提供中文输入法，这就导致我们在使用时存在一些困难，毕竟刚接触linux系统，还是图形界面，对我们这些初学Linux的人来说有许多？那么我们要坚持一个不懂就学懂好习惯，去网上查找答案，因为英语不是很好（英语大神请绕道），所以就需要中文输入法； kali安装搜狗输入法1.修改软件源leafpad /etc/apt/sources.list ) 或 vim /etc/apt/sources.list键盘输入e 进入下面界面 输入i键后，进行编辑，即下方显示“– 插入 –” 编辑完成后，按ESC键退出，然后再按”:wq”保存并退出。 123456789101112#kali官方源deb http://http.kali.org/kali kali-rolling main non-free contrib#中科大的源deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-freedeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-freedeb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-freedeb-src http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free#阿里云源deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb http://mirrors.aliyun.com/kali-security/ kali-rolling main contrib non-freedeb-src http://mirrors.aliyun.com/kali-security/ kali-rolling main contrib non-free 从中任意选两个就ok了！ 2.安装fcitxsudo apt-get install fcitx 3.下载并安装搜狗输入法搜狗输入法下载地址 根据自己的系统位数来下载搜狗输入法 切换到下载目录，先直接安装 dpkg -i sogoupinyin_2.2.0.0108_amd64.deb 注意：出现错误时，输入apt-get -f install 安装成功后，桌面上会出现Fcitx和Fcitx配置两个企鹅图标 点开Fcitx配置，看输入法中是否会出现搜狗拼音，有就成功了，没有就手动导入一下 4.最后使用搜狗输入法重启电脑后，ctrl+空格键变换输入法 测试结果，有多种皮肤供选择，选择自己觉得最好看的一个作为皮肤]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git和Node.js重新安装]]></title>
    <url>%2F2019%2F04%2F18%2FGit%E5%92%8CNode-js%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[由于最近误删了一个东西，导致Windows10系统崩溃，好像是把系统引导给搞坏了，看了网上一大堆的方法来拯救，最终还是嫌麻烦，就直接重装系统，那么问题就来了，导致我的Git和Node.js也出现了一些问题，不能直接导出，就很麻烦，然后又去下载这两个东西和安装以及配置。 1.Git安装教程下载地址：Git下载地址 开始安装 第一步：点击next 第二步：根据自己想安装软件的位置来选者路径(我这里选择的是D:\app\blog_software) 第三步：安装配置文件，更具自己需要选择 第四步：不创建启动文件夹（勾选Don’t create a Star Menu folder） 第五步：选择默认编辑器 第六步：点击Next 第七步：使用默认设置就行 第八步：默认 第九步：在终端模拟器选择页面，默认即可，配置后Git 第十步：最后配置Git额外选择默认安装 第十一步：安装完成 检验 ： 2.Node.js安装下载地址：Node.js官网下载地址 第一步：下载完成后，开始安装 第二步：接受协议 第三步：根据自己要安装的地方选择安装目录(我这里选择D:\app\blog_software\Node.js路径下) 第四步：选择安装项，一般默认 第五步：点击“Install”按钮，开始安装 第六步：过程 完成安装 检验： 1.node -v 查看 node 版本 ​ 2.npm -v 查看 npm 版本 3.环境配置说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\app\blog_software\Node.js】下创建两个文件夹【node_global】及【node_cache】如下图： 创建完两个空文件夹之后，打开cmd命令窗口，输入 12npm config set prefix &quot;D:\app\blog_software\Node.js\node_global&quot;npm config set prefix &quot;D:\app\blog_software\Node.js\node_cache&quot; 接下来设置环境变量，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量” 在用户变量里选择Path，点击新建，在弹出的框中点击新建，然后在其中添加node_modules文件夹的位置。 完成所有的操作，可以在任意地方测试]]></content>
      <categories>
        <category>Node.js</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebStorm的安装与破解]]></title>
    <url>%2F2019%2F04%2F09%2FWebStorm%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E7%A0%B4%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[1.WebStorm介绍在学习了html+css基础后，想做一些简单的html实战项目，以前在学习html为了方便记忆且容易上手用了Notepad++，现在进行项目实战，难免不了要大量代码以及更多的功能来操作与编写，所以就去下载了WebStorm这种重量级软件来进行学习与开发。 html提示 联想查询 代码重构 代码检查和快速修复 代码调试 代码结构浏览 代码折叠 包裹或者去掉外围代码 对于WebStorm的叙述就到这儿了，“工欲善其事必先利其器”，下面来看看如何安装与破解WebStorm。 2. WebStorm的下载去官网下载 WebStorm官网 点击DOWNLOAD进行下载 下载完成后双击打开进行安装 点击Next 选择自己的安装路径 根据自己电脑的位数选择，和添加到环境变量，.js .css .html勾选后之后js css html文件默认会用webstorm打开,然后点击Next。 点击Install 完成安装，选择I want to manually reboot later，然后点击Finsh。 3. 破解双击打开程序,选择Do not import settings,点击ok 点击Skip 方法一： 注册时，在打开的License Activation窗口中选择“License server”，在输入框输入下面的网址： http://idea.imsxm.com/或http://idea.yangyusb.com 点击：Activate即可。 方法二： 选择Activation code,在其中填入注册码 12RRJMBXW33-eyJsaWNlbnNlSWQiOiIyUlJKTUJYVzMzIiwibGljZW5zZWVOYW1lIjoi5b285bK4IHNvZnR3YXJlMiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJGb3IgZWR1Y2F0aW9uYWwgdXNlIG9ubHkiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE5LTA3LTA3In1dLCJoYXNoIjoiOTUyNzQwMS8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-WBR8xuiXaXLeV0obFYbBfUUQ02r54Vj3fE9ImtuXKSP+NuvvnR6lH6gWcVm9PZt67eqdDZa+Deej1NsoGRPDZS5UB6WEt4YVahlOhmG3rgvXPlP98hsfgFUcjr3OQVY7wk5slJ+Q2G9lkpsqwezO+SFIk9yA6pjxyT+U7FjpU8SY5ilsHskq4FG8FoKPYLsfsuwtXrJimRBxVcDClw/QsnCSwgtjuunc8Te37rHb08ZAxtJJieIsjhWnnzrQ3LmxmsR4xstkZOSqD4bYgeNz+m2nbmCWJ5lfP+pnqWfSsUCVri2TUxTpzzTMe4Cx8UhGeJgIgUyBXjq05/0nq3YoVg==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog== 或者打开网址（IntelliJ IDEA 注册码）跳转到,点击获得注册码 将注册码复制到 如果没成功，请换一个旧一点的版本，旧的注册码对新版本不管用。 用破解补丁来破解： 下载破解补丁破解补丁无需使用注册码，下载地址或者去（IntelliJ IDEA 注册码）下载 将下载的文件移动到WebStorm安装目录的bin目录下 修改安装目录下的 WebStorm.exe.vmoptions 和WebStorm64.exe.vmoptions，这两个文件一个是32位的，一个是64位的，建议同步修改。用文本编辑器打开之后，在文件最上面加一行代码 ： 1-javaagent:安装目录/破解补丁名字.jar 配置好之后，保存文件。在此再次启动WebStorm，选择Activation code，在其中输入-javaagent:安装目录/破解补丁名字.jar,点击ok完成。 成果：一个八卦图]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>html+css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS部分]]></title>
    <url>%2F2019%2F04%2F05%2FCSS%E9%83%A8%E5%88%86%2F</url>
    <content type="text"><![CDATA[1.HTML&lt;!DOCTYPE&gt;声明标签&lt;!doctype&gt;声明必须是HTML文档是的第一行，位于标签之前。&lt;!doctype&gt;声明不是HTML标签；它是指示web浏览器关于页面使用的哪个HTML版本进行编写的指令。 HTML5为&lt;!doctype html&gt;,&lt;meta charset=&quot;utf-8&quot;&gt; 在html4.01中单标记必须闭合，单属性必须必须添加属性值，标记和属性必须使用小写，属性的属性值必须使用””。 2.使用CSS样式的方式a.内链样式表： 12&lt;!--内链样式表--&gt; &lt;body style=&quot;background-color:green; margin:0; padding:0;&quot; &gt; b.嵌入式样式表： 需要放在&lt;head&gt;&lt;/head&gt;中 123456&lt;!--嵌入式样式表--&gt; &lt;style type=&quot;text/css&quot;&gt; p&#123; background-color:yellow; color:black; &#125; p是&lt;p&gt;&lt;/p&gt;标记，如果是&lt;h1&gt;&lt;/h1&gt;标记就为： 123456&lt;!--嵌入式样式表--&gt; &lt;style type=&quot;text/css&quot;&gt; h1&#123; background-color:yellow; color:black; &#125; c.引入式样式表： 12&lt;!--引入式样式表--&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; herf=&quot;style.css&quot;&gt; style.css为新建的css文件，表示要设置属性内容： 1234body&#123; background-color:green; color:yellow; &#125; 3.定义样式表&lt;h1&gt;&lt;h1&gt;,h1{属性:属性值; 属性:属性值:},h1为选择器，定义那个标记中的内容执行其中的样式，一个选择器可以控制若干个样式属性，属性之间用英语“;”隔开。 a.Class定义： &lt;p class=&quot;p&quot;&gt;&lt;/p&gt;,class定义是以“.”开始 p{属性1:属性值; 属性2:属性值;} 12345 .p&#123;color:green;font-size:10px&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p class=&quot;p&quot;&gt;小土豆很强&lt;/p&gt; b.id定义： &lt;p id=&quot;pp&quot;&gt;&lt;/p&gt;,id定义是#开始的。#pp{属性1:属性值1; 属性2:属性值2;},id只能出现一次。 12345#PP&#123;background-color:green; color:blue; font-size:20px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;p id=&quot;pp&quot;&gt;...&lt;/p&gt; 优先级为id&gt;class&gt;html，如 123p&#123;......&#125;.p&#123;......&#125;#pp&#123;......&#125; 不管顺序如何，结果都为#pp{……}中的内容设置。 同级时选择离元属最近一个的，如 12#pp&#123;color:red&#125;#pp&#123;color:white&#125; 则执行颜色为白色的。 组合选择器（同时控制多个元素） h1,h2,h3{font-size:20px; color:red;},选择器组合可以使用“.”隔开 超链接： 1234a:link&#123;color:red&#125;; 正常连接的样式a:hover&#123;color:yellow&#125;; 鼠标放上去的样式a:active&#123;color:blue&#125;; 选择链接时的样式a:visited&#123;color:yellow&#125;; 已经访问过的链接的样式 上面的内容纯属不要年放上去的啊！装了一波，哈哈哈！ 4.CSS常见属性 颜色属性： color属性定义文本的颜色，可以有以下格式： a. color:green b. color:#ff6600或color:f60 ff(red)66(green)00(blue) c. RGB——- color:rgb(0~255,0~255,0~255) d. RGBA——color:rgba(0~255,0~255,0~255,1) #其中A代表Alpha的（色彩空间）透明 字体属性 font-size字体大小，格式为：font-size:内容;内容有px:设置一个固定的值。%:父元素的百分比。smaller:比父元素更小。larger:比父元素更大。inherit:继承父元素的。 font-family字体类型，格式为：font-family:微软雅黑, serif;可以用&quot;,&quot;隔开，以确保当字体不存在的时候直接使用下一个。 font-weight字体加粗，格式为：font-weight:内容，内容有normal（默认值）、bold（粗）、bolder（更粗）、lighter（更细），也可以用100~900之间的整百数来表示，其中400=normal，700=bold。 font-style字体样式，font-style:内容，内容有normal（正常）、italic（斜体）、oblique（倾斜）、inherit（继承）。 font-variant小型大写字母显示文本，格式为：font-variant:内容，内容有normal（标准）、small-caps（小型大写字母显示文本）、inherit（继承）。 背景属性 背景颜色：background-color 背景图片：background-image background-image:url(图片路径) background-image:none 背景重复：background-repeat background-repeat:repeat 重复平铺满 background-repeat:repeat-x 向x轴重复 background-repeat:repeat-y 向y轴重复 background-repeat:no-repeat 不重复 背景位置：background-position:(x)(y) 横向（left,center,right） 纵向（top,center,bottom） 也可以为像素px。简写方式background:背景颜色 url(图像) 重复 位置 background:#f60 url(图片路径) no-repeat top center 文本属性 横向排列text-align:left,left、center、right 文本行高line-height:,%基于字体大小的百分比行高，数值来设置固定的值。 首行缩进text-indent:,%父元素的百分比，px固定值，默认为0，inherit继承。 字符间距letter-spacing:,normal默认，length设置具体的数值（可以设置为负值），inherit继承。 单词间距word-spacing:,normal标准间距，px固定值，inherit继承。 文本方向direction:,ltr从左到右，rtl从右到左，inherit继承。 文本大小写text-transform:,none默认，capitalize每个单词以大写字母开头，uppercase定义仅有大写字母，lowercase定义无大写字母，仅有小写字母，inherit规定应该从父元素继承text-transform属性的值。 边框属性 边框风格border-style:,统一风格border-style:，none无边框，solid直线边框，dashed虚线边框，dotted点状边框，double双线边框，groove凸槽边框，ridge垄状边框，inset inset边框，outset outset边框，inherit继承。单独定义某一方向的边框样式: 1234border-bottom-style 下边边框样式border-top-style 上边框样式border-left-style 左边边框样式border-right-style 右边边框样式 边框宽度border-width:,统一风格border-width:,单独风格border-top-width上边边框宽度,border-bottom-width下边边框宽度,border-left-width左边边框宽度,border-right-width右边边框宽度。边框宽度属性值：thin 细边框、medium 中等边框、thick 粗边框、px 固定值边框、inherit 继承。 边框颜色border-color:,统一风格border-color:,单独风格border-top-color 上边框颜色，border-bottom-color 下边框颜色，border-left-color 左边框颜色，border-right-color 右边框颜色。边框颜色属性值：rgb(255,255,255)、rgba(255,255,255,0~1)、十六进制 #ff0000、继承inherit。属性值的四种情况：一个值：border-color:（上、下、左、右）；两个值：border-color:（上下）（左右）；三个值：border-color:（上）、（左、右）、（下）；四个值：border-color:（上）（下）（左）（右）；简写方式：border:solid 2px #f60。 列表属性 标记类型list-style-type:； 123456789101112131415161718192021none 无标记disc 默认，标记是实心圆circle 标记是空心圆square 标记是实心方快decimal 标记是数字decimal-leading-zero 0开头的数字标记（01，02，03等）lower-roman 小写罗马数字（i，ii，iii，iv，v等）upper-roman 大写罗马数字（I，II，III，IV，V等）lower-alpha 小写英文字母（a，b，c等）upper-alpha 大写英文字幕（A，B，C等）lower-greek 小写希纳字母（alpha，beta，gamma等）lower-latin 小写拉丁字母（a，b，c，d，e等）upper-latin 大写拉丁字母（A,B,C，D，E等）hebrew 传统的希伯来编号方式armenian 传统的亚美尼亚编号方式georgian 传统的乔治亚编号方式（an，ban，gan等）cjk-ideographic 简单的表意数字hiragana 标记是：a，i，u，e，o，ka，ki等。katakana 标记是：A，I，U，E，O，KA，KI等。hiragana-iroha 标记是：i，ro，ha，ni，ho，he，to等。katakana-iroha 标记是：I，RO，HA，NI，HO，HE，TO等。 标记的位置list-style-position:,inside列表项目标记放置在文本内，且环绕文本根据标记对齐。outside是默认值，保持标记位于文本的左侧。列表项目标记放置在文本以外，且环境文本不根据标记对齐。inherit规定应该从父元素继承list-style-position属性的值。 设置图像列表标记list-style-image:,url(图像路径)，none默认，无图形被显示。inherit规定应该从父元素继承list-style-image属性的值。 简写方式：list-style:square inside url(&#39;/i/arrow.jpg&#39;); 5.div+css布局 div和span，div和span在整个HTML标记中，没有任何意义，他们的存在就是为了应用CSS样式，div和span的区别在于，span是内联元素，div是块级元素。div是块状，而span只是内容大小。 盒模型： 12345margin 盒子外边框padding 盒子内边框border 盒子边框宽度width 盒子宽度height 盒子高度 布局相关的属性 定位方式position 12345relative 正常定位absolute 根据父元素进行定位fixed 根据浏览窗口进行定位static 没有定位inherit 继承2. 定位left（左）、right（右）、top（上）、bottom（下）离页面顶点的距离。如：right:20px;为距离右边边框20像素。 z-index层覆盖先后顺序（优先级）如：z-index:2。 display显示属性，层不显示display:none;块状显示，在元素后面换行，显示下一个块元素display:block;内联显示，多个快可以显示在一行内display:inline;从内联式到块样式之间的转换。 float浮动属性，left左浮动；right右浮动； clear 清除浮动，clear:both; overflow溢出处理，hidde影藏超出层大小的内容；scroll无法显示内容是否超出层大小都添加滚动条；auto超出时自动添加滚动条。 兼容问题 兼容性测试工具：IE Tester、Multibrowser 常用的浏览器：Google chrome、Firefox、opera 高效开发工具：轻量级工具：Notepad++、sbulime Text、记事本，重量级的：WebStorm、Dreamweaver。 网页设计工具：fireworks、photoshop。 判断IE的方法： 条件判断格式&lt;!--[if 条件 版本]&gt; 那么显示 &lt;![endif]--&gt;。 不等于[if !IE 8]表示出来IE8都可以显示 小于[if lt IE 8]表示如果IE浏览器版本小于8的显示 大于[if gt IE 8]表示如果IE浏览器版本大于8的显示 小于或等于[if lte IE 8]表示如果IE浏览器版本小于8的显示 大于或等于[if gte IE 8]表示如果IE浏览器版本大于8的显示 大于和小于之间[if (gt IE 5)&amp;(lt IE 7)]表示如果IE浏览器版本大于IE5小于7的显示 或[if (IE 6)|(IE 7)]表示如果是IE6或者IE7显示 仅&lt;!–[if IE 8]&gt;表示如果是IE8 注意：条件注释只有在IE浏览器下才能执行，这样就达到了我们的效果]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo源码上传到Github上同一仓库]]></title>
    <url>%2F2019%2F04%2F01%2FHexo%E6%BA%90%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0Github%E4%B8%8A%E5%90%8C%E4%B8%80%E4%BB%93%E5%BA%93%2F</url>
    <content type="text"><![CDATA[在使用 Hexo 来写博客的时候，我们想在其他电脑操作上很难，那么我们如果将其放在GitHub上托管，那么就没有那么多麻烦。我们将博客搭建在 GitHub 上后，当我们使用 hexo g -d 部署到 GitHub 上以及网页上，其实没有把我们编写的 xxx.md 原博客文档上传到Github，而只是生成一些博客需要的静态的页面。但我们万事都想安全一点，假设我们硬盘坏了，数据无法恢复，那么我们的博客源文档也会不见，所以最好我们是把源代码也托管到 GitHub 上， 这个也有一个好处就是你在其他电脑上也可以同步编写博客。 你如果想把源代码上传至GitHub，那么可以上传至GitHub上的仓库，但是我们在建立博客时就已经创建了一个仓库，再创仓库就不方便管理与规划。本文说的前提是你已经建立了github pages——就是利用github搭建了个人博客。 在你的仓库下创建分支 更改默认分支 创建本地分支目录在本地磁盘新建一个文件夹（文件夹名随便只要你自己能找到和辨别出就行）用作放即将上传至仓库新建分支sourse（我建立的分支，即你自己建立分支的名字），进入文件夹，鼠标右键选择Git Bash Here 将你要上传的源代码文件和你想上传的文件粘贴到刚才创建的文件夹。 添加项目我在这里添加了几张图片和hello-world.md文件 执行命令进入上面的Git Bash Here里面输入以下命令 你可以直接克隆你的项目到目录下。 git clone https://github.com/yourname/yourname.github.io.git 然后将文件移动到新建的yourname.github.io（就是执行上面命令后产生的）文件夹里面，再在这里面打开Git Bash Here，再输入以下命令 12345678910git remote add origin https://github.com/yourname/yourname.github.io.git如果出错提示你已经有了origin可以输入以下命令git remote rm origingit add .git commit -m &quot;your description&quot;git push origin sourse如果出错就可以输入以下命令git pull origin sourse或者直接强行输入git push origin sourse -f 配置确认你的 _config.yml 配置是提交到 master 分支 1234deploy: type: git repository: git@github.com:yourname/yourname.github.io.git branch: master 结果 通过结果可以看出来在sourse文件夹下面的yourname.github.io文件夹里面的内容军上传至Github上yourname仓库的sourse分支下。 新增文件上传方法将添加文件放入到本地仓库分支里面也就是sourse文件夹下面的yourname.github.io文件夹下 然后在里面进行Git Bash Here输入以下命令 add .123git add .git commit -m &quot;your description&quot;git push origin sourse -f 我相信大家已经配置好了博客，如果没配置可以参考我的另一篇Hexo+GitHub搭建博客 文件参考：保存 Hexo 博客源码到 GitHub]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用python网络爬虫爬取英雄联盟英雄图片]]></title>
    <url>%2F2019%2F03%2F28%2Fpython%E7%88%AC%E5%8F%96lol%E7%9A%AE%E8%82%A4%2F</url>
    <content type="text"><![CDATA[用python爬虫爬取lol皮肤。 这也用python网络爬虫爬取lol英雄皮肤，忘了是看哪个大神的博客（由于当时学了下就一直放在这儿，现在又才拿出来，再加上马上要考二级挺忙的。），代码基本上是没改，还望大神原谅。本人小白，没学过Python，只是去尝试体python爬虫的感觉和经验，正准备学python。忘大神勿喷。来一句：“人生苦短，我用python”。 先上一波图 个人感觉还是挺好的。下面我们就来学习一下怎样爬取？ 所需要的函数库有json re（正则表达式库） requests和time是python自带的 其中只有requests需要通过cmd命令行安装，安装方法就是在python安装目录下用cmd命令行输入下面字符 pip Install requests 由于我已经安装过了，所以提示我已经安装了。 第一步是获取英雄id ID的获取地址是从英雄联盟官网F12后在Network里找到champion.js，具体地址如下 http://lol.qq.com/biz/hero/champion.js json12345678910111213141516171819import reimport requestsimport timedef getLOLImages(): header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36&apos;&#125; url_js = &apos;http://lol.qq.com/biz/hero/champion.js&apos; #获取JS源代码 Str bytes res_js = requests.get(url_js).content #转码 转成字符串 html_js = res_js.decode() #正则表达式 req = &apos;&quot;keys&quot;:(.*?),&quot;data&quot;&apos; list_js = re.findall(req,html_js) #转成dict dict_js = json.loads(list_js[0]) print(type(dict_js)) #定义图片列表 pic_list = [] for key in dict_js: printkey)#英雄ID 第二步就是拼接URL了，通过发现英雄皮肤url的取名方式，我们可以方向最后的数字是不同的。让后通过此方法来获取图片地址。 12345678910for i in range(20): number = str(i) if len(number) == 1: hero_num = &quot;00&quot;+number elif len(number) == 2: hero_num = &quot;0&quot;+number numstr = key+hero_num url = &quot;http://ossweb-img.qq.com/images/lol/web201310/skin/big&quot;+numstr+&quot;.jpg&quot; #http://ossweb-img.qq.com/images/lol/web201310/skin/big81000.jpg pic_list.append(url) 第三步是获取图片名称，path那行是放置图片的地址，注意结尾的\\不能丢。路径要设置成自己的。 123456list_filepath = [] path = &quot;D:\Pycharmdaima\Pachong\LOLTU\\&quot;for name in dict_js.values(): for i in range(20): file_path = path+name+str(i)+&apos;.jpg&apos; list_filepath.append(file_path) 第四步就是下载图片了，注释掉time.sleep（1）后会加速爬取速度 但是可能被腾讯中断爬取。 12345678910n = 0for picurl in pic_list: res = requests.get(picurl) n += 1 #获取状态码 if res.status_code == 200: print(&quot;正在下载%s&quot;%list_filepath[n]) time.sleep(1) with open(list_filepath[n],&apos;wb&apos;) as f: f.write(res.content) 下面是全部代码: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859import jsonimport reimport requestsimport time#获取JS源代码 获取英雄ID#拼接URL地址#获取图片下载地址#下载图片#驼峰命名法#获取英雄图片def getLOLImages(): header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36&apos;&#125; url_js = &apos;http://lol.qq.com/biz/hero/champion.js&apos; #获取JS源代码 Str bytes res_js = requests.get(url_js).content #转码 转成字符串 html_js = res_js.decode() #正则表达式 req = &apos;&quot;keys&quot;:(.*?),&quot;data&quot;&apos; list_js = re.findall(req,html_js) #转成dict dict_js = json.loads(list_js[0]) # print(type(dict_js))​ #定义图片列表​ pic_list = []​ for key in dict_js: # print(key)#英雄ID​ #拼接URL​ for i in range(20):​ number = str(i)​ if len(number) == 1:​ hero_num = &quot;00&quot;+number​ elif len(number) == 2:​ hero_num = &quot;0&quot;+number​ numstr = key+hero_num​ url = &quot;http://ossweb-img.qq.com/images/lol/web201310/skin/big&quot;+numstr+&quot;.jpg&quot;​ #http://ossweb-img.qq.com/images/lol/web201310/skin/big81000.jpg​ pic_list.append(url)​ #获取图片名称​ list_filepath = []​ path = &quot;D:\Pycharmdaima\Pachong\LOLTU\\&quot;​ for name in dict_js.values():​ for i in range(20):​ file_path = path+name+str(i)+&apos;.jpg&apos;​ list_filepath.append(file_path)​ #下载图片​ n = 0​ for picurl in pic_list:​ res = requests.get(picurl)​ n += 1​ #获取状态码​ if res.status_code == 200:​ print(&quot;正在下载%s&quot;%list_filepath[n])​ time.sleep(1)​ with open(list_filepath[n],&apos;wb&apos;) as f:​ f.write(res.content)getLOLImages() 以下是我的部分代码 我对以上代码也是有点懵毕竟刚接触，如果大家有意要LOL皮肤的可以给在评论去找我。展示一下，我下了所有的哈哈。。。。。。。。 最后：大家学爬虫一定要遵守法律，切勿用作商用。 来自博主的忠告：博主提醒你，爬虫不规范，牢底坐穿，亲人两行泪！]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+GitHub搭建博客]]></title>
    <url>%2F2019%2F03%2F28%2FHexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[hexo+GitHub搭建博客 1.下载并安装Git,Node.jsGit(官网)Node.js（官网）下载就不说了。安装就傻瓜式安装，直接默认就行了！ 2.配置环境变量计算机---属性---高级系统设置---环境变量----打开用户变量---点击编辑---输入变量名和将node.js安装路径粘贴到变量值中---确定完成环境配置 3.新建空博客文件夹安装hexo，在空文件夹中点击鼠标右键点击Git bash here进入命令行,输入以下命令：1$ npm install hexo-cli -g 1$ hexo init blog 1$ cd blog 1$ npm install 1$ hexo g 1$ hexo s 界面上会有一个类似http://localhost:4000的网站,界面如下： 4.注册github账号github 5.创建一个仓库#####注： GithubPages的Repository名字是特定的，比如我Github账号是abc，那么我Github Pages Repository名字就是abc.github.io。 6.设置github pages点击进入你刚刚创建好的仓库，接着点击settings，进入仓库管理，选择主题，和选择来源为master，试试在浏览器的地址栏输入”你github的用户名.github.io”吧！ 7.SSH授权1$ ssh-keygen -t rsa 接着3次回车，这样就会在C盘用户目录下生成id_rsa和id_rsa.pub这两个文件打开id_rsa.pub，复制其中的全部内容，点击github头像，再点击setting选择SSH and GPG keys，再点击NEW SSH key，将刚才复制的内容粘贴到其中 8.在_config.yml中添加复制clone or download下的git地址1234deploy: type: git repository: git@github.com:github用户名/github用户名.github.io.git branch: master 9.回到命令窗口123$ npm install hexo-deployer-git --save$ hexo g$ hexo d 或者12$ npm install hexo-deployer-git --save$ hexo g -d 最后访问https://yourname.github.io例如：博客搭建初步完成]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VMware Workstation pro 15破解版安装]]></title>
    <url>%2F2019%2F03%2F26%2FVMware-15%E7%A0%B4%E8%A7%A3%E7%89%88%2F</url>
    <content type="text"><![CDATA[1.为什么要下载vmware？以及vmware是什么？俗话说“工欲善其事，必先利其器”，所以不管是学习Python还是运维以及网络安全，最好在Linux系统上。但是我们有只有一台电脑，装双系统又麻烦，所以选择在Windows上装一个虚拟机来分配一个假想的“电脑”。虚拟机主要有vxbox和vmware这两种，这里我们选择vmware，至于原因不说了。看看维基百科上面怎么说 VMware Workstation是VMware公司销售的商业软件产品之一。该工作站软件包含一个用于英特尔x86兼容计算机的虚拟机套装，其允许用户同时创建和运行多个x86虚拟机。每个虚拟机可以运行其安装的操作系统，如（但不限于）Windows、Linux、BSD变生版本。用简单术语来描述就是，VMware Workstation允许一台真实的计算机在一个操作系统中同时打开并运行数个操作系统，其它VMware产品帮助在多个宿主计算机之间管理或移植VMware虚拟机。免费版本为VMware Workstation Player。 也可以看看百度百科： VMware Workstation（中文名“威睿工作站”）是一款功能强大的桌面虚拟计算机软件，提供用户可在单一的桌面上同时运行不同的操作系统，和进行开发、测试 、部署新的应用程序的最佳解决方案。VMware Workstation可在一部实体机器上模拟完整的网络环境，以及可便于携带的虚拟机器，其更好的灵活性与先进的技术胜过了市面上其他的虚拟计算机软件。对于企业的 IT开发人员和系统管理员而言， VMware在虚拟网路，实时快照，拖曳共享文件夹，支持 PXE 等方面的特点使它成为必不可少的工 好了废话不多说了，有什么不懂自行百度就ok啦！下面言归正传 2.下载VMware Workstation Pro 15ZD423官网或者直接去百度上搜索。先看一下官网。。。。。哈哈 3.安装1.在下载目录下找到安装包并以管理员运行 2.在弹出的界面选择下一步 3.然后勾选我接受许可协议，然后点击下一步 4.点击更改选择自己要安装的位置 5.点击下一步 6.点击下一步 7.点击安装 9.点击许可证 10.输入许可证,在下面随便找一个注册码填到其中，再点击完成，完成安装 4.使用1.在桌面找到vmware workstation pro的快捷方式 2.vmware界面 5.成果我安装了国产deepin系统以及kali和ubuntu，给大家展示一下deepin国产系统 deepin介绍看百度百科 [1] Deepin 原名Linux Deepin，在2014年4月改名Deepin。Deepin团队基于Qt/C++（用于前端）和Go（用于后端）开发了的全新深度桌面环境（DDE），以及音乐播放器，视频播放器，软件中心等一系列特色软件。 Deepin是由武汉深之度科技有限公司开发的Linux发行版。Deepin 是一个基于 Linux 的操作系统，专注于使用者对日常办公、学习、生活和娱乐的操作体验的极致，适合笔记本、桌面计算机和一体机。它包含了所有您需要的应用程序，网页浏览器、幻灯片演示、文档编辑、电子表格、娱乐、声音和图片处理软件，即时通讯软件等等。Deepin 的历史可以追溯到 2004年，其前身 Hiweed Linux 是中国第一个基于 Debian的本地化衍生版，并提供轻量级的可用LiveCD，旨在创造一个全新的简单、易用、美观的 Linux 操作系统。 Deepin拥有自主设计的特色软件：深度软件中心、深度截图、深度音乐播放器和深度影音，全部使用自主的DeepinUI，其中有深度桌面环境，DeepinTalk（深谈）等。 Deepin是中国最活跃的 Linux 发行版，Deepin 为所有人提供稳定、高效的操作系统，强调安全、易用、美观。其口号为“免除新手痛苦，节约老手时间”。在社区的参与下，“让 Linux 更易用”也不断变成可以触摸的现实。 [2] 应用商店有很多windows上常用的软件,甚至还有steam，这可以说非常适合热衷于游戏党了！可以看到他还有编程开发分类页，这上面有很多软件像Pycharm等这些软件，这不需要太多Linux命令，还是汉语，上面还有终端，可以说非常适合小白和新手入门Linux。 让我们来看一下deepin上的终端 可以说相当漂亮还有多种主题选择 最后给一个deepin系统下载地址：deepin镜像 注册码： AZ7MK-44Y1J-H819Z-WMYNC-N7ATF CU702-DRD1M-H89GP-JFW5E-YL8X6 YY5EA-00XDJ-480RP-35QQV-XY8F6 UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA VF750-4MX5Q-488DQ-9WZE9-ZY2D6 UU54R-FVD91-488PP-7NNGC-ZFAX6 YC74H-FGF92-081VZ-R5QNG-P6RY4 YC34H-6WWDK-085MQ-JYPNX-NZRA2]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Html+css基础语法]]></title>
    <url>%2F2019%2F03%2F22%2Fhtml-css%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Html标记语言目录Html标记语言1.Html语法1.什么是html语言2.Html的标记和属性 语法不区分大小写 2.html的基本结构 1.&lt;html&gt;内容&lt;/html&gt; 2.&lt;head&gt;内容&lt;/head&gt; 3.&lt;title&gt;内容&lt;/title&gt; 4.&lt;body&gt;内容&lt;/body&gt; 5.&lt;meta&gt; 3.文档设置标记 1.格式标记 2.文本标记 4.图形标记 使用方法 2.注意 3.&lt;img&gt;标记属性 5.超链接的使用 6.表格 1.&lt;table&gt;…&lt;/table&gt;标记 2.&lt;caption&gt;…&lt;/caption&gt;标记 3.&lt;tr&gt;…&lt;/tr&gt;表记 7.框架 1.&lt;frameset&gt;划分框架标记： 2.&lt;frame&gt;子窗口标记： 8.表单 1.表单标记： 2.文本域和密码： 3.提交、重置、普通按钮： 4.单选框和复选框： 5.隐藏域： 6.多行文本域： 7.菜单下拉域： 1.Html语法1.什么是html语言超文本标记语言，标准通用标记语言下的一个应用。是 网页制作必备的编程语言。超文本”就是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素。超文本标记语言的结构包括“头”部分（英语：Head）、和“主体”部分（英语：Body），其中头”部提供关于网页的信息，“主体”部分提供网页的具体内容。2.Html的标记和属性HTML保存格式 .html .htm .xhtml标记和被标记的内容构建出HTML文档 &lt;标记&gt; 内容 &lt;/标记&gt;标记属性 就是用来控制我们的内容如何显示 格式：&lt;标记 属性1=属性值 属性2=属性值……….&gt;内容&lt;/标记&gt; 语法不区分大小写a. &lt;HTML&gt;,&lt;Html&gt;,&lt;html&gt;都是一样的意义，但是尽量使用小写 文档注释a.&lt;!—注释内容--&gt; 代码格式a.空格键和回车键在网页中都不起作用 b.使用Tab键进行缩进！ 字符实体a.什么是字符实体？字符实体通俗讲就是网页文件中复杂的符号代码和一些标点的代码。例如小于号 &lt; 大于号 &gt; 双引号 “这些符号要在浏览器中显示，在HTML文档中都必需被转化成字符实体。字符实体有三部分：一个和号 (&amp;)，一个实体名称及一个分号（；），或者 # 和一个实体编号，以及一个分号 (;)。b.常见字符实体1234567891011121314151617显示结果 描述 实体名称 实体编号 空格 &amp;nbsp; &amp;#160;&lt; 小于号&amp;lt; &amp;#60;&gt; 大于号&amp;gt; &amp;#62;&amp; 和号 &amp;amp; &amp;#38;&quot; 引号 &amp;quot; &amp;#34;&apos; 撇号 &amp;apos; (IE不支持)&amp;#39;￠ 分（cent） &amp;cent; &amp;#162;£ 镑（pound） &amp;pound; &amp;#163;¥ 元（yen） &amp;yen; &amp;#165;€ 欧元（euro） &amp;euro; &amp;#8364;§ 小节 &amp;sect; &amp;#167;© 版权（copyright） &amp;copy; &amp;#169;® 注册商标 &amp;reg; &amp;#174;™ 商标 &amp;trade; &amp;#8482;× 乘号 &amp;times; &amp;#215;÷ 除号 &amp;divide; &amp;#247; 2.html的基本结构1.&lt;html&gt;内容&lt;/html&gt;Html文档的文档标记，也称为html的开始标记。分别位于网页最前端和最后段，&lt;html&gt;表示网页开始，&lt;/html&gt;表示网页的结束。2.&lt;head&gt;内容&lt;/head&gt;Html文件头标记，也称为html头信息开始标记。用来包含文件的基本信息，比如网页的标题、关键字。在其中可以放入&lt;title&gt;……&lt;/title&gt;、&lt;meta&gt;、&lt;style&gt;……&lt;/style&gt;等标记。3.&lt;title&gt;内容&lt;/title&gt;Html文件标题标记，网页的“主题”，显示在浏览器的窗口的左上角，应当注意网页的标题不能太长，像百度这种短小精悍。4.&lt;body&gt;内容&lt;/body&gt;HTML文档的主体标记，可以包含多个标记。例如：&lt;p&gt;&lt;/p&gt;、&lt;h1&gt;&lt;/h1&gt;、&lt;br&gt;&lt;/br&gt;等标记来组成我们看见的网页。Body标记常见属性：bgcolor—————–设置背景颜色———&lt;body bgcolor=&quot;blue&quot;&gt;&lt;/body&gt;text——————–设置文本颜色———-&lt;body text=&quot;red&quot;&gt;&lt;/body&gt;link———————设置连接颜色———&lt;body link=&quot;red&quot;&gt;&lt;/body&gt;vlink——————–已经访问了的链接颜色–&lt;body vlink=&quot;yellow&quot;&gt;&lt;/body&gt;alink——————–正在被点击的链接颜色–&lt;body alink=&quot;red&quot;&gt;&lt;/body&gt;5.&lt;meta&gt;页面的元信息，提供有关页面的元信息，比如针对搜索引擎和更新频度的描述和关键词 ` `1其中常用的name属性有author、keyworlds、description、others。&lt;meta&gt;必须放在head元素里面。&lt;meta charset=”utf-8”&gt;来设置编码格式。 3.文档设置标记1.格式标记123456789101112131415161718192021222324&lt;br&gt;强制换行标记&lt;p&gt;换段落标记&lt;center&gt;居中对齐标记&lt;pre&gt;预格式化标记&lt;li&gt;列表项目标记&lt;ul&gt;无序列表标记&lt;ol&gt;有序列表标记---&#123; &lt;ol type=”符号类型”&gt; &lt;li type=”符号类型“&gt;&lt;/li&gt; &lt;li type=”符号类型”&gt;&lt;/li&gt; ………………………………… ………………………………&lt;/ol&gt; &#125;Type属性值：1、A、a、I、iValue定义一个新的序列数字起始值，列表可以嵌套。&lt;dl&gt;&lt;dt&gt;&lt;dd&gt;对列表条目进行简短的说明，格式：&lt;dl&gt;&lt;dt&gt;软件说明：&lt;/dt&gt;&lt;dd&gt;简单介绍软件的功能及基本应用&lt;/dd&gt;&lt;dt&gt;软件界面&lt;/dt&gt;&lt;dd&gt;用于选择软件的外观&lt;/dd&gt;&lt;/dl&gt;&lt;hr&gt;分割线————————————————————————————&lt;div&gt;分区显示标记，也称之为层标记，常用来编排一大段的html段落，也可以用于格式化表，和&lt;p&gt;很相似，可以多层嵌套使用。 2.文本标记&lt;hn&gt;&lt;/hn&gt;，标题标记，n为1到6个级别，h1最大，h6最小；&lt;font&gt;&lt;/font&gt;，字体设置标记，有size（字体大小）、color（颜色）、face（字体）。例如：。Size从1到7；12345678910&lt;b&gt;&lt;/b&gt;粗体标记；&lt;i&gt;&lt;/i&gt;斜体标记；&lt;cite&gt;&lt;/cite&gt;引用方式的字体，斜体；&lt;em&gt;&lt;/em&gt;表示强调，斜体；&lt;sub&gt;&lt;/sub&gt;文字下标字体标记；&lt;sup&gt;&lt;/sup&gt;文字上标字体标记；&lt;strong&gt;&lt;/strong&gt;表示强调，粗体；&lt;small&gt;&lt;/small&gt;小型字体标记；&lt;big&gt;&lt;/big&gt;大型字体标记;&lt;u&gt;&lt;/u&gt;下划线字体标记； 4.图形标记&lt;img&gt;图像标记 使用方法&lt;img src=”路径/文件名.图片格式或者图片网址” width=”属性值” height=”属性值” border=”属性值” alt=”属性值”&gt;2.注意&lt;img&gt;为单标记；3.&lt;img&gt;标记属性1.src属性：指定我们要加载的图片的路径和图片名称和格式2.width属性：指定图片的宽度，单位为px、em、cm、mm。3.height属性：指定图片高度，单位为px、em、cm、mm。4.border属性：指定图片的边框宽度，单位为px、em、cm、mm。5.alt属性：当网页上的图片被加载完成后，鼠标移动到上面去，会显示这个图片指定的属性文字。如果图像没有下载或者加载失败，会用文字来代替图像显示。搜索引擎可以通个这个属性的文字来抓取图片。5.超链接的使用1.基本语法&lt;a href=” ” target=”打开方式” name=“页面锚点名称” &gt;链接文字或者图片&lt;/a&gt;2.属性1.href属性：链接的的地址，链接的地址可以是一个网页，也可以是一个视频、图片、音乐等等。2.target属性：定义超链接的打开方式_blank 在一个新的窗口中打开链接；_seif(默认值)在当前页面打开；_parent 在父窗口中打开页面_top 在顶层窗口中打开文件3.name属性：指定页面的的锚点名称；6.表格1.&lt;table&gt;…&lt;/table&gt;标记1.基本格式：123456789101112131415 &lt;table width=&quot;960&quot; …… height=&quot;300&quot;(属性=”属性值”) &gt; &lt;caption&gt;表格标题&lt;/caption&gt; &lt;tr&gt; &lt;th&gt;班级&lt;/th&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;th&gt;成绩&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;四年级一班&lt;/td&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;16&lt;/td&gt; &lt;td&gt;80&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 2.table标记的属性： 1.width表示表格宽度，单位px、%。 2.height 表示表格的高度，单位px、%。 3.border 表示表格外边框的宽度，单位 4.align属性 表格显示的位置。如：align=“left”，其中left可以为center、right，默认是left。 5.cellspacing 单元格之间的间距，默认值是2px，单位为px像素。 6.cellpadding 单元格内容与单元格边框的显示距离，单位像素。 7.frame 控制表格边框最外层的四条线框：1234567891.void：默认值，表示无边框2.above：表示仅有顶部边框3.below：表示仅有底部边框4.hsides：表示仅有顶部和底部边框5.lhs：表示仅有左侧边框6.rhs：表示仅有右侧边框7.vsides：表示仅有左右侧边框8.box：表示包含全部4个边框9.border：表示包含全部4个边框 8.rules 控制单元是否显示以及如何显示单元格之间的分割线：123451.none 表示无分割线2.all 表示包括所有分割线3.rows 表示仅有行分割线4.clos 表示仅有列分割线5.groups 表示仅在行组和列祖之间有分割线 2.&lt;caption&gt;…&lt;/caption&gt;标记即表格标题标记，位于&lt;table&gt;之后，&lt;tr&gt;之前。有align属性，使用格式为&lt;caption align=”top”&gt;。top可以为bottom（表格的下部）、left（表格的左部）、right（表格的右部）。3.&lt;tr&gt;…&lt;/tr&gt;标记定义表格的一行，对于每一个表格行，都是由一对…标记表示，每一行标记内可以嵌套多个或者标记。1231.bgcolor 设置背景颜色，bgcolor=”颜色值”2.align 设置垂直方向对齐方式，align=“值”，值为top（靠底部对齐）、bottom（靠顶端对齐）、middle（居中对齐）。3.valign 设置水平方向对齐方式，valign=”值”，值为left（靠左对齐）、right（靠右对齐）、center（居中对齐）。 4.&lt;td&gt;和&lt;th&gt;标记&lt;td&gt;和&lt;th&gt;都是单元格的标记，其必须嵌套在&lt;tr&gt;标签内，是成对出现的，&lt;th&gt;是表头标记，通常位于首行或者首列，&lt;th&gt;中的文字默认会被加粗，而&lt;td&gt;不会，&lt;td&gt;是数据标记，表示该单元格的具体数据。属性有bgcolor、align、valign、width、height、rowspan(单元格所占行数)、colspan（单元格所占列数）。7.框架框架将浏览器划分成不同的部分，每一个部分加载不同的网页，实现在同一浏览器窗口中加载多个页面的效果。格式为：1234567891011121314&lt;html&gt; &lt;head&gt; &lt;title&gt;HTML框架&lt;/title&gt; &lt;meta=&quot;utf-8&quot;&gt; &lt;frameset rows=&quot;90,*,90&quot; frameborder=&quot;1&quot; border=&quot;1&quot;&gt; &lt;frame name=&quot;top&quot; src=&quot;top.html&quot;/&gt; &lt;frameset cols=&quot;30%,70%&quot;&gt; &lt;frame name=&quot;left&quot; src=&quot;left.html&quot;/&gt; &lt;frame name=&quot;right&quot; src=&quot;right.html&quot; scrolling=&quot;auto&quot;/&gt; &lt;/frameset&gt; &lt;frame name=&quot;bottom&quot; src=&quot;bottom.html&quot;/&gt; &lt;/frameset&gt; &lt;/head&gt;&lt;/html&gt; 1.&lt;frameset&gt;划分框架标记：cols：分割左右窗口，’*’表示剩余部分，’*’,’*’表示均分成两个，’*,’*’,’*’表示均分成三个，单位为像素和%比。rows：分割上下窗口，’*’表示剩余部分，’*’,’*’表示均分成两个，’*,’*’,’*’表示均分成三个，单位为像素和%比。frameborder：指定是否显示边框，0表示不显示边框，1表示显示边框。border：设置边框的大小，默认值为5像素。2.&lt;frame&gt;子窗口标记：在&lt;frameset&gt;中设置了几个窗口，就必须对应使用几个&lt;frame&gt;框架，而且还必须使用src属性指定一个网页。src：加载网页文件的URL地址；name: 框架名称，是链接标记的target所要参数；noresize：表示不能调节框架大小，没有设置时可以调整；scrolling：是否需要滚动条，根据需要可以选择yes（表示有滚动条）、no（表示无滚动条）、auto（表示根据需要自动出现）。frameborder：是否需要边框，1表示显示边框，0表示不显示边框。8.表单1.表单标记： &lt;form&gt; &lt;/form&gt;定义表单开始和结束位置，表单提交时的内容就是&lt;form&gt;表单中的内容。基本格式&lt;form action=”服务器端地址（接受表单内容的地址）” name=”表单名称” method=“post或者get“&gt;…&lt;/from&gt;。name为表单名称，method为传送数据的方式，分为post和get两种方式，get方式提交时，会将表单的内容附加在URL地址的后面，所以限制了提交内容的长度，不超过8192个字符，且不具备保密性。post方式提交时，将表单中的数据一并包含在表单主体中，一起传送到服务器中处理，没有数据大小限制，且具有保密性,默认是get方式。action是指表单数据的处理程序的URL地址，如果为空则使用当前文档的URL地址，如果表单中不需要使用action属性也要指定其属性为”no”。enctype设置表单的资料的编码方式。Target用来指定目标窗口，和超链接的属于类似。2.文本域和密码：&lt;input&gt;标记是单标记没有结束标记。&lt;input type=”” name=”” value=”” size=”” maxlength=””&gt;。type属性有text和password两种，type=”text”时，&lt;input&gt;表示一个文本输入域，type=”password”时，&lt;input&gt;表示一个密码域。name属性定义控件的名称。value属性表示初始化值，打开浏览器时，文本框中的内容。size属性设置控件的长度。maxlenght属性表示输入框中最大允许输入的字符数。3.提交、重置、普通按钮：123提交按钮： &lt;input type=”submit”&gt;;重置按钮： &lt;input type=”reset”&gt;普通按钮： &lt;input type=”button”&gt; 4.单选框和复选框：&lt;input type=”radio”&gt; ————&gt;除了初值为两个都没选，其余要选则必须选一个，且只能是一个；&lt;input type=”checkbox”&gt; ———&gt;可以选一个也可取消，或可两个都选和不选；&lt;input type=”radio” checked=”checked”&gt; ——&gt;checked为默认选项；5.隐藏域：&lt;input type=”hidden”&gt; ————&gt;隐藏表单域；6.多行文本域：&lt;textarea name=”name” rows=”n” cols=”n” value=”……”&gt;…&lt;/textarea&gt;，n指数值，rows属性指行数，cols属性指列数，单位是字符个数。7.菜单下拉域：1234567&lt;select name=”” size=”value” multiple&gt; ——&gt;multiple表示多选 &lt;option value=”value” selected&gt; value &lt;/option&gt; &lt;option value=”value”&gt; value &lt;/option&gt;&lt;option value=”value”&gt; value &lt;/option&gt; …………………………………………………………&lt;option value=”value”&gt; value &lt;/option&gt;&lt;/select&gt; &lt;option&gt;标记用来指定列表中的的一个选项，需要放在&lt;select&gt;&lt;/select&gt;之间，给选项赋值，指定传送到服务器上面的值，selected指定默认选项值。]]></content>
      <categories>
        <category>html+css</category>
      </categories>
      <tags>
        <tag>html+css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SecureCRT的安装与破解]]></title>
    <url>%2F2019%2F03%2F15%2FSecureCRT%2F</url>
    <content type="text"><![CDATA[1.下载securecrtsecurecrt下载地址: 百度网盘 提取码: fbmi 复制这段内容后打开百度网盘手机App，操作更方便哦!软件资源取自ZD423,也可以去ZD423去下载!ZD423官网找到自己要下的对应的版本下载 2. 安装 将下载下来的软件解压，然后安装scrt_sfx833-x64 选择complete 添加桌面快捷方式 安装完成 安装完成后，可以看到桌面已经有了快捷方式，先别忙打开软件 将Crack文件夹或者keygen.exe复制到SecureCRT安装路径：c &gt; program &gt; VanDyke Software &gt; Clients 以管理员身份运行keygen.exe 点击Patch，如果出现We are sorry ……………,那么就关掉重新点击注册机上的Generate按钮更换注册码，直到成功出现Path has been done successfully!字样代表成功了。 注意： 点击确定按钮后会再弹出一个界面选择LicenseHelper.exe,然后会出现同样成功的字样。 再点击桌面上的快捷方式就会弹出 一个服务器连着电脑的图形界面就成功了。3.SecureCRT的使用 在连接之前，你与要到你的Linux系统上去开启sshd服务在终端输入sudo apt-get install openssh-server 终端上显示:ssh start/running, process 2425就表示安装好了。 在终端上输入命令ifconfig 找到你虚拟机的ip，然后将IP复制到以下界面中的Hostname 然后连接进行测试，由于我使用的是ubuntu 找到SecureCRT的设置及Session Options进行设置 文件传输Zmodem先在终端上输入命令进行安装：sudo apt-get install lrzsz 从windows上传文件至linux：rz 从linux上传文件至windows：sz filename,然后在windows上的Downloads]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>软件安装</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown语法的介绍]]></title>
    <url>%2F2019%2F03%2F11%2Fmarkdown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[怎样在网站上书写我们的第一篇博客吧 一、创建文章在站点文件夹中打开 git bash，输入如下命令创建文章，其中 name 为文章的标题1$ hexo new &quot;name&quot; 当输入命令后，就会在 source/_post 文件夹下创建一个文件，命名为：name.md这个文件就是将要发布到网站上的原始文件，用于记录文章内容 二、编写文章（基于 Markdown）1、Markdown 简介Markdown 是一种可以使用普通文本编辑器编写的 标记语言，通过简单的 标记语法，它可以使普通文本内容具有一定的格式基于 Markdown 语法的简洁性，它已经成为目前世界上最流行的用于书写博客的语言 2、Markdown 语法Typora-Markdown编辑器简单而强大，支持原生的语法，也支持对应的快捷键，还可以 实时预览 Typora 的下载地址：https://www.typora.io/ 三、常用的 Markdown 语法1.标题Markdown 语法： #一级标题 ##二级标题 ###三级标题 ####四级标题 #####五级标题 ######六级标题Typora 快捷键：Ctrl+1：一级标题Ctrl+2：二级标题Ctrl+3：三级标题Ctrl+4：四级标题Ctrl+5：五级标题Ctrl+6 ：六级标题Ctrl+0：段落 2.粗体、斜体、删除线和下划线Markdown 语法：1234*斜体***粗体*****加粗斜体***~~删除线~~ Typora 快捷键：Ctrl+I：斜体Ctrl+B：粗体Ctrl+U：下划线Alt+Shift+5：删除线 3.引用块Markdown 语法：12&gt; 文字引用Typora 快捷键： Ctrl+Shift+Q 4.代码块Markdown 语法：1`行内代码` 1``` 多行代码 ``` Typora 快捷键： 行内代码：Ctrl+Shift+` 多行代码：Ctrl+Shift+K 5.公式块Markdown 语法：123$$ 数学公式$$ Typora 快捷键： Ctrl+Shift+M 6.分割线Markdown 语法：12345方法一:---方法二:+++方法三：*** 7.列表Markdown 语法：1234567.有序列表项*无序列表项+无序列表项-无序列表项 Typora 快捷键： 有序列表项：Ctrl+Shift+[ 无序列表项：Ctrl+Shift+] 8.表格Markdown 语法：1234表头1|表头2-|-|-内容11|内容12内容21|内容22 Typora 快捷键： Ctrl+T 9.超链接Markdown语法：12345方法一[](链接地址 &quot;链接描述&quot;)如[](https://www.example.com/ &quot;示例链接&quot;)方法二：&lt;链接地址&gt;如：&lt;https://www.example.com/&gt; Typora快捷键： Ctrl+K ##10.图片Markdown语法：12![图片文字](图片地址 &quot;图片描述&quot;)如：![示例图片](https://www.example.com/example.PNG &quot;示例图片&quot;) Typora快捷键： Ctrl+Shift+I 注: 安装插件 npm install hexo-asset-image –save 将 站点配置文件 中的 post_asset_folde: true 这样，当使用 hexo new name文章时，将同时在 source/_post 文件夹中生成一个 name文件夹，我们只需将图片放进此文件夹中，然后在文章中通过 Markdown语法写入如：在资源文件夹（就是那个与 name文件夹）中添加图片 example.PNG，则可以在对应的文章中使用语句 ![示例图片](title/example.PNG &quot;示例图片&quot;)添加图片 四、高级设置1.模板设置当我们使用命令 hexo new “title” 创建文章时，Hexo 会根据 /scaffolds/post.md 对新文章进行初始化换言之，/scaffolds/post.md 就是新文章的 模板，所以我们可以修改它来适应自己的写作习惯一个简单的示例如下：title: Markdown语法的介绍date: 1552301438923tags:categories: 2.头部设置在每篇利用 Hexo 创建的文章的开头，都会有对文章进行说明的文字，叫做 文章头部文章的头部除了可以设置文章标题、发布日期等基础信息外，还可以为文章添加标签、分类等一个简单的示例如下：title: Titledate: YYYY-MM-DD HH:MM:SStags: [tag1, tag2, …]categories: category注意：属性和属性值之间必须有一个空格，否则会解析错误 3.首页显示在利用 Hexo 框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简这时，我们只需在文章中使用 标志即可，表示只会显示标志前面的内容 五、部署发布1$ hexo g -d 建议：在使用 hexo g 部署之后，可以先使用 hexo s 运行本地站点，然后在浏览器输入地址 http://lacolhost:4000/ 查看运行结果，检查无误后再使用 hexo d 发布]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
